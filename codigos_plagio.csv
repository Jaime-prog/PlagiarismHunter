name_file_1,java_code_1,name_file_2,java_code_2,similarity,problem,verdict
0017d438,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.*; public class A { static List<Integer> [] adj; static ArrayList<Integer> temp; static int mod = (int) 1e9+7; static boolean[] vis = new boolean[(int)1e5]; static List<Integer> l = new ArrayList<>(); static final Reader s = new Reader(); public static void main(String[] args) throws IOException { int t = s.nextInt(); while(t-->0) { int n = s.nextInt(); int m = s.nextInt(); int d = s.nextInt(); System.out.println(""YES""); PriorityQueue<Pair> pq = new PriorityQueue<>(); for(int i=1;i<=m;i++){ pq.add(new Pair(i)); } for(int i=0;i<n;i++){ int v = s.nextInt(); Pair p = pq.poll(); p.sum+=v; pq.add(p); System.out.print(p.id+"" ""); } System.out.println(); } } static class Pair implements Comparable<Pair> { int id; long sum=0; public Pair(int id) { this.id=id; } } }",9852706b,"import java.io.BufferedReader; import java.io.DataInputStream; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main { static int modulo=998244353; public static void main(String[] args) { FastScanner in = new FastScanner(); int test=in.nextInt(); while(test-->0){ int n=in.nextInt(); int m=in.nextInt(); int x=in.nextInt(); PriorityQueue<pair> pq=new PriorityQueue<>(); int arr[]=new int[n]; for(int i=1;i<=m;i++){ pq.add(new pair(i,0)); } System.out.println(""YES""); for(int i=0;i<n;i++){ pair p=pq.poll(); int a=in.nextInt(); p.y+=a; pq.add(p); System.out.print(p.x+"" ""); } System.out.println(); } } } class pair implements Comparable<pair> { int x; int y; pair(int x, int y) { this.x = x; this.y = y; } }",0.755270557029988,9,1
034030f3,"import java.util.*; import java.io.*; public class D_1525 { static int INF = (int)1e9; static int n, m; static int[] full, free; static int[][] memo; public static int dp(int i, int j) { if(i == n) return 0; if(j == m) return INF; if(memo[i][j] != -1) return memo[i][j]; return memo[i][j] = Math.min(dp(i, j + 1), Math.abs(free[j] - full[i]) + dp(i + 1, j + 1)); } public static void main(String[] args) throws Exception { Scanner sc = new Scanner(System.in); PrintWriter pw = new PrintWriter(System.out); int l = sc.nextInt(); int[] array = sc.nextIntArray(l); n = 0; for(int i = 0; i < l; i++) if(array[i] == 1) n++; m = l - n; full = new int[n]; free = new int[m]; int ind1 = 0, ind2 = 0; for(int i = 0; i < l; i++) if(array[i] == 0) free[ind2++] = i; else full[ind1++] = i; memo = new int[n][m]; for(int[] i : memo) Arrays.fill(i, -1); pw.println(dp(0, 0)); pw.flush(); } }",bf992c91,"import java.util.Arrays; import java.util.Scanner; public class P1525D { public static int[] ones, zeros; public static int[][] memo; public static void main(String[] args) { Scanner s = new Scanner(System.in); int n = s.nextInt(); int[] arr = new int[n]; int oneCount = 0; for (int i = 0; i < n; i++) { arr[i] = s.nextInt(); oneCount += arr[i] % 2; } int o = 0, z = 0; ones = new int[oneCount]; zeros = new int[n - oneCount]; for (int i = 0; i < n; i++) { if (arr[i] % 2 == 1) { ones[o++] = i; } else { zeros[z++] = i; } } memo = new int[oneCount][n - oneCount]; for (int[] row : memo) Arrays.fill(row, -1); System.out.println(dp(0, 0)); } public static int dp(int oi, int zi) { if (oi == ones.length) { return 0; } else if (zi == zeros.length) { return 100000000; } else { if (memo[oi][zi] == -1) { memo[oi][zi] = Math.min(Math.abs(ones[oi] - zeros[zi]) + dp(oi + 1, zi + 1), dp(oi, zi + 1)); } return memo[oi][zi]; } } }",0.5991895645236898,19,1
04df7bb8,"import java.math.BigInteger; import java.sql.Array; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.Comparator; import java.util.Deque; import java.util.HashMap; import java.util.HashSet; import java.util.InputMismatchException; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Scanner; import java.util.Set; import java.util.Stack; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class Main { static HashMap<Integer,Boolean>map; static long dp[][]; static boolean flag; static HashSet<Long>hs; static long mod=(long)(1e9+7); public static void main(String[] args) { StringBuilder ans=new StringBuilder(); FastReader sc=new FastReader(); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); long L[]=new long[n]; long R[]=new long[n]; int a[]=new int[k]; int temp[]=new int[k]; for(int i=0;i<k;i++) a[i]=sc.nextInt(); for(int i=0;i<k;i++) temp[i]=sc.nextInt(); int c[]=new int [n]; Arrays.fill(c, Integer.MAX_VALUE); for(int i=0;i<k;i++) c[a[i]-1]=temp[i]; long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1, c[i]); L[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--) { p=Math.min(p+1, c[i]); R[i]=p; } for(int i=0;i<n;i++) { ans.append(Math.min(L[i], R[i])+"" ""); } ans.append(""\n""); } System.out.println(ans); } }",1ea771ea,"import java.io.*; import java.util.*; public class CODECHEF { static long MOD=1000000000; static long[] solve(int[] pos,long[] arr,int n,int k){ long[] ans=new long[n]; long[] left=new long[n]; long[] right=new long[n]; long min=Integer.MAX_VALUE; for(int i=0;i<n;i++){ min=Math.min(min+1,arr[i]); left[i]=min; } min=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ min=Math.min(min+1,arr[i]); right[i]=min; } for(int i=0;i<n;i++){ ans[i]=Math.min(left[i],right[i]); } return ans; } public static void main(String[] args) throws java.lang.Exception { FastReader fs=new FastReader(System.in); int t=fs.nextInt(); while (t-->0){ int n=fs.nextInt(); int k=fs.nextInt(); int[] pos=new int[k]; for(int i=0;i<k;i++) pos[i]=fs.nextInt()-1; long[] temp=new long[n]; int ptr=0; Arrays.fill(temp,Integer.MAX_VALUE); for(int i=0;i<k;i++) temp[pos[ptr++]]=fs.nextLong(); long[] ans=solve(pos,temp,n,k); for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",0.4922306152783705,8,1
04df7bb8,"import java.math.BigInteger; import java.sql.Array; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.Comparator; import java.util.Deque; import java.util.HashMap; import java.util.HashSet; import java.util.InputMismatchException; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Scanner; import java.util.Set; import java.util.Stack; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class Main { static HashMap<Integer,Boolean>map; static long dp[][]; static boolean flag; static HashSet<Long>hs; static long mod=(long)(1e9+7); public static void main(String[] args) { StringBuilder ans=new StringBuilder(); FastReader sc=new FastReader(); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); long L[]=new long[n]; long R[]=new long[n]; int a[]=new int[k]; int temp[]=new int[k]; for(int i=0;i<k;i++) a[i]=sc.nextInt(); for(int i=0;i<k;i++) temp[i]=sc.nextInt(); int c[]=new int [n]; Arrays.fill(c, Integer.MAX_VALUE); for(int i=0;i<k;i++) c[a[i]-1]=temp[i]; long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1, c[i]); L[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--) { p=Math.min(p+1, c[i]); R[i]=p; } for(int i=0;i<n;i++) { ans.append(Math.min(L[i], R[i])+"" ""); } ans.append(""\n""); } System.out.println(ans); } }",85125ecb,"import java.io.*; import java.util.Arrays; import java.util.Hashtable; public class AirConditionersUpsolve{ static InputReader sc = new InputReader(); static OutputStream outputStream = System.out; static PrintWriter w = new PrintWriter(outputStream); private static void initiateIO() throws IOException {if (System.getProperty(""ONLINE_JUDGE"") == null) { try { w = new PrintWriter(""output.txt"");sc = new InputReader(new FileInputStream(""input.txt"")); } catch (Exception e) { throw new IOException(); }} } public static void main(String[] args) throws IOException { initiateIO(); int t = sc.nextInt(); while(t-- > 0) { solve(); } w.close(); } static void solve() throws IOException { int n = sc.nextInt(); int k = sc.nextInt(); int[] ac = new int[n+1]; Arrays.fill(ac, Integer.MAX_VALUE); int[] pos = new int[k+1]; for(int i = 1; i <= k; i++) { pos[i] = sc.nextInt(); } for(int i = 1; i <= k; i++) { int posi = pos[i]; int temp = sc.nextInt(); ac[posi] = temp; } long[] prev = new long[n+1]; long temp = Integer.MAX_VALUE; for(int i = 1; i <= n; i++) { temp = Math.min(temp+1, ac[i]); prev[i] = temp; } long[] next = new long[n+1]; temp = Integer.MAX_VALUE; for(int i = n; i > 0; i--) { temp = Math.min(temp+1, ac[i]); next[i] = temp; } for(int i = 1; i <= n; i++) { w.print(Math.min(prev[i], next[i])+"" ""); } w.println(); } }",0.5169158872846742,8,1
04df7bb8,"import java.math.BigInteger; import java.sql.Array; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.Comparator; import java.util.Deque; import java.util.HashMap; import java.util.HashSet; import java.util.InputMismatchException; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Scanner; import java.util.Set; import java.util.Stack; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class Main { static HashMap<Integer,Boolean>map; static long dp[][]; static boolean flag; static HashSet<Long>hs; static long mod=(long)(1e9+7); public static void main(String[] args) { StringBuilder ans=new StringBuilder(); FastReader sc=new FastReader(); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); long L[]=new long[n]; long R[]=new long[n]; int a[]=new int[k]; int temp[]=new int[k]; for(int i=0;i<k;i++) a[i]=sc.nextInt(); for(int i=0;i<k;i++) temp[i]=sc.nextInt(); int c[]=new int [n]; Arrays.fill(c, Integer.MAX_VALUE); for(int i=0;i<k;i++) c[a[i]-1]=temp[i]; long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1, c[i]); L[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--) { p=Math.min(p+1, c[i]); R[i]=p; } for(int i=0;i<n;i++) { ans.append(Math.min(L[i], R[i])+"" ""); } ans.append(""\n""); } System.out.println(ans); } }",aaccc000,"import java.io.*; import java.util.*; public class GFG { public static void main (String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-- > 0){ int n = sc.nextInt(); int k = sc.nextInt(); int[] a = new int[k]; int[] temp = new int[k]; for(int i=0;i<k;i++){ a[i] = sc.nextInt(); } for(int i=0;i<k;i++){ temp[i] = sc.nextInt(); } long[] c = new long[n]; Arrays.fill(c,Integer.MAX_VALUE); for(int i=0;i<k;i++){ c[a[i]-1] = temp[i]; } long p = Integer.MAX_VALUE; long[] left = new long[n]; for(int i=0;i<n;i++){ p = (p+1<c[i])?p+1:c[i]; left[i] = p; } p = Integer.MAX_VALUE; long[] right = new long[n]; for(int i=n-1;i>=0;i--){ p = (p+1<c[i])?p+1:c[i]; right[i] = p; } for(int i=0;i<n;i++){ long kl = (left[i]>right[i])?right[i]:left[i]; System.out.print(kl+"" ""); } System.out.println(); } } }",0.5368165649743689,8,1
04df7bb8,"import java.math.BigInteger; import java.sql.Array; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.Comparator; import java.util.Deque; import java.util.HashMap; import java.util.HashSet; import java.util.InputMismatchException; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Scanner; import java.util.Set; import java.util.Stack; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class Main { static HashMap<Integer,Boolean>map; static long dp[][]; static boolean flag; static HashSet<Long>hs; static long mod=(long)(1e9+7); public static void main(String[] args) { StringBuilder ans=new StringBuilder(); FastReader sc=new FastReader(); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); long L[]=new long[n]; long R[]=new long[n]; int a[]=new int[k]; int temp[]=new int[k]; for(int i=0;i<k;i++) a[i]=sc.nextInt(); for(int i=0;i<k;i++) temp[i]=sc.nextInt(); int c[]=new int [n]; Arrays.fill(c, Integer.MAX_VALUE); for(int i=0;i<k;i++) c[a[i]-1]=temp[i]; long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1, c[i]); L[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--) { p=Math.min(p+1, c[i]); R[i]=p; } for(int i=0;i<n;i++) { ans.append(Math.min(L[i], R[i])+"" ""); } ans.append(""\n""); } System.out.println(ans); } }",ee270b2a,"import java.util.*; public class D{ private static Scanner scanner = new Scanner(System.in); public static void main(String[] args){ int q = scanner.nextInt(); while(q-- > 0){ int n = scanner.nextInt(), k = scanner.nextInt(); int[] a = new int[k]; for(int i=0;i<k;i++){ a[i] = scanner.nextInt(); } int[] t = new int[k]; for(int j=0;j<k;j++){ t[j] = scanner.nextInt(); } long[] L = new long[n]; long[] R = new long[n]; for(int i=0;i<n;i++){ L[i] = Integer.MAX_VALUE; R[i] = Integer.MAX_VALUE; } for(int i=0;i<k;i++){ L[a[i]-1] = t[i]; R[a[i]-1] = t[i]; } long min = Integer.MAX_VALUE; for(int i=0;i<n;i++){ L[i] = Math.min(min+1,L[i]); min = L[i]; } min = Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ R[i] = Math.min(min+1,R[i]); min = R[i]; } for(int i=0;i<n;i++){ System.out.print(Math.min(L[i],R[i]) + "" ""); } System.out.println(); } } }",0.4704246042627867,8,1
04ed33a5,"import java.util.Scanner; public class Subsequence { private static Scanner sc = new Scanner(System.in); public static void main(String args[]) { int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[] = new int[n]; int b[] = new int[n]; for(int i=0;i<n;i++) { a[i]= sc.nextInt(); } if(n%2==0) { calculateB(a,b,n); } else { calculateB(a,b,n-3); if (a[n - 2] + a[n - 3] != 0) { b[n - 3] = -a[n - 1]; b[n - 2] = -a[n - 1]; b[n - 1] = a[n - 2] + a[n - 3]; } else if (a[n - 2] + a[n - 1] != 0) { b[n - 3] = a[n - 2] + a[n - 1]; b[n - 2] = -a[n - 3]; b[n - 1] = -a[n - 3]; } else { b[n - 3] = -a[n - 2]; b[n - 2] = a[n - 3] + a[n - 1]; b[n - 1] = -a[n - 2]; } } for(int i=0;i<n;i++) { System.out.print(b[i] + "" ""); } System.out.println(); } } private static void calculateB(int[] a, int[] b, int n) { for(int i=0;i<n-1;i=i+2) { b[i] = -a[i+1]; b[i+1] = a[i]; } } }",0c173033,"import java.io.*; import java.util.*; public class M { static Scanner scanner=new Scanner(System.in); public static void main(String[] args) { int t=scanner.nextInt(); while(t-->0) { int n=scanner.nextInt(); int a[]=new int [n]; int b[]=new int [n]; for(int i=0;i<n;i++)a[i]=scanner.nextInt(); for(int i=0;i+1<n;i+=2) { b[i]=-a[i+1]; b[i+1]=a[i]; } if(n%2==1) { int x=a[n-1],y=a[n-2],z=a[n-3]; if(x+y!=0) { b[n-3]=x+y; b[n-2]=-z; b[n-1]=-z; }else if(y+z!=0) { b[n-1]=y+z; b[n-2]=-x; b[n-3]=-x; }else { b[n-2]=x+z; b[n-1]=-y; b[n-3]=-y; } } StringBuilder sb=new StringBuilder(); for(int i=0;i<n;i++)sb.append(b[i]+"" ""); System.out.println(sb); } } }",0.797920854578339,17,1
04ed33a5,"import java.util.Scanner; public class Subsequence { private static Scanner sc = new Scanner(System.in); public static void main(String args[]) { int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[] = new int[n]; int b[] = new int[n]; for(int i=0;i<n;i++) { a[i]= sc.nextInt(); } if(n%2==0) { calculateB(a,b,n); } else { calculateB(a,b,n-3); if (a[n - 2] + a[n - 3] != 0) { b[n - 3] = -a[n - 1]; b[n - 2] = -a[n - 1]; b[n - 1] = a[n - 2] + a[n - 3]; } else if (a[n - 2] + a[n - 1] != 0) { b[n - 3] = a[n - 2] + a[n - 1]; b[n - 2] = -a[n - 3]; b[n - 1] = -a[n - 3]; } else { b[n - 3] = -a[n - 2]; b[n - 2] = a[n - 3] + a[n - 1]; b[n - 1] = -a[n - 2]; } } for(int i=0;i<n;i++) { System.out.print(b[i] + "" ""); } System.out.println(); } } private static void calculateB(int[] a, int[] b, int n) { for(int i=0;i<n-1;i=i+2) { b[i] = -a[i+1]; b[i+1] = a[i]; } } }",6b83b22e,"import java.util.Scanner; public class Subsequence { private static Scanner sc = new Scanner(System.in); public static void main(String args[]) { int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[] = new int[n]; int b[] = new int[n]; for(int i=0;i<n;i++) { a[i]= sc.nextInt(); } if(n%2==0) { calculateB(a,b,n); } else { calculateB(a,b,n-3); if (a[n - 2] + a[n - 3] != 0) { b[n - 3] = -a[n - 1]; b[n - 2] = -a[n - 1]; b[n - 1] = a[n - 2] + a[n - 3]; } else if (a[n - 2] + a[n - 1] != 0) { b[n - 3] = a[n - 2] + a[n - 1]; b[n - 2] = -a[n - 3]; b[n - 1] = -a[n - 3]; } else { b[n - 3] = -a[n - 2]; b[n - 2] = a[n - 3] + a[n - 1]; b[n - 1] = -a[n - 2]; } } for(int i=0;i<n;i++) { System.out.print(b[i] + "" ""); } System.out.println(); } } private static void calculateB(int[] a, int[] b, int n) { for(int i=0;i<n-1;i=i+2) { b[i] = -a[i+1]; b[i+1] = a[i]; } } }",1.0,17,1
05ca89ed,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.*; public class er106c { public static void main(String[] args) { FastReader sc=new FastReader(); try{ int t=1; t=sc.nextInt(); while(t-->0){ int n=sc.nextInt(); long o=n,e=n; long maxo=Integer.MAX_VALUE; long maxe=Integer.MAX_VALUE; long ans=Long.MAX_VALUE; long temp=0; int a[]=new int[n]; for(int i=0;i<n;i++){ a[i]=sc.nextInt(); } for(int i=0;i<n;i++) { if(i%2==1) { temp+=a[i]; e--; maxe=Long.min(maxe, a[i]); ans=Long.min(ans,temp+(o*maxo)+(e*maxe)); } else { temp+=a[i]; o--; maxo=Long.min(maxo, a[i]); ans=Long.min(ans,temp+(o*maxo)+(e*maxe)); } } System.out.println(ans); } }catch(Exception e){ return; } } static int mod=1000000007; static boolean primes[]=new boolean[1000007]; static ArrayList<Integer> b=new ArrayList<>(); }",163d0dde,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class aa { public static void main(String[] args) { FastReader d=new FastReader(); int t,i,j,c,z,k,l,n; int mod = (int) 1e9 + 7; int Inf=Integer.MAX_VALUE; int negInf=Integer.MIN_VALUE; t=d.nextInt(); while(t-->0) { z=c=0; n=d.nextInt(); int a[]=new int[n]; for(i=0;i<n;i++) a[i]=d.nextInt(); long p=0; long ans; long x,y; long e,o; ans=Long.MAX_VALUE; x=y=Integer.MAX_VALUE; e=o=n; for(i=0;i<n;i++) { if(i%2==1) { p+=a[i]; e--; x=Long.min(x, a[i]); ans=Long.min(ans,p+(o*y)+(e*x)); } else { p+=a[i]; o--; y=Long.min(y, a[i]); ans=Long.min(ans,p+(o*y)+(e*x)); } } System.out.println(ans); } } }",0.7588472721401573,18,1
079ad09e,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; import java.io.IOException; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); EAirConditioners solver = new EAirConditioners(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class EAirConditioners { public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(), q = in.nextInt(); int[] a = in.readArray(q); long[] t = in.readLongArray(q); long[] pref = new long[n + 2]; long[] suff = new long[n + 2]; Arrays.fill(pref, (long) 1e14); Arrays.fill(suff, (long) 1e14); for (int i = 0; i < q; ++i) { pref[a[i]] = t[i] - a[i]; suff[a[i]] = t[i] + a[i]; } for (int i = 1; i <= n; ++i) { pref[i] = Math.min(pref[i], pref[i - 1]); } for (int i = n; i >= 1; --i) { suff[i] = Math.min(suff[i], suff[i + 1]); } for (int i = 1; i <= n; ++i) { out.print(Math.min(pref[i] + i, suff[i] - i) + "" ""); } out.println(); } } }",20012377,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; import java.io.IOException; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); EAirConditioners solver = new EAirConditioners(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class EAirConditioners { public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(), q = in.nextInt(); int[] a = in.readArray(q); long[] t = in.readLongArray(q); long[] pref = new long[n + 2]; long[] suff = new long[n + 2]; Arrays.fill(pref, (long) 1e14); Arrays.fill(suff, (long) 1e14); for (int i = 0; i < q; ++i) { pref[a[i]] = t[i] - a[i]; suff[a[i]] = t[i] + a[i]; } for (int i = 1; i <= n; ++i) { pref[i] = Math.min(pref[i], pref[i - 1]); } for (int i = n; i >= 1; --i) { suff[i] = Math.min(suff[i], suff[i + 1]); } for (int i = 1; i <= n; ++i) { out.print(Math.min(pref[i] + i, suff[i] - i) + "" ""); } out.println(); } } }",1.0000000000000002,8,1
089b7f00,"import java.util.*; import java.lang.*; import java.io.*; public class Main { public static void main (String[] args) throws java.lang.Exception { Scanner scan=new Scanner(System.in); int t=scan.nextInt(); while(t>0){ int n=scan.nextInt(); int[] a=new int[n]; for(int i=0;i<n;i++){ a[i]=scan.nextInt(); } TreeSet<Integer>set=new TreeSet<>(); set.add(a[0]); boolean flag=false; for(int i=1;i<n;i++){ set.add(a[i]); if(a[i-1]==a[i]) { continue; } Integer find = set.lower(a[i]); if(find!=null && find==a[i-1]) { continue; } find = set.higher(a[i]); if(find!=null && find==a[i-1]) { continue; } flag=true; break; } if(flag){ System.out.println(""No""); }else{ System.out.println(""Yes""); } t--; } } }",fb20d298,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastScanner sc = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t=sc.nextInt(); while(t-- >0) { int n = sc.nextInt(); int b[] = sc.readArray(n); TreeSet<Integer> set = new TreeSet<>(); boolean f = true; set.add(b[0]); for(int i=1 ; i<n ; i++) { set.add(b[i]); if(b[i-1]==b[i]) { continue; } Integer find = set.lower(b[i]); if(find!=null && find==b[i-1]) { continue; } find = set.higher(b[i]); if(find!=null && find==b[i-1]) { continue; } f = false; break; } if(f == false) { out.println(""NO""); } else out.println(""YES""); } out.flush(); out.close(); } }",0.7223279271792945,11,1
08cf0478,"import java.util.*; import java.io.*; public class Main { public static void main(final String[] args) { FastScanner sc = new FastScanner(); int t = sc.nextInt(); while(t-- > 0) { int n = sc.nextInt(); int[][] arr = new int[5][n]; for(int i = 0; i < n; i++) { char[] s = sc.next().toCharArray(); int[] cnt = new int[5]; for(int j = 0; j < s.length; j++) { cnt[s[j]-'a']++; } for(int j = 0; j < 5; j++) arr[j][i] = cnt[j]-(s.length-cnt[j]); } int ans = 0; for(int i = 0; i < 5; i++) { Arrays.sort(arr[i]); int maxSum = 0; int words = 0; for(int j = arr[i].length-1; j >=0; j--) { maxSum += arr[i][j]; if(maxSum > 0) words++; } ans = Math.max(ans, words); } System.out.println(ans); } } }",9291ca83,"import java.math.BigDecimal; import java.math.BigInteger; import java.util.*; public class Practice { static HashMap<String, Integer> map = new HashMap<>(); public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); int[][] occurances = new int[5][n]; for(int i=0;i<n;i++){ String s = sc.next(); int[] count = new int[5]; int len = s.length(); for(int j=0;j<s.length();j++){ count[s.charAt(j)-'a']++; } for(int j=0;j<5;j++){ occurances[j][i] = count[j] - (len-count[j]); } } int ans = 0; for(int i=0;i<5;i++){ Arrays.sort(occurances[i]); int tmpAns = 0; int tmpSum=0; for(int j=n-1;j>=0;j--){ tmpSum+=occurances[i][j]; if(tmpSum>0) tmpAns++; else break; } ans = Math.max(ans, tmpAns); } System.out.println(ans); } } }",0.6969177364397925,15,1
0951d079,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Stack; import java.util.StringTokenizer; public class D { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader file = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(file.readLine()); int[] heights = new int[n]; StringTokenizer st = new StringTokenizer(file.readLine()); for(int i = 0; i < n; i++) { heights[i] = Integer.parseInt(st.nextToken()); } int[] dp = new int[n]; dp[0] = 0; Stack<Integer> high = new Stack<>(); Stack<Integer> low = new Stack<>(); high.push(0); low.push(0); for(int i = 1; i < n; i++) { dp[i] = dp[i-1]+1; while(!high.isEmpty() && heights[high.peek()] < heights[i]) { dp[i] = Math.min(dp[i], dp[high.peek()]+1); high.pop(); } if(!high.isEmpty()) { dp[i] = Math.min(dp[i], dp[high.peek()]+1); if(heights[high.peek()] == heights[i]) high.pop(); } while(!low.isEmpty() && heights[low.peek()] > heights[i]) { dp[i] = Math.min(dp[i], dp[low.peek()]+1); low.pop(); } if(!low.isEmpty()) { dp[i] = Math.min(dp[i], dp[low.peek()]+1); if(heights[low.peek()] == heights[i]) low.pop(); } high.push(i); low.push(i); } System.out.println(dp[n-1]); } }",0ecf356d,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); StringTokenizer st = new StringTokenizer(br.readLine()); int[] h = new int[n]; int[] dp = new int[n]; for(int i = 0; i<n; i++){ h[i] = Integer.parseInt(st.nextToken()); } Stack<Integer> hi = new Stack<>(); Stack<Integer> lo = new Stack<>(); hi.push(0); lo.push(0); for(int i = 1; i<n; i++){ dp[i] = dp[i-1]+1; while(!hi.isEmpty() && h[hi.peek()]<h[i]){ dp[i] = Math.min(dp[i], dp[hi.peek()]+1); hi.pop(); } if(!hi.isEmpty()){ dp[i] = Math.min(dp[i], dp[hi.peek()]+1); if(h[i] == h[hi.peek()]) hi.pop(); } while(!lo.isEmpty() && h[lo.peek()]>h[i]){ dp[i] = Math.min(dp[i], dp[lo.peek()]+1); lo.pop(); } if(!lo.isEmpty()){ dp[i] = Math.min(dp[i], dp[lo.peek()]+1); if(h[i] == h[lo.peek()]) lo.pop(); } hi.push(i); lo.push(i); } System.out.println(dp[n-1]); } }",0.5183763311012459,6,1
0951d079,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Stack; import java.util.StringTokenizer; public class D { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader file = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(file.readLine()); int[] heights = new int[n]; StringTokenizer st = new StringTokenizer(file.readLine()); for(int i = 0; i < n; i++) { heights[i] = Integer.parseInt(st.nextToken()); } int[] dp = new int[n]; dp[0] = 0; Stack<Integer> high = new Stack<>(); Stack<Integer> low = new Stack<>(); high.push(0); low.push(0); for(int i = 1; i < n; i++) { dp[i] = dp[i-1]+1; while(!high.isEmpty() && heights[high.peek()] < heights[i]) { dp[i] = Math.min(dp[i], dp[high.peek()]+1); high.pop(); } if(!high.isEmpty()) { dp[i] = Math.min(dp[i], dp[high.peek()]+1); if(heights[high.peek()] == heights[i]) high.pop(); } while(!low.isEmpty() && heights[low.peek()] > heights[i]) { dp[i] = Math.min(dp[i], dp[low.peek()]+1); low.pop(); } if(!low.isEmpty()) { dp[i] = Math.min(dp[i], dp[low.peek()]+1); if(heights[low.peek()] == heights[i]) low.pop(); } high.push(i); low.push(i); } System.out.println(dp[n-1]); } }",71a4f6d2,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Vector; import java.util.InputMismatchException; import java.io.IOException; import java.util.Stack; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DDiscreteCentrifugalJumps solver = new DDiscreteCentrifugalJumps(); solver.solve(1, in, out); out.close(); } static class DDiscreteCentrifugalJumps { public void solve(int testNumber, InputReader s, PrintWriter w) { int n = s.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = s.nextInt(); int[] dp = new int[n]; for (int i = 0; i < n; i++) dp[i] = i; Stack<Integer> dec = new Stack<>(); dec.push(0); Stack<Integer> inc = new Stack<>(); inc.push(0); for (int i = 1; i < n; i++) { while (!dec.isEmpty() && a[dec.peek()] < a[i]) { dp[i] = Math.min(dp[i], dp[dec.peek()] + 1); dec.pop(); } if (!dec.isEmpty()) { dp[i] = Math.min(dp[i], dp[dec.peek()] + 1); if (a[dec.peek()] == a[i]) dec.pop(); } dec.push(i); while (!inc.isEmpty() && a[inc.peek()] > a[i]) { dp[i] = Math.min(dp[i], dp[inc.peek()] + 1); inc.pop(); } if (!inc.isEmpty()) { dp[i] = Math.min(dp[i], dp[inc.peek()] + 1); if (a[inc.peek()] == a[i]) inc.pop(); } inc.push(i); } w.println(dp[n - 1]); } } }",0.48890592224726037,6,1
0b04b41e,"import java.io.BufferedReader; import java.io.*; import java.util.*; public class josph { static BufferedReader br; public static void main(String[] args) throws Exception { br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pr = new PrintWriter(System.out); int tc = 1; tc= cinI(); while(tc-->0){ int n =cinI(); String[] a= new String[n]; int[][] f =new int[10][n]; for(int i=0;i<n;i++){ a[i]=cin(); char[] x = a[i].toCharArray(); for(char c:x){ int index = c-'a'; f[index][i]+=1; } for(int j=0;j<10;j++){ int rem =x.length-f[j][i]; f[j][i]-=rem; } } int max=0; for(int j=0;j<10;j++){ Arrays.sort(f[j]); int cnt=0; int sum=0; for(int i=n-1;i>=0;i--){ sum+=f[j][i]; if(sum>0){ cnt+=1; } else{ break; } } max=Math.max(max,cnt); } System.out.println(max); } } public static String cin() throws Exception { return br.readLine(); } public static Integer cinI() throws Exception { return Integer.parseInt(br.readLine()); } }",9291ca83,"import java.math.BigDecimal; import java.math.BigInteger; import java.util.*; public class Practice { static HashMap<String, Integer> map = new HashMap<>(); public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); int[][] occurances = new int[5][n]; for(int i=0;i<n;i++){ String s = sc.next(); int[] count = new int[5]; int len = s.length(); for(int j=0;j<s.length();j++){ count[s.charAt(j)-'a']++; } for(int j=0;j<5;j++){ occurances[j][i] = count[j] - (len-count[j]); } } int ans = 0; for(int i=0;i<5;i++){ Arrays.sort(occurances[i]); int tmpAns = 0; int tmpSum=0; for(int j=n-1;j>=0;j--){ tmpSum+=occurances[i][j]; if(tmpSum>0) tmpAns++; else break; } ans = Math.max(ans, tmpAns); } System.out.println(ans); } } }",0.5659713356008707,15,1
0b27be88,"import java.util.*; import java.io.*; public class C { static class Scan { private byte[] buf=new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in=System.in; } public int scan()throws IOException { if(total<0) throw new InputMismatchException(); if(index>=total) { index=0; total=in.read(buf); if(total<=0) return -1; } return buf[index++]; } public int scanInt()throws IOException { int integer=0; int n=scan(); while(isWhiteSpace(n)) n=scan(); int neg=1; if(n=='-') { neg=-1; n=scan(); } while(!isWhiteSpace(n)) { if(n>='0'&&n<='9') { integer*=10; integer+=n-'0'; n=scan(); } else throw new InputMismatchException(); } return neg*integer; } private boolean isWhiteSpace(int n) { if(n==' '||n=='\n'||n=='\r'||n=='\t'||n==-1) return true; return false; } } public static void main(String args[]) throws IOException { Scan input=new Scan(); StringBuilder ans=new StringBuilder(""""); int test=input.scanInt(); for(int tt=1;tt<=test;tt++) { int n=input.scanInt(); int m=input.scanInt(); int x=input.scanInt(); ans.append(""YES\n""); TreeMap<Integer,Stack<Integer>> tm=new TreeMap<>(); for(int i=1;i<=m;i++) { ans.append(i+"" ""); int tmp=input.scanInt(); if(!tm.containsKey(tmp)) { Stack<Integer> stck=new Stack<>(); stck.add(i); tm.put(tmp, stck); } else { Stack<Integer> stck=tm.get(tmp); stck.add(i); } } for(int i=m;i<n;i++) { int tmp=input.scanInt(); int min=tm.firstKey(); Stack<Integer> stck=tm.get(min); int indx=stck.pop(); ans.append(indx+"" ""); if(stck.isEmpty()) { tm.remove(min); } tmp+=min; if(!tm.containsKey(tmp)) { stck=new Stack<>(); stck.add(indx); tm.put(tmp, stck); } else { stck=tm.get(tmp); stck.add(indx); } } ans.append(""\n""); } System.out.println(ans); } }",3f4a5b64,"import java.util.*; import java.io.*; public class C { static class Scan { private byte[] buf=new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in=System.in; } public int scan()throws IOException { if(total<0) throw new InputMismatchException(); if(index>=total) { index=0; total=in.read(buf); if(total<=0) return -1; } return buf[index++]; } public int scanInt()throws IOException { int integer=0; int n=scan(); while(isWhiteSpace(n)) n=scan(); int neg=1; if(n=='-') { neg=-1; n=scan(); } while(!isWhiteSpace(n)) { if(n>='0'&&n<='9') { integer*=10; integer+=n-'0'; n=scan(); } else throw new InputMismatchException(); } return neg*integer; } private boolean isWhiteSpace(int n) { if(n==' '||n=='\n'||n=='\r'||n=='\t'||n==-1) return true; return false; } } public static void main(String args[]) throws IOException { Scan input=new Scan(); StringBuilder ans=new StringBuilder(""""); int test=input.scanInt(); for(int tt=1;tt<=test;tt++) { int n=input.scanInt(); int m=input.scanInt(); int x=input.scanInt(); ans.append(""YES\n""); TreeMap<Integer,Stack<Integer>> tm=new TreeMap<>(); for(int i=1;i<=m;i++) { ans.append(i+"" ""); int tmp=input.scanInt(); if(!tm.containsKey(tmp)) { Stack<Integer> stck=new Stack<>(); stck.add(i); tm.put(tmp, stck); } else { Stack<Integer> stck=tm.get(tmp); stck.add(i); } } for(int i=m;i<n;i++) { int tmp=input.scanInt(); int min=tm.firstKey(); Stack<Integer> stck=tm.get(min); int indx=stck.pop(); ans.append(indx+"" ""); if(stck.isEmpty()) { tm.remove(min); } tmp+=min; if(!tm.containsKey(tmp)) { stck=new Stack<>(); stck.add(indx); tm.put(tmp, stck); } else { stck=tm.get(tmp); stck.add(indx); } } ans.append(""\n""); } System.out.println(ans); } }",0.9999999999999999,9,1
0c173033,"import java.io.*; import java.util.*; public class M { static Scanner scanner=new Scanner(System.in); public static void main(String[] args) { int t=scanner.nextInt(); while(t-->0) { int n=scanner.nextInt(); int a[]=new int [n]; int b[]=new int [n]; for(int i=0;i<n;i++)a[i]=scanner.nextInt(); for(int i=0;i+1<n;i+=2) { b[i]=-a[i+1]; b[i+1]=a[i]; } if(n%2==1) { int x=a[n-1],y=a[n-2],z=a[n-3]; if(x+y!=0) { b[n-3]=x+y; b[n-2]=-z; b[n-1]=-z; }else if(y+z!=0) { b[n-1]=y+z; b[n-2]=-x; b[n-3]=-x; }else { b[n-2]=x+z; b[n-1]=-y; b[n-3]=-y; } } StringBuilder sb=new StringBuilder(); for(int i=0;i<n;i++)sb.append(b[i]+"" ""); System.out.println(sb); } } }",6b83b22e,"import java.util.Scanner; public class Subsequence { private static Scanner sc = new Scanner(System.in); public static void main(String args[]) { int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[] = new int[n]; int b[] = new int[n]; for(int i=0;i<n;i++) { a[i]= sc.nextInt(); } if(n%2==0) { calculateB(a,b,n); } else { calculateB(a,b,n-3); if (a[n - 2] + a[n - 3] != 0) { b[n - 3] = -a[n - 1]; b[n - 2] = -a[n - 1]; b[n - 1] = a[n - 2] + a[n - 3]; } else if (a[n - 2] + a[n - 1] != 0) { b[n - 3] = a[n - 2] + a[n - 1]; b[n - 2] = -a[n - 3]; b[n - 1] = -a[n - 3]; } else { b[n - 3] = -a[n - 2]; b[n - 2] = a[n - 3] + a[n - 1]; b[n - 1] = -a[n - 2]; } } for(int i=0;i<n;i++) { System.out.print(b[i] + "" ""); } System.out.println(); } } private static void calculateB(int[] a, int[] b, int n) { for(int i=0;i<n-1;i=i+2) { b[i] = -a[i+1]; b[i+1] = a[i]; } } }",0.7979208545783391,17,1
0cedec8a,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Scanner; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; Scanner in = new Scanner(inputStream); PrintWriter out = new PrintWriter(outputStream); TaskC solver = new TaskC(); solver.solve(1, in, out); out.close(); } static class TaskC { public void solve(int testNumber, Scanner in, PrintWriter out) { int T = in.nextInt(); while (T-- > 0) { solveOne(in, out); } } private void solveOne(Scanner in, PrintWriter out) { int N = in.nextInt(); int nums[] = L.readIntArray(N, in); int min[] = new int[]{Integer.MAX_VALUE, Integer.MAX_VALUE}; int rem[] = new int[]{N, N}; long sum = 0; long ans = Long.MAX_VALUE; for (int idx = 0; idx < N; idx++) { min[idx % 2] = Math.min(min[idx % 2], nums[idx]); rem[idx % 2]--; sum += nums[idx]; long cur = sum + rem[0] * (long) min[0] + rem[1] * (long) min[1]; ans = Math.min(ans, cur); } out.println(ans); } } static class L { public static int[] readIntArray(int size, Scanner in) { int[] array = new int[size]; for (int i = 0; i < size; i++) { array[i] = in.nextInt(); } return array; } } }",ac8acb97,"import java.util.Scanner; public class C1499 { public static void main(String[] args) { Scanner in = new Scanner(System.in); int t = in.nextInt(); while (t-- > 0) { int n = in.nextInt(); long[] mn = { Long.MAX_VALUE, Long.MAX_VALUE }; long[] rem = { n, n }; long sum = 0; long ans = Long.MAX_VALUE; for (int i = 0; i < n; i++) { int temp = in.nextInt(); mn[i % 2] = Math.min(mn[i % 2], temp); rem[i % 2]--; sum += temp; if (i > 0) { long cur = sum + rem[0] * mn[0] + rem[1] * mn[1]; ans = Math.min(ans, cur); } } System.out.println(ans); } } }",0.5625541571403883,18,1
0df4050e,"import java.io.*; import java.util.*; public class MainClass { public static void main(String[] args) { Reader in = new Reader(System.in); int t = in.nextInt(); StringBuilder stringBuilder = new StringBuilder(); while (t-- > 0) { ArrayList<Integer> reds = new ArrayList<>(); ArrayList<Integer> blue = new ArrayList<>(); int n = in.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) { a[i] = in.nextInt() - 1; } char[] s = in.next().toCharArray(); for (int i = 0; i < n; i++) { if (s[i] == 'R') { reds.add(a[i]); } else { blue.add(a[i]); } } Collections.sort(reds, Collections.reverseOrder()); Collections.sort(blue); boolean ff = true; int start = 0; for (int i = 0; i < blue.size(); i++) { if (blue.get(i) < start) { ff = false; break; } start++; } start = n - 1; for (int i = 0; i < reds.size(); i++) { if (reds.get(i) > start) { ff = false; break; } start--; } stringBuilder.append(ff?""YES"":""NO"").append(""\n""); } System.out.println(stringBuilder); } }",6f02c6d9,"import java.io.*; import java.util.*; public class Main { static long mod = 1000000007; static InputReader sc = new InputReader(System.in); static PrintWriter out = new PrintWriter(System.out); public static void main(String[] args) throws IOException { int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int[] A = new int[n]; for (int i = 0; i < A.length; i++) { A[i] = sc.nextInt(); } String word = sc.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < word.length(); i++) { if (word.charAt(i) == 'R') { red.add(A[i]); } else { blue.add(A[i]); } } Collections.sort(blue); Collections.sort(red); boolean possible = true; int a = 1; for (int i = 0; i < blue.size(); i++, a++) { if (blue.get(i) < a) { possible = false; break; } } for (int i = 0; i < red.size(); i++, a++) { if (red.get(i) > a) { possible = false; break; } } if (possible) out.println(""YES""); else out.println(""NO""); } out.flush(); out.close(); } }",0.5296273339135172,20,1
0df4050e,"import java.io.*; import java.util.*; public class MainClass { public static void main(String[] args) { Reader in = new Reader(System.in); int t = in.nextInt(); StringBuilder stringBuilder = new StringBuilder(); while (t-- > 0) { ArrayList<Integer> reds = new ArrayList<>(); ArrayList<Integer> blue = new ArrayList<>(); int n = in.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) { a[i] = in.nextInt() - 1; } char[] s = in.next().toCharArray(); for (int i = 0; i < n; i++) { if (s[i] == 'R') { reds.add(a[i]); } else { blue.add(a[i]); } } Collections.sort(reds, Collections.reverseOrder()); Collections.sort(blue); boolean ff = true; int start = 0; for (int i = 0; i < blue.size(); i++) { if (blue.get(i) < start) { ff = false; break; } start++; } start = n - 1; for (int i = 0; i < reds.size(); i++) { if (reds.get(i) > start) { ff = false; break; } start--; } stringBuilder.append(ff?""YES"":""NO"").append(""\n""); } System.out.println(stringBuilder); } }",d9199dfd,"import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.Scanner; public class Simple{ public static void main(String args[]){ Scanner s = new Scanner(System.in); int t = s.nextInt(); while (t>0){ int n = s.nextInt(); int arr[] = new int[n]; for(int i=0;i<n;i++){ arr[i] = s.nextInt(); } String str = s.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for(int i=0;i<n;i++){ if(str.charAt(i)=='R'){ red.add(arr[i]); } else{ blue.add(arr[i]); } } Collections.sort(red); Collections.sort(blue); int start =1; boolean bool =true; for(int i=0;i<blue.size();i++){ if(blue.get(i)<start){ bool = false; break; } start++; } if(!bool){ System.out.println(""NO""); } else{ for(int i=0;i<red.size();i++){ if(red.get(i)>start){ bool = false; break; } start++; } if(bool){ System.out.println(""YES""); } else{ System.out.println(""NO""); } } t--; } s.close(); } }",0.6045128182603647,20,1
0ecf356d,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); StringTokenizer st = new StringTokenizer(br.readLine()); int[] h = new int[n]; int[] dp = new int[n]; for(int i = 0; i<n; i++){ h[i] = Integer.parseInt(st.nextToken()); } Stack<Integer> hi = new Stack<>(); Stack<Integer> lo = new Stack<>(); hi.push(0); lo.push(0); for(int i = 1; i<n; i++){ dp[i] = dp[i-1]+1; while(!hi.isEmpty() && h[hi.peek()]<h[i]){ dp[i] = Math.min(dp[i], dp[hi.peek()]+1); hi.pop(); } if(!hi.isEmpty()){ dp[i] = Math.min(dp[i], dp[hi.peek()]+1); if(h[i] == h[hi.peek()]) hi.pop(); } while(!lo.isEmpty() && h[lo.peek()]>h[i]){ dp[i] = Math.min(dp[i], dp[lo.peek()]+1); lo.pop(); } if(!lo.isEmpty()){ dp[i] = Math.min(dp[i], dp[lo.peek()]+1); if(h[i] == h[lo.peek()]) lo.pop(); } hi.push(i); lo.push(i); } System.out.println(dp[n-1]); } }",71a4f6d2,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Vector; import java.util.InputMismatchException; import java.io.IOException; import java.util.Stack; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DDiscreteCentrifugalJumps solver = new DDiscreteCentrifugalJumps(); solver.solve(1, in, out); out.close(); } static class DDiscreteCentrifugalJumps { public void solve(int testNumber, InputReader s, PrintWriter w) { int n = s.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) a[i] = s.nextInt(); int[] dp = new int[n]; for (int i = 0; i < n; i++) dp[i] = i; Stack<Integer> dec = new Stack<>(); dec.push(0); Stack<Integer> inc = new Stack<>(); inc.push(0); for (int i = 1; i < n; i++) { while (!dec.isEmpty() && a[dec.peek()] < a[i]) { dp[i] = Math.min(dp[i], dp[dec.peek()] + 1); dec.pop(); } if (!dec.isEmpty()) { dp[i] = Math.min(dp[i], dp[dec.peek()] + 1); if (a[dec.peek()] == a[i]) dec.pop(); } dec.push(i); while (!inc.isEmpty() && a[inc.peek()] > a[i]) { dp[i] = Math.min(dp[i], dp[inc.peek()] + 1); inc.pop(); } if (!inc.isEmpty()) { dp[i] = Math.min(dp[i], dp[inc.peek()] + 1); if (a[inc.peek()] == a[i]) inc.pop(); } inc.push(i); } w.println(dp[n - 1]); } } }",0.4851909476951732,6,1
0ee2f8f1,"import java.util.*; public class Main{ public static void main(String args[]){ Scanner sc=new Scanner(System.in); int T=sc.nextInt(); while(T-->0){ int n=sc.nextInt(); int arr[]=new int[n]; int min=Integer.MAX_VALUE;int max=Integer.MIN_VALUE; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); min=Math.min(arr[i],min); max=Math.max(arr[i],max); } while(min<=max){ int mid=min+(max-min)/2; if(helper(arr,mid)) min=mid+1; else max=mid-1; } System.out.println(min-1); } } public static boolean helper(int arr[],int min){ int tmp[]=Arrays.copyOf(arr,arr.length); for(int i=arr.length-1;i>=2;i--){ if(tmp[i]<min) return false; int d=(Math.min(arr[i],tmp[i]-min))/3; tmp[i-1]+=d; tmp[i-2]+=d*2; } return tmp[1]>=min && tmp[0]>=min; } }",587307f2,"import java.util.*; public class Main{ public static void main(String args[]){ Scanner sc=new Scanner(System.in); int T=sc.nextInt(); while(T-->0){ int n=sc.nextInt(); int arr[]=new int[n]; int min=Integer.MAX_VALUE;int max=Integer.MIN_VALUE; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); min=Math.min(arr[i],min); max=Math.max(arr[i],max); } while(min<=max){ int mid=min+(max-min)/2; if(helper(arr,mid)) min=mid+1; else max=mid-1; } System.out.println(min-1); } } public static boolean helper(int arr[],int min){ int tmp[]=Arrays.copyOf(arr,arr.length); for(int i=arr.length-1;i>=2;i--){ if(tmp[i]<min) return false; int d=(Math.min(arr[i],tmp[i]-min))/3; tmp[i-1]+=d; tmp[i-2]+=d*2; } return tmp[1]>=min && tmp[0]>=min; } }",1.0,16,1
0ee2f8f1,"import java.util.*; public class Main{ public static void main(String args[]){ Scanner sc=new Scanner(System.in); int T=sc.nextInt(); while(T-->0){ int n=sc.nextInt(); int arr[]=new int[n]; int min=Integer.MAX_VALUE;int max=Integer.MIN_VALUE; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); min=Math.min(arr[i],min); max=Math.max(arr[i],max); } while(min<=max){ int mid=min+(max-min)/2; if(helper(arr,mid)) min=mid+1; else max=mid-1; } System.out.println(min-1); } } public static boolean helper(int arr[],int min){ int tmp[]=Arrays.copyOf(arr,arr.length); for(int i=arr.length-1;i>=2;i--){ if(tmp[i]<min) return false; int d=(Math.min(arr[i],tmp[i]-min))/3; tmp[i-1]+=d; tmp[i-2]+=d*2; } return tmp[1]>=min && tmp[0]>=min; } }",c2b7b017,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Example { public static void main(String[] args) { FastReader sc = new FastReader(); int t= sc.nextInt(); while(t>0){ t--; int ans=Integer.MAX_VALUE; int n=sc.nextInt(); int[] ar= new int[n]; int l=Integer.MAX_VALUE; int h=Integer.MIN_VALUE; for(int i=0;i<n;i++){ ar[i]=sc.nextInt(); l=Math.min(l,ar[i]); h=Math.max(h,ar[i]); } int[] extra; while(l<=h){ int mid=l+(h-l)/2; if(possibleans(ar,mid)){ ans=mid; l=mid+1; }else{ h=mid-1; } } System.out.println(ans); } } private static boolean possibleans(int[] ar, int mid) { int[] extra=new int[ar.length]; for(int i=ar.length-1;i>=2;i--){ if((ar[i]+extra[i]-mid)<0){ return false; } int d=Math.min(ar[i],extra[i]+ar[i]-mid); extra[i-1]=extra[i-1]+d/3; extra[i-2]+=2*(d/3); } int a=ar[0]+extra[0]; int b=ar[1]+extra[1]; return (a>=mid && b>=mid); } }",0.41818150784528874,16,1
0f14b12d,"import java.io.BufferedReader; import java.io.IOException; import java.io.*; import java.util.*; import javax.management.Query; public class Test{ public static void main(String[] args) throws IOException, InterruptedException{ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n = sc.nextInt(); String [] words = new String[n]; int [] occ = new int[5]; int [] occWord = new int [5]; boolean [] found ; for(int i =0;i<n;i++){ words[i] = sc.nextLine(); found = new boolean[5]; for(int j=0 ; j<words[i].length();j++){ occ[words[i].charAt(j)-'a']++; if(!found[words[i].charAt(j)-'a']){ found[words[i].charAt(j)-'a']=true; occWord[words[i].charAt(j)-'a'] ++; } } } int maxRes =0; for(int i =0;i<5;i++){ int maxChar = 'a' +i; PriorityQueue<Pair> pq = new PriorityQueue<>(); for (String word : words){ pq.add(new Pair(word,occOfMaxChar(word, maxChar)-occOfOtherChar(word, maxChar))); } int res = 0; int curr = 0; int maxCharCount = 0; int otherCharCount =0; while(!pq.isEmpty()){ String word = pq.poll().x; maxCharCount +=occOfMaxChar(word, maxChar); otherCharCount += occOfOtherChar(word, maxChar); curr ++; if(maxCharCount >otherCharCount){ res = curr; } } maxRes = Math.max(maxRes, res); } System.out.println(maxRes);} } public static int occOfMaxChar (String s, int maxChar){ int occ = 0; for(int i =0 ;i<s.length();i++){ if(s.charAt(i)==maxChar){ occ++; } } return occ; } public static int occOfOtherChar (String s, int maxChar){ int occ = 0; for(int i =0 ;i<s.length();i++){ if(s.charAt(i)!=maxChar){ occ++; } } return occ; } static int w; static int n; static long [][] memo; static int [] depth ; static long[] values; static ArrayList<Pair> gold ; static class Pair implements Comparable { String x; int y; public Pair (String x, int y) { this.x = x; this.y = y; } } }",7d12d33c,"import java.io.BufferedReader; import java.io.IOException; import java.io.*; import java.util.*; import javax.management.Query; public class Test{ public static void main(String[] args) throws IOException, InterruptedException{ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n = sc.nextInt(); String [] words = new String[n]; for(int i =0;i<n;i++){ words[i] = sc.nextLine(); } int maxRes =0; for(int i =0;i<5;i++){ int maxChar = 'a' +i; PriorityQueue<Pair> pq = new PriorityQueue<>(); for (String word : words){ pq.add(new Pair(word,occOfMaxChar(word, maxChar)-occOfOtherChar(word, maxChar))); } int res = 0; int curr = 0; int maxCharCount = 0; int otherCharCount =0; while(!pq.isEmpty()){ String word = pq.poll().x; maxCharCount +=occOfMaxChar(word, maxChar); otherCharCount += occOfOtherChar(word, maxChar); curr ++; if(maxCharCount >otherCharCount){ res = curr; } } maxRes = Math.max(maxRes, res); } System.out.println(maxRes);} } public static int occOfMaxChar (String s, int maxChar){ int occ = 0; for(int i =0 ;i<s.length();i++){ if(s.charAt(i)==maxChar){ occ++; } } return occ; } public static int occOfOtherChar (String s, int maxChar){ int occ = 0; for(int i =0 ;i<s.length();i++){ if(s.charAt(i)!=maxChar){ occ++; } } return occ; } static int w; static int n; static long [][] memo; static int [] depth ; static long[] values; static ArrayList<Pair> gold ; static class Pair implements Comparable { String x; int y; public Pair (String x, int y) { this.x = x; this.y = y; } } }",0.9677828157272308,15,1
0f3a2acf,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Practice { static int[][] vals; static ArrayList<ArrayList<Integer>> adjList; static long[][] ans; public static void main(String[] args) throws IOException { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(bu.readLine()); while (t-- > 0) { Integer n = Integer.parseInt(bu.readLine()); vals = new int[2][n]; adjList = new ArrayList<>(); for(int i=0;i<n;i++){ String st[]=bu.readLine().split("" ""); vals[0][i] = Integer.parseInt(st[0]); vals[1][i] = Integer.parseInt(st[1]); adjList.add(new ArrayList<>()); } for(int i=0;i<n-1;i++){ String st[]=bu.readLine().split("" ""); int source = Integer.parseInt(st[0]);; int dest = Integer.parseInt(st[1]);; adjList.get(source-1).add(dest-1); adjList.get(dest-1).add(source-1); } ans = new long[2][n]; DFS(0, adjList, -1, ans, vals); System.out.println(Math.max(ans[0][0], ans[1][0])); } } private static void DFS(Integer current, ArrayList<ArrayList<Integer>> adjList, Integer prev, long[][] ans, int[][] vals) { ans[0][current] = 0L; ans[1][current] = 0L; for(Integer node: adjList.get(current)){ if(node.equals(prev)) continue; DFS(node, adjList, current, ans, vals); ans[0][current] += Math.max(ans[0][node] + Math.abs(vals[0][current] - vals[0][node]), ans[1][node] + Math.abs(vals[0][current] - vals[1][node])); ans[1][current] += Math.max(ans[0][node] + Math.abs(vals[1][current] - vals[0][node]) , ans[1][node] + Math.abs(vals[1][current] - vals[1][node])); } } }",16e6d8bb,"import java.util.*; import java.io.*; import java.lang.*; public class CodeChef { static long dp[][]; public static void main (String[] args) throws java.lang.Exception { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int t=Integer.parseInt(br.readLine()); while(t-->0) { int n=Integer.parseInt(br.readLine()); int arr[][]=new int[n+1][2]; for(int i=1;i<=n;i++) { String str[]=br.readLine().split("" ""); int l=Integer.parseInt(str[0]);int r=Integer.parseInt(str[1]); arr[i][0]=l;arr[i][1]=r; } dp=new long[n+1][2]; Set<Integer>adj[]=new HashSet[n+1]; for(int i=0;i<=n;i++)adj[i]=new HashSet(); for(int i=0;i<n-1;i++) { String str[]=br.readLine().split("" ""); int src=Integer.parseInt(str[0]); int dest=Integer.parseInt(str[1]); adj[src].add(dest); adj[dest].add(src); } fun(1,adj,arr);System.out.println(Math.max(dp[1][0], dp[1][1])); } } static void fun(int root,Set<Integer>[] adj,int arr[][]) { dp[root][0]=dp[root][1]=0; Iterator<Integer>iter=adj[root].iterator(); while(iter.hasNext()) { int i=iter.next(); adj[i].remove(root); fun(i,adj,arr); dp[root][0]+=Math.max(Math.abs(arr[root][0]-arr[i][0])+dp[i][0], Math.abs(arr[root][0]-arr[i][1])+dp[i][1]); dp[root][1]+=Math.max(Math.abs(arr[root][1]-arr[i][0])+dp[i][0], Math.abs(arr[root][1]-arr[i][1])+dp[i][1]); } } }",0.24305030422922036,1,1
0f6ca337,"import java.io.*; import java.util.*; import java.math.*; import java.awt.Point; public class Main { static final long MOD = 1000000007L; static final int INF = 1000000005; static final int NINF = -1000000005; static FastScanner sc; static PrintWriter pw; static final int[][] dirs = {{-1,0},{1,0},{0,-1},{0,1}}; public static void main(String[] args) { sc = new FastScanner(); pw = new PrintWriter(System.out); int Q = sc.ni(); for (int q = 0; q < Q; q++) { int N = sc.ni(); int[] nums = sc.intArray(N,0); Integer[] less = new Integer[N]; Integer[] more = new Integer[N]; TreeSet<Integer> ts = new TreeSet<Integer>(); for (int i = 0; i < N; i++) { ts.add(nums[i]); less[i] = ts.lower(nums[i]); more[i] = ts.higher(nums[i]); } String ans = ""YES""; for (int i = 1; i < N; i++) { if (nums[i-1]==nums[i]) continue; if (nums[i-1] < nums[i]) { if (more[i-1]!=null && more[i-1] < nums[i]) { ans = ""NO""; break; } } else { if (less[i-1]!=null && less[i-1] > nums[i]) { ans = ""NO""; break; } } } pw.println(ans); } pw.close(); } public static void sort(int[][] arr) { Random rgen = new Random(); for (int i = 0; i < arr.length; i++) { int r = rgen.nextInt(arr.length); int[] temp = arr[i]; arr[i] = arr[r]; arr[r] = temp; } Arrays.sort(arr, new Comparator<int[]>() { }); } public static void sort(long[][] arr) { Random rgen = new Random(); for (int i = 0; i < arr.length; i++) { int r = rgen.nextInt(arr.length); long[] temp = arr[i]; arr[i] = arr[r]; arr[r] = temp; } Arrays.sort(arr, new Comparator<long[]>() { }); } }",6843cc19,"import java.io.*; import java.util.*; import java.math.*; import java.awt.Point; public class Main { static final long MOD = 1000000007L; static final int INF = 1000000005; static final int NINF = -1000000005; static FastScanner sc; static PrintWriter pw; static final int[][] dirs = {{-1,0},{1,0},{0,-1},{0,1}}; public static void main(String[] args) { sc = new FastScanner(); pw = new PrintWriter(System.out); int Q = sc.ni(); for (int q = 0; q < Q; q++) { int N = sc.ni(); int[] nums = sc.intArray(N,0); Integer[] less = new Integer[N]; Integer[] more = new Integer[N]; TreeSet<Integer> ts = new TreeSet<Integer>(); for (int i = 0; i < N; i++) { ts.add(nums[i]); less[i] = ts.lower(nums[i]); more[i] = ts.higher(nums[i]); } String ans = ""YES""; for (int i = 1; i < N; i++) { if (nums[i-1]==nums[i]) continue; if (nums[i-1] < nums[i]) { if (more[i-1]!=null && more[i-1] < nums[i]) { ans = ""NO""; break; } } else { if (less[i-1]!=null && less[i-1] > nums[i]) { ans = ""NO""; break; } } } pw.println(ans); } pw.close(); } public static void sort(int[][] arr) { Random rgen = new Random(); for (int i = 0; i < arr.length; i++) { int r = rgen.nextInt(arr.length); int[] temp = arr[i]; arr[i] = arr[r]; arr[r] = temp; } Arrays.sort(arr, new Comparator<int[]>() { }); } public static void sort(long[][] arr) { Random rgen = new Random(); for (int i = 0; i < arr.length; i++) { int r = rgen.nextInt(arr.length); long[] temp = arr[i]; arr[i] = arr[r]; arr[r] = temp; } Arrays.sort(arr, new Comparator<long[]>() { }); } }",0.9999999999999999,11,1
0fdc80c5,"import java.io.*; import java.util.*; public class E { public static void main(String[] args) { FastScanner scan = new FastScanner(); int t = scan.nextInt(); for(int tt = 0;tt<t;tt++) { int n = scan.nextInt(), k = scan.nextInt(); int a[] = scan.readArray(k); int temp[] = scan.readArray(k); int l[] = new int[n]; int r[] = new int[n]; Arrays.fill(l, Integer.MAX_VALUE/2); Arrays.fill(r, Integer.MAX_VALUE/2); for(int i = 0;i<k;i++) l[a[i]-1] = temp[i]; for(int i = 0;i<k;i++) r[a[i]-1] = temp[i]; for(int i = 1;i<n;i++) l[i] = Math.min(l[i], l[i-1]+1); for(int i = n-2;i>=0;i--) r[i] = Math.min(r[i], r[i+1]+1); StringBuilder s = new StringBuilder(); for(int i = 0;i<n;i++) s.append(Math.min(l[i], r[i])+"" ""); System.out.println(s); } } }",28c2d81a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class D { public static void main(String[] args) { FastScanner fs = new FastScanner(); int cases = fs.nextInt(); while(cases-->0){ int n = fs.nextInt(), k = fs.nextInt(); int[] positions = fs.readArray(k), temps = fs.readArray(k); int[] forced = new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for(int i=0; i<k; i++) forced[positions[i]-1] = temps[i]; for(int i=1; i<n; i++) forced[i] = Math.min(forced[i],forced[i-1]+1); for(int i=n-2; i>=0; i--) forced[i] = Math.min(forced[i], forced[i+1]+1); for(int i=0; i<n; i++) System.out.print(forced[i] + "" ""); System.out.println(); } } }",0.4945361579577893,8,1
1013b392,"import java.io.*; import java.util.*; public class ddd { public static void main(String[] args) throws IOException { ADMIN_MODE(); int t = sc.ni();while(t-->0) solve(); } static boolean[] neg; static void solve() throws IOException { int n = sc.ni(); neg = new boolean[n]; pr[] arr = new pr[n]; for(int i = 0; i < n; i++) { long curr = sc.nl(); if(curr < 0) neg[i] = true; arr[i] = new pr(Math.abs(curr), i); } Arrays.sort(arr); long[] res = new long[n]; for(int i = 0; i < n-1; i+=2) { long lcm = lcm(arr[i].val, arr[i+1].val); res[arr[i].idx] = lcm/arr[i].val * (neg[arr[i].idx] ? -1 :1) * -1; res[arr[i+1].idx] = lcm/arr[i+1].val * (neg[arr[i+1].idx] ? -1 :1); } if(n%2==1) { long aa = arr[n-3].val * (neg[arr[n-3].idx] ? -1 : 1); long bb = arr[n-2].val * (neg[arr[n-2].idx] ? -1 : 1); long cc = arr[n-1].val * (neg[arr[n-1].idx] ? -1 : 1); if (aa == -1*bb) { if(aa == cc) { pr temp = arr[n-1]; arr[n-1] = arr[n-2]; arr[n-2] = temp; } else { pr temp = arr[n-3]; arr[n-3] = arr[n-1]; arr[n-1] = temp; } } } if(n%2==1) { long a = arr[n-2].val * (neg[arr[n-2].idx] ? -1 :1) + arr[n-3].val * (neg[arr[n-3].idx] ? -1 :1); boolean f = (a < 0); a = Math.abs(a); long b = arr[n-1].val; long lcm = lcm(a, b); if(f) { res[arr[n-2].idx] = lcm/a * -1; res[arr[n-3].idx] = lcm/a * -1; } else { res[arr[n - 2].idx] = lcm / a; res[arr[n - 3].idx] = lcm / a; } res[arr[n-1].idx] = lcm/b * (neg[arr[n-1].idx] ? -1 :1) * - 1; } for(int i = 0; i < n; i++) { System.out.println(res[i]+"" ""); } System.out.println(); } static class pr implements Comparable<pr>{ long val;int idx; public pr(long val, int idx) { this.val = val; this.idx = idx; } } static FastReader sc = new FastReader(); static OutputStream outputStream = System.out; private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } static long gcd(long a, long b) { return b == 0 ? (a < 0L ? -a: a) : gcd(b, a%b); } static long lcm(long a, long b) { return a/gcd(a, b)*b; } }",5a340556,"import java.io.*; import java.util.*; public class ddd { public static void main(String[] args) throws IOException { ADMIN_MODE(); int t = sc.ni();while(t-->0) solve(); w.close(); } static boolean[] neg; static void solve() throws IOException { int n = sc.ni(); neg = new boolean[n]; pr[] arr = new pr[n]; for(int i = 0; i < n; i++) { long curr = sc.nl(); if(curr < 0) neg[i] = true; arr[i] = new pr(Math.abs(curr), i); } Arrays.sort(arr); long[] res = new long[n]; for(int i = 0; i < n-1; i+=2) { long lcm = lcm(arr[i].val, arr[i+1].val); res[arr[i].idx] = lcm/arr[i].val * (neg[arr[i].idx] ? -1 :1) * -1; res[arr[i+1].idx] = lcm/arr[i+1].val * (neg[arr[i+1].idx] ? -1 :1); } if(n%2==1) { long aa = arr[n-3].val * (neg[arr[n-3].idx] ? -1 : 1); long bb = arr[n-2].val * (neg[arr[n-2].idx] ? -1 : 1); long cc = arr[n-1].val * (neg[arr[n-1].idx] ? -1 : 1); if (aa == -1*bb) { if(aa == cc) { pr temp = arr[n-1]; arr[n-1] = arr[n-2]; arr[n-2] = temp; } else { pr temp = arr[n-3]; arr[n-3] = arr[n-1]; arr[n-1] = temp; } } } if(n%2==1) { long a = arr[n-2].val * (neg[arr[n-2].idx] ? -1 :1) + arr[n-3].val * (neg[arr[n-3].idx] ? -1 :1); boolean f = (a < 0); a = Math.abs(a); long b = arr[n-1].val; long lcm = lcm(a, b); if(f) { res[arr[n-2].idx] = lcm/a * -1; res[arr[n-3].idx] = lcm/a * -1; } else { res[arr[n - 2].idx] = lcm / a; res[arr[n - 3].idx] = lcm / a; } res[arr[n-1].idx] = lcm/b * (neg[arr[n-1].idx] ? -1 :1) * - 1; } for(int i = 0; i < n; i++) { System.out.println(res[i]+"" ""); } } static class pr implements Comparable<pr>{ long val;int idx; public pr(long val, int idx) { this.val = val; this.idx = idx; } } static FastReader sc = new FastReader(); static OutputStream outputStream = System.out; private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } static long gcd(long a, long b) { return b == 0 ? (a < 0L ? -a: a) : gcd(b, a%b); } static long lcm(long a, long b) { return a/gcd(a, b)*b; } }",0.999185447724747,17,1
1071f735,"import java.util.*; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.Map; import java.util.PriorityQueue; import java.util.Queue; import java.util.SortedSet; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.OutputStream; import java.io.PrintWriter; import java.io.BufferedWriter; import java.io.Writer; import java.io.OutputStreamWriter; import java.util.InputMismatchException; import java.io.IOException; import java.io.InputStream; public class Main { static class obj{ long a1; long a2; obj(long a1,long a2){ this.a1=a1; this.a2=a2; } } static class sortby implements Comparator<obj>{ } static int[] m; static long[][] dis; public static void main(String[] args) { FastReader s = new FastReader(); OutputStream outputStream = System.out; PrintWriter out = new PrintWriter(outputStream); int t = s.nextInt(); while(t-->0) { int n = s.nextInt(); int m = s.nextInt(); int x=s.nextInt(); long[] a = new long[n]; for(int i=0;i<n;i++){ a[i]=s.nextInt(); } out.println(""YES""); PriorityQueue<obj> p = new PriorityQueue<>(new sortby()); for (int i = 0; i <m; i++) { p.add(new obj(a[i],i+1)); out.print(i+1+"" ""); } for(int i=m;i<n;i++){ obj o=p.poll(); p.add(new obj(o.a1+a[i],o.a2)); out.print(o.a2+"" ""); } out.println(); } out.close(); }}",cd835290,"import java.util.*; public class CP { public static void printArr(int[] a){ for(int i=0; i<a.length; i++){ System.out.print(a[i]+1+"" ""); } System.out.println(); } public static class Pair implements Comparable<Pair> { int val; int idx; Pair(int a, int b){ this.val = a; this.idx = b; } } public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); for (int i = 0; i < t; i++) { int n = sc.nextInt(); int m=sc.nextInt(); int x = sc.nextInt(); int[] arr = new int[n]; int[] ans = new int[n]; for (int j = 0; j < n; j++) { arr[j] = sc.nextInt(); } PriorityQueue<Pair> pq=new PriorityQueue<>(); for (int j = 0; j < m; j++) { pq.add(new Pair(arr[j],j)); ans[j]=j; } for (int j = m; j < n; j++) { Pair p=pq.remove(); pq.add(new Pair(p.val+arr[j],p.idx)); ans[j]=p.idx; } System.out.println(""YES""); printArr(ans); } } }",0.229766881065551,9,1
115c99cb,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",1.0,14,1
115c99cb,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",921b6e4a,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",1.0,14,1
1162c08f,"import java.util.*; public class CodeForces1525C{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",6653a758,"import java.util.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",0.9954793831678644,19,1
1162c08f,"import java.util.*; public class CodeForces1525C{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",0.7201518475190036,19,1
1162c08f,"import java.util.*; public class CodeForces1525C{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",734a94be,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuffer res = new StringBuffer(); int tc = 1; while(tc-->0) { int n = sc.nextInt(); ArrayList<Integer> one = new ArrayList<>(); ArrayList<Integer> zero = new ArrayList<>(); for(int i=0;i<n;i++) { int x = sc.nextInt(); if(x==1) { one.add(i); } else { zero.add(i); } } int dp[][] = new int[one.size()+1][zero.size()+1]; for(int i=1;i<=one.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(zero.get(i-1)-one.get(i-1)); for(int j=i+1;j<=zero.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(one.get(i-1)-zero.get(j-1))); } } System.out.println(dp[one.size()][zero.size()]); } System.out.println(res); } }",0.7284885311646153,19,1
1162c08f,"import java.util.*; public class CodeForces1525C{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",a4d6775d,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",0.6564444028649707,19,1
1162c08f,"import java.util.*; public class CodeForces1525C{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",f6ca6fc8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n = sc.nextInt(); ArrayList<Integer> o=new ArrayList<Integer>(); ArrayList<Integer> e=new ArrayList<Integer>(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } } System.out.println(dp[o.size()][e.size()]); } }",0.9793446295599071,19,1
116765b1,"import java.util.*; import java.io.*; public class Codeforces { static int n; static int[] h = new int[200001]; static boolean check(int x) { int[] cur_h = new int[n]; for(int i = 0; i < n; i++) cur_h[i] = h[i]; for(int i = n-1; i >= 2; i--) { if(cur_h[i] < x) return false; int d = Math.min(h[i], cur_h[i]-x)/3; cur_h[i-1] += d; cur_h[i-2] += 2*d; } return cur_h[0] >= x && cur_h[1] >= x; } public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter writer = new PrintWriter(System.out); int T = Integer.parseInt(br.readLine()); while(T-- > 0) { n = Integer.parseInt(br.readLine()); StringTokenizer st = new StringTokenizer(br.readLine()); int max = Integer.MIN_VALUE; for(int i = 0; i < n; i++) { h[i] = Integer.parseInt(st.nextToken()); max = Math.max(max, h[i]); } int l = 0; int r = max; while(l < r) { int mid = l + (r-l+1)/2; if(check(mid)) l = mid; else r = mid-1; } writer.println(l); } writer.close(); br.close(); } }",38601291,"import java.io.*; import java.util.*; public class stones { public static void main (String[] args) throws IOException { BufferedReader input = new BufferedReader(new InputStreamReader(System.in)); PrintWriter out = new PrintWriter(System.out); int T = Integer.parseInt(input.readLine()); for (int i=0;i<T;i++) { int n = Integer.parseInt(input.readLine()); int[] seq = new int[n]; StringTokenizer st = new StringTokenizer(input.readLine()); int low = 0; int high = 0; for (int j=0;j<n;j++) { seq[j] = Integer.parseInt(st.nextToken()); high = Math.max(high, seq[j]); } while (low<high) { int mid = (low+high+1)/2; if (possible(seq, mid)) { low = mid; } else high = mid-1; } out.println(low); } out.close(); } static boolean possible(int[] seq, int goal) { int L = seq.length; int[] arr = Arrays.copyOf(seq, L); for (int i=L-1;i>=2;i--) { if (arr[i] < goal) return false; int max_d = Math.min((arr[i] - goal)/3, seq[i]/3); arr[i-1] += max_d; arr[i-2] += max_d*2; arr[i] -= max_d*3; } for (int num: arr) { if (num < goal) return false; } return true; } }",0.5450958020979382,16,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",28c2d81a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class D { public static void main(String[] args) { FastScanner fs = new FastScanner(); int cases = fs.nextInt(); while(cases-->0){ int n = fs.nextInt(), k = fs.nextInt(); int[] positions = fs.readArray(k), temps = fs.readArray(k); int[] forced = new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for(int i=0; i<k; i++) forced[positions[i]-1] = temps[i]; for(int i=1; i<n; i++) forced[i] = Math.min(forced[i],forced[i-1]+1); for(int i=n-2; i>=0; i--) forced[i] = Math.min(forced[i], forced[i+1]+1); for(int i=0; i<n; i++) System.out.print(forced[i] + "" ""); System.out.println(); } } }",0.9024877320954967,8,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",4f7af821,"import java.util.*; public class contestA { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int t = scanner.nextInt(); int inf = 1000300300; while (t-->0){ int n = scanner.nextInt(); int k = scanner.nextInt(); int[] c = new int[n]; Arrays.fill(c,inf); int[] a = new int[k]; int[] b = new int[k]; for(int i=0;i<k;++i) a[i] = scanner.nextInt() - 1; for(int i=0;i<k;++i) b[i] = scanner.nextInt(); for(int i=0;i<k;++i) c[a[i]] = b[i]; for(int i=1;i<n;++i){ c[i] = Math.min(c[i],c[i-1]+1); } for(int i=n-2;i>=0;--i){ c[i] = Math.min(c[i],c[i+1]+1); } for(int i=0;i<n;++i) System.out.print(c[i]+"" ""); System.out.println(); } } }",0.4488198491238904,8,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",8f6421f3,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; public class Main{ public static void main (String[] args){ FastReader s = new FastReader(); int t=1;t=s.ni(); for(int test=1;test<=t;test++){ int n=s.ni(),k=s.ni(); int position[]=s.readArray(k),temp[]=s.readArray(k); int ans[]=new int[n]; Arrays.fill(ans,Integer.MAX_VALUE/2); for(int i=0;i<k;i++){ ans[position[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",0.4742254642625963,8,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",bdfe8110,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class E { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",0.9990684804758077,8,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",e6a6e318,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class solution { public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(), k=s.nextInt(); int[] a=s.readArray(k), temp=s.readArray(k); long[] ans=new long[n]; Arrays.fill(ans, Integer.MAX_VALUE); for (int i=0; i<k; i++) { ans[a[i]-1]=temp[i]; } for (int i=1; i<n; i++) { ans[i]=Math.min(ans[i],ans[i-1]+1); } for (int i=n-2; i>=0; i--) { ans[i]=Math.min(ans[i],ans[i+1]+1); } for (int i=0; i<n; i++) { out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.5445852054256243,8,1
11c2ab99,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",fadc1365,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a{ public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(),k=s.nextInt(); int pos[]=s.readArray(k); int temp[]=s.readArray(k); long ans[]=new long[n]; Arrays.fill(ans,Integer.MAX_VALUE); for(int i=0;i<k;i++){ ans[pos[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++){ out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.5491861958659842,8,1
12c1cc56,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int n=Integer.parseInt(bu.readLine()); String s[]=bu.readLine().split("" ""); ArrayList<Integer> z=new ArrayList<>(),o=new ArrayList<>(); long dp[][]=new long[n+1][n+1]; int i,j,a; for(i=0;i<n;i++) { a=Integer.parseInt(s[i]); if(a==0) z.add(i); else o.add(i); } for(i=1;i<=o.size();i++) { long min=dp[i-1][i-1]; for(j=i;j<=z.size();j++) { dp[i][j]=min+Math.abs(z.get(j-1)-o.get(i-1)); min=Math.min(min,dp[i-1][j]); } } long ans=Long.MAX_VALUE; for(i=o.size();i<=z.size();i++) ans=Math.min(ans,dp[o.size()][i]); System.out.print(ans); } }",7b71234c,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int n=Integer.parseInt(bu.readLine()); String s[]=bu.readLine().split("" ""); ArrayList<Integer> z=new ArrayList<>(),o=new ArrayList<>(); long dp[][]=new long[n+1][n+1]; int i,j,a; for(i=0;i<n;i++) { a=Integer.parseInt(s[i]); if(a==0) z.add(i); else o.add(i); } for(i=1;i<=o.size();i++) { long min=dp[i-1][i-1]; for(j=i;j<=z.size();j++) { dp[i][j]=min+Math.abs(z.get(j-1)-o.get(i-1)); min=Math.min(min,dp[i-1][j]); } } long ans=Long.MAX_VALUE; for(i=o.size();i<=z.size();i++) ans=Math.min(ans,dp[o.size()][i]); System.out.print(ans); } }",1.0,19,1
12c1cc56,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int n=Integer.parseInt(bu.readLine()); String s[]=bu.readLine().split("" ""); ArrayList<Integer> z=new ArrayList<>(),o=new ArrayList<>(); long dp[][]=new long[n+1][n+1]; int i,j,a; for(i=0;i<n;i++) { a=Integer.parseInt(s[i]); if(a==0) z.add(i); else o.add(i); } for(i=1;i<=o.size();i++) { long min=dp[i-1][i-1]; for(j=i;j<=z.size();j++) { dp[i][j]=min+Math.abs(z.get(j-1)-o.get(i-1)); min=Math.min(min,dp[i-1][j]); } } long ans=Long.MAX_VALUE; for(i=o.size();i<=z.size();i++) ans=Math.min(ans,dp[o.size()][i]); System.out.print(ans); } }",c06c758d,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int n=Integer.parseInt(bu.readLine()); String s[]=bu.readLine().split("" ""); ArrayList<Integer> z=new ArrayList<>(),o=new ArrayList<>(); long dp[][]=new long[n+1][n+1]; int i,j,a; for(i=0;i<n;i++) { a=Integer.parseInt(s[i]); if(a==0) z.add(i); else o.add(i); } for(i=1;i<=o.size();i++) { long min=dp[i-1][i-1]; for(j=i;j<=z.size();j++) { dp[i][j]=min+Math.abs(z.get(j-1)-o.get(i-1)); min=Math.min(min,dp[i-1][j]); } } long ans=Long.MAX_VALUE; for(i=o.size();i<=z.size();i++) ans=Math.min(ans,dp[o.size()][i]); System.out.print(ans); } }",1.0,19,1
132281e9,"import java.io.*; import java.math.*; import java.util.*; public class test { static boolean function(long a[],long x) { long arr[] = new long[a.length]; for(int i=0;i<arr.length;i++) { arr[i] = a[i]; } for(int i=arr.length-1;i>=2;i--) { if(arr[i] < x) { return false; } long d = Math.min(a[i],(arr[i]-x))/3; arr[i-1] += d; arr[i-2] += 2*d; } return (arr[0]>=x && arr[1]>=x); } public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuilder res = new StringBuilder(); int tc = sc.nextInt(); while(tc-->0) { int n = sc.nextInt(); long a[] = new long[n]; for(int i=0;i<n;i++) { a[i] = sc.nextLong(); } long l = 1; long r = 1000000000; long ans = 1; while(l<=r){ long mid = l + (r-l)/2; if(function(a,mid)){ ans = mid; l = mid+1; } else { r = mid-1; } } res.append(ans+""\n""); } System.out.println(res); } }",f415c0bf,"import java.util.Scanner; public class BalancedStoneHeaps { static boolean check(long[] a, long k) { int n = a.length; long[] temp = new long[n]; for (int i = 0; i < n; i++) { temp[i] = a[i]; } for (int i = n - 1; i >= 2; i--) { if (temp[i] < k) { return false; } long p = Math.min(a[i] / 3, (temp[i] - k) / 3); temp[i - 1] += p; temp[i - 2] += 2 * p; } if (temp[0] >= k && temp[1] >= k) { return true; } return false; } public static void main(String[] args) { Scanner scan = new Scanner(System.in); int t = scan.nextInt(); while (t-- > 0) { int n = scan.nextInt(); long[] a = new long[n]; for (int i = 0; i < n; i++) { a[i] = scan.nextInt(); } long l = 0; long r = a[n - 1]; long res = 0; while (l <= r) { long mid = (l + r) / 2; if (check(a, mid)) { l = mid + 1; res = Math.max(res, mid); } else { r = mid - 1; } } System.out.println(res); } } }",0.5349693304787102,16,1
1469697d,"import java.util.*; import java.io.*; public class Test { static final long INF = 1000000000000000000L; static FastReader s; public static void main(String[] args) throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { PrintStream ps = new PrintStream(new File(""output.txt"")); InputStream is = new FileInputStream(""input.txt""); System.setIn(is); System.setOut(ps); } long t = 1; s = new FastReader(); t = s.nextLong(); for (int i = 1; i <= t; i++) solve(); } public static void solve() throws IOException { long n = s.nextLong(); ArrayList<Long> k = new ArrayList<Long>((int)n + 1); k.add(0L); ArrayList<Long> h = new ArrayList<Long>((int) n + 1); h.add(0L); ArrayList<Long> dp = new ArrayList<Long>((int) n + 1); dp.add(0L); for (int i = 1; i <= n; i++) { long k_ = s.nextLong(); k.add(k_); } for (int i = 1; i <= n; i++) { long h_ = s.nextLong(); h.add(h_); dp.add(0L); } for (int i = 1; i <= n; i++) { long var = k.get(i) - h.get(i) + 1; for (int j = i - 1; (j > 0 && k.get(j) >= var); j--) { long var2 = k.get(j) - h.get(j) + 1; if (var2 <= var) { var = var2; } } int j = i - 1; for (; j > 0; j--) { if (k.get(j) < var) { break; } } long var3 = k.get(i) - var + 1; if (j != 0) { dp.set(i, (dp.get(j) + (var3 * (var3 + 1)) / 2)); } else { dp.set(i, ((var3 * (var3 + 1)) / 2)); } } System.out.println(dp.get((int) n)); } }",69c86b61,"import java.util.*; import java.io.*; public class Test { static final long INF = 1000000000000000000L; static FastReader s; public static void main(String[] args) throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { PrintStream ps = new PrintStream(new File(""output.txt"")); InputStream is = new FileInputStream(""input.txt""); System.setIn(is); System.setOut(ps); } long t = 1; s = new FastReader(); t = s.nextLong(); for (int i = 1; i <= t; i++) solve(); } public static void solve() throws IOException { long n = s.nextLong(); ArrayList<Long> k = new ArrayList<Long>((int)n + 1); k.add(0L); ArrayList<Long> h = new ArrayList<Long>((int) n + 1); h.add(0L); ArrayList<Long> dp = new ArrayList<Long>((int) n + 1); dp.add(0L); for (int i = 1; i <= n; i++) { long k_ = s.nextLong(); k.add(k_); } for (int i = 1; i <= n; i++) { long h_ = s.nextLong(); h.add(h_); dp.add(0L); } for (int i = 1; i <= n; i++) { long var = k.get(i) - h.get(i) + 1; for (int j = i - 1; (j > 0 && k.get(j) >= var); j--) { long var2 = k.get(j) - h.get(j) + 1; if (var2 <= var) { var = var2; } } int j = i - 1; for (; j > 0; j--) { if (k.get(j) < var) { break; } } long var3 = k.get(i) - var + 1; if (j != 0) { dp.set(i, (dp.get(j) + (var3 * (var3 + 1)) / 2)); } else { dp.set(i, ((var3 * (var3 + 1)) / 2)); } } System.out.println(dp.get((int) n)); } }",1.0,21,1
1480a727,"import java.util.*; import java.io.*; public class Main { static long mod = (long)(1e9+7); static FastReader sc = new FastReader(); static PrintWriter out = new PrintWriter(System.out); public static void main (String[] args) { int ttt = 1; ttt = sc.nextInt(); z :for(int tc=1;tc<=ttt;tc++){ int n = sc.nextInt(); long d[] = new long[n]; for(int i=0;i<n;i++) { d[i] = sc.nextLong(); } long h[] = new long[n]; for(int i=0;i<n;i++) { h[i] = sc.nextLong(); } long req[] = new long[n]; for(int i=n-1;i>0;i--) { long dif = d[i] - d[i-1]; long nxt = 0; if(i+1<n) nxt = req[i+1]; long cur = Math.max(nxt, h[i]); if(dif >= cur) { req[i] = 0; } else { req[i] = cur-dif; } } long ans = 0, prev = 0; for(int i=0;i<n;i++) { if(i == 0) { ans = ans + sumFrom(0, h[i]); prev = h[i]; } else { if(req[i] == 0) { ans = ans + sumFrom(0, h[i]); prev = h[i]; } else { if(req[i]>prev) { ans = ans + sumFrom(prev, req[i]); ans = ans + sumFrom(req[i], req[i] + (d[i]-d[i-1])); prev = req[i] + d[i] - d[i-1]; } else { ans = ans + sumFrom(prev, prev + (d[i]-d[i-1])); prev = prev + d[i] - d[i-1]; } } } } out.write(ans+""\n""); } out.close(); } private static long sumFrom(long l, long cur) { long is1 = (cur*(cur+1))/2; long is2 = (l*(l+1))/2; return is1 - is2; } }",a7d1ce58,"import java.util.*; import java.io.*; public class AiseHi { static Scanner sc = new Scanner(System.in); public static void main (String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); z : while(t-->0) { int n = sc.nextInt(); long dsasds[] = new long[n]; for(int i=0;i<n;i++) { dsasds[i] = sc.nextLong(); } long dsasdsuyuiyu[] = new long[n]; for(int i=0;i<n;i++) { dsasdsuyuiyu[i] = sc.nextLong(); } long dsasdsuyuiyubtrtr[] = new long[n]; for(int i=n-1;i>0;i--) { long dif = dsasds[i] - dsasds[i-1]; long nxt = 0; if(i+1<n) nxt = dsasdsuyuiyubtrtr[i+1]; long cur = Math.max(nxt, dsasdsuyuiyu[i]); if(dif >= cur) { dsasdsuyuiyubtrtr[i] = 0; } else { dsasdsuyuiyubtrtr[i] = cur-dif; } } long dsasdscsacsauyuiyubtrtr = 0, kokopmom = 0; for(int i=0;i<n;i++) { if(i == 0) { dsasdscsacsauyuiyubtrtr = dsasdscsacsauyuiyubtrtr + sumFrom(0, dsasdsuyuiyu[i]); kokopmom = dsasdsuyuiyu[i]; } else { if(dsasdsuyuiyubtrtr[i] == 0) { dsasdscsacsauyuiyubtrtr = dsasdscsacsauyuiyubtrtr + sumFrom(0, dsasdsuyuiyu[i]); kokopmom = dsasdsuyuiyu[i]; } else { if(dsasdsuyuiyubtrtr[i]>kokopmom) { dsasdscsacsauyuiyubtrtr = dsasdscsacsauyuiyubtrtr + sumFrom(kokopmom, dsasdsuyuiyubtrtr[i]); dsasdscsacsauyuiyubtrtr = dsasdscsacsauyuiyubtrtr + sumFrom(dsasdsuyuiyubtrtr[i], dsasdsuyuiyubtrtr[i] + (dsasds[i]-dsasds[i-1])); kokopmom = dsasdsuyuiyubtrtr[i] + dsasds[i] - dsasds[i-1]; } else { dsasdscsacsauyuiyubtrtr = dsasdscsacsauyuiyubtrtr + sumFrom(kokopmom, kokopmom + (dsasds[i]-dsasds[i-1])); kokopmom = kokopmom + dsasds[i] - dsasds[i-1]; } } } } System.out.println(dsasdscsacsauyuiyubtrtr); } } private static long sumFrom(long l, long cur) { long is1 = (cur*(cur+1))/2; long is2 = (l*(l+1))/2; return is1 - is2; } }",0.37816578280474744,21,1
14b0fb8e,"import java.io.*; import java.util.*; public class Solution { static long res; public static void main(String[] args) throws Exception { FastReader fr=new FastReader(); int n=fr.nextInt(); ArrayList<Integer> oc=new ArrayList<>(); ArrayList<Integer> em=new ArrayList<>(); res=Long.MAX_VALUE; for(int i=0;i<n;i++) { int v=fr.nextInt(); if(v==1) oc.add(i); else em.add(i); } Collections.sort(oc); Collections.sort(em); long dp[][]=new long[5001][5001]; for(int i=0;i<dp.length;i++) { for(int j=0;j<dp[i].length;j++) { dp[i][j]=-1; } } System.out.println(getMin(oc,em,0,0,dp)); } public static long getMin(ArrayList<Integer> oc,ArrayList<Integer> em,int idx,int j,long dp[][]) { if(idx==oc.size()) return 0; long available=em.size()-j; long req=oc.size()-idx; if(available<req) return Integer.MAX_VALUE; if(dp[idx][j]!=-1) return dp[idx][j]; long ch1=getMin(oc,em,idx,j+1,dp); long ch2=getMin(oc,em,idx+1,j+1,dp)+Math.abs(em.get(j)-oc.get(idx)); return dp[idx][j]=Math.min(ch1,ch2); } }",d221162a,"import java.util.*; import java.io.*; public class Main2 { static long mod = 998244353; static FastReader sc = new FastReader(); static PrintWriter out = new PrintWriter(System.out); public static void main (String[] args) { int t = 1; z : while(t-->0) { int n = sc.nextInt(); int a[] = new int[n]; for(int i=0;i<n;i++) a[i] = sc.nextInt(); List<Integer> a1 = new ArrayList<>(); ArrayList<Integer> a2 = new ArrayList<>(); for (int i = 0; i < n; i++) { if(a[i] == 0) a1.add(i); else a2.add(i); } long dp[][] = new long[n+1][n+1]; for (int i = 0; i <= n; i++) { Arrays.fill(dp[i],-1); } out.write(find(0,0,a1,a2,dp)+""\n""); } out.close(); } private static long find(int i, int j, List<Integer> a1, ArrayList<Integer> a2, long[][] dp) { if(j == a2.size()) return 0; int req = a2.size()-j; int ava = a1.size()-i; if(ava<req) return Integer.MAX_VALUE/2; if(dp[i][j] != -1) return dp[i][j]; long ans1 = find(i+1,j,a1,a2,dp); long ans2 = Math.abs(a1.get(i)-a2.get(j)) + find(i+1,j+1,a1,a2,dp); return dp[i][j] = Math.min(ans1, ans2); } }",0.45112019038595697,19,1
16857116,"import javax.swing.plaf.IconUIResource; import java.lang.reflect.Array; import java.text.CollationElementIterator; import java.util.*; import java.io.*; public class Main { public static int mod = (int) (1e9 + 7); static int ans = Integer.MAX_VALUE; public static void main(String hi[]) throws Exception { FastReader sc = new FastReader(); int t =sc.nextInt(); while(t-->0) { int n =sc.nextInt(); String a = sc.nextLine(),b=sc.nextLine(); int count1=0,count2=0,count3=0,count4=0; for(int i=0;i<n;i++) { if(a.charAt(i)=='0'&&b.charAt(i)=='0') count1++; else if(a.charAt(i)=='1'&&b.charAt(i)=='1') count2++; else if(a.charAt(i)=='1'&&b.charAt(i)=='0') count3++; else if(a.charAt(i)=='0'&&b.charAt(i)=='1') count4++; } int ans=Integer.MAX_VALUE; if(count3==count4) ans=Math.min(count3*2,ans); if(count2==count1+1) ans=Math.min(ans,2*count1+1); if(count2==1&&count1==0) ans=1; if(count3==0&&count4==0) ans=0; if(ans==Integer.MAX_VALUE) System.out.println(-1); else System.out.println(ans); } } }",f3d7ce08,"import javax.swing.plaf.IconUIResource; import java.lang.reflect.Array; import java.text.CollationElementIterator; import java.util.*; import java.io.*; public class Main { public static int mod = (int) (1e9 + 7); static int ans = Integer.MAX_VALUE; public static void main(String hi[]) throws Exception { FastReader sc = new FastReader(); int t =sc.nextInt(); while(t-->0) { int n =sc.nextInt(); String a = sc.nextLine(),b=sc.nextLine(); int count1=0,count2=0,count3=0,count4=0; for(int i=0;i<n;i++) { if(a.charAt(i)=='0'&&b.charAt(i)=='0') count1++; else if(a.charAt(i)=='1'&&b.charAt(i)=='1') count2++; else if(a.charAt(i)=='1'&&b.charAt(i)=='0') count3++; else if(a.charAt(i)=='0'&&b.charAt(i)=='1') count4++; } int ans=Integer.MAX_VALUE; if(count3==count4) ans=Math.min(count3*2,ans); if(count2==count1+1) ans=Math.min(ans,2*count1+1); if(ans==Integer.MAX_VALUE) System.out.println(-1); else System.out.println(ans); } } }",0.9930629111501712,4,1
169e34bf,"import java.util.*; public class D{ static Scanner sc; public static void solve(){ int n=sc.nextInt(); Integer a[]=new Integer[n]; int flag; for(int i=0;i<n;i++) a[i]=sc.nextInt(); String s=sc.next(); ArrayList<Integer> x=new ArrayList<>(); ArrayList<Integer> y=new ArrayList<>(); for(int i=0;i<n;i++){ if(s.charAt(i)=='B') x.add(a[i]); else y.add(a[i]); } Collections.sort(x); Collections.sort(y); int p=n; int q=1; for(int i=y.size()-1;i>=0;i--){ if(y.get(i)>p){System.out.println(""NO""); return;} p-=1; } for(int i=0;i<x.size();i++){ if(x.get(i)<q){System.out.println(""NO""); return;} q+=1; } System.out.println(""YES""); } public static void main(String args[]){ sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) solve(); } }",fae0662f,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Collections; import java.util.StringTokenizer; public class D { public static void main(String[] args) throws IOException { FastScanner fs = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t = fs.nextInt(); for (int tc = 0; tc < t; tc++) { int n = fs.nextInt(); int[] a = fs.readArray(n); String s = fs.nextLine(); ArrayList<Integer> blues = new ArrayList<Integer>(); ArrayList<Integer> reds = new ArrayList<Integer>(); for (int i = 0; i < s.length(); i++) { if (s.charAt(i) == 'B') { blues.add(a[i]); } else { reds.add(a[i]); } } Collections.sort(blues); Collections.sort(reds); boolean ok = true; for (int i = 1; i <= blues.size(); i++) { if (blues.get(i - 1) < i) { ok = false; break; } } for (int i = blues.size() + 1; i <= n; i++) { if (reds.get(i - blues.size() - 1) > i) { ok = false; break; } } if (ok) { out.println(""YES""); } else { out.println(""NO""); } } out.close(); } }",0.49234601399562034,20,1
18e2441c,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Comparator; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.Map; import java.util.HashMap; public class cf1515 { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Task solver = new Task(); solver.solve(in, out); out.close(); } static class Task { public void solve(InputReader in, PrintWriter out) { int t = in.nextInt(); while (t-- != 0) { int n = in.nextInt(); int m = in.nextInt(); int x = in.nextInt(); TreeMap<Integer, ArrayList<Integer>> map = new TreeMap<>(); for (int i = 0; i < n; i++) { int j = in.nextInt(); if (!map.containsKey(j)) { map.put(j, new ArrayList<Integer>()); } map.get(j).add(i); } out.println(""YES""); int[] ans = new int[n]; int sta = 0; for (int s : map.keySet()) { for (int i = 0; i < map.get(s).size(); i++) { ans[map.get(s).get(i)] = (sta++) % m + 1; } } for(int i=0;i<n;i++) { out.print(ans[i]+"" ""); } out.println(); } } } }",24b20554,"import java.util.*; import java.lang.*; public class Codeforces { static Scanner sr=new Scanner(System.in); public static void main(String[] args) throws java.lang.Exception { StringBuilder ans = new StringBuilder(""""); int T = sr.nextInt(); while (T-- > 0) { int n=sr.nextInt(); int m=sr.nextInt(); int x=sr.nextInt(); TreeMap<Integer,ArrayList<Integer>>h=new TreeMap<>(); for(int i=0;i<n;i++) { int a=sr.nextInt(); if(!h.containsKey(a)) h.put(a,new ArrayList<>()); h.get(a).add(i); } ans.append(""YES""); ans.append('\n'); int an[]=new int[n]; int q=0; for(int z:h.keySet()) { for(int i=0;i<h.get(z).size();i++) { an[h.get(z).get(i)]=(q++)%m+1; } } for(int i=0;i<n;i++) ans.append(an[i]+"" ""); ans.append('\n'); } System.out.println(ans); } }",0.5139586157408764,9,1
18e2441c,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.OutputStream; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Comparator; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.Map; import java.util.HashMap; public class cf1515 { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Task solver = new Task(); solver.solve(in, out); out.close(); } static class Task { public void solve(InputReader in, PrintWriter out) { int t = in.nextInt(); while (t-- != 0) { int n = in.nextInt(); int m = in.nextInt(); int x = in.nextInt(); TreeMap<Integer, ArrayList<Integer>> map = new TreeMap<>(); for (int i = 0; i < n; i++) { int j = in.nextInt(); if (!map.containsKey(j)) { map.put(j, new ArrayList<Integer>()); } map.get(j).add(i); } out.println(""YES""); int[] ans = new int[n]; int sta = 0; for (int s : map.keySet()) { for (int i = 0; i < map.get(s).size(); i++) { ans[map.get(s).get(i)] = (sta++) % m + 1; } } for(int i=0;i<n;i++) { out.print(ans[i]+"" ""); } out.println(); } } } }",43b10dec,"import java.util.*; import java.io.*; import java.lang.*; import java.util.StringTokenizer; import java.util.concurrent.TimeUnit; public class C101 { static HritikScanner sc = new HritikScanner(); static PrintWriter pw = new PrintWriter(System.out, true); public static void main(String[] args) { int t = ni(); while (t-- > 0) { solve(); } } static void solve() { int n = ni(); int m = ni(), x = ni(); Map<Integer, ArrayList<Integer>> map = new TreeMap<>(); System.out.println(""YES""); for(int i = 0; i < n; i++) { int num = ni(); if(!map.containsKey(num)) { map.put(num, new ArrayList<Integer>()); } map.get(num).add(i); } int[] ans = new int[n]; int q = 0; for(int block : map.keySet()) { for(int i = 0; i < map.get(block).size(); i++) { ans[map.get(block).get(i)] = (q++)%m+1; } } for(int ele : ans) { System.out.print(ele + "" ""); } } static int ni() { return sc.nextInt(); } }",0.6507461401760154,9,1
1b372750,"import java.io.*; import java.util.*; import java.math.BigInteger; import java.util.InputMismatchException; public class Main { static PrintWriter out; static Reader in; public static void main(String[] args) throws IOException { input_output(); Main solver = new Main(); solver.solve(); out.close(); out.flush(); } static long INF = (long)1e18; static int MAXN = (int)1e5 + 5; static int MOD = (int)1e9 + 7; static int q, t, n, m, k; static double pi = Math.PI; void solve() throws IOException { t = in.nextInt(); while (t --> 0) { n = in.nextInt(); String[] arr = new String[n]; for (int i = 0; i < n; i++) { arr[i] = in.next(); } int ans = 0; for (int i = 0; i < 26; i++) { List<Integer> list = new ArrayList<>(); for (int j = 0; j < n; j++) { int tmp = 0; for (int x = 0; x < arr[j].length(); x++) { if (arr[j].charAt(x)-'a' == i) tmp++; else tmp--; } list.add(tmp); } Collections.sort(list); int sum = 0, tmpAns = 0; for (int j = n-1; j >= 0; j--) { if (sum + list.get(j) > 0) { tmpAns++; sum += list.get(j); } else break; } ans = Math.max(ans, tmpAns); } out.println(ans); } } static void input_output() throws IOException { File f = new File(""in.txt""); if (f.exists() && !f.isDirectory()) { in = new Reader(new FileInputStream(""in.txt"")); } else in = new Reader(); f = new File(""out.txt""); if (f.exists() && !f.isDirectory()) { out = new PrintWriter(new File(""out.txt"")); } else out = new PrintWriter(System.out); } }",fdd41565,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main { public static void main(String args[]) { FastReader s=new FastReader(); int t=s.nextInt(); while(t>0) { Solve solve=new Solve(); t--; int n=s.nextInt(); String str[]=new String[n]; for(int i=0;i<n;i++) str[i]=s.nextLine(); char array[]=new char[]{'a','b','c','d','e'}; int arr[]=new int[n]; int ans=0; for(int i=0;i<5;i++) { Arrays.fill(arr,0); for(int j=0;j<n;j++) { for(int k=0;k<str[j].length();k++) { if(str[j].charAt(k)==array[i]) arr[j]++; else arr[j]--; } } ans=(ans>solve.solve(arr,n))?ans:solve.solve(arr,n); } System.out.println(ans); } } } class Solve{ public int solve(int arr[],int n) { int ans=0; int sum=0; Arrays.sort(arr); for(int i=n-1;i>=0;i--) { if(sum+arr[i]>0) { sum+=arr[i]; ans++; } else break; } return ans; } }",0.5522314388764465,15,1
1c8bb204,"import javax.print.DocFlavor; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class BST { public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); while (t-->0){ int n = Integer.parseInt(br.readLine()); long [] arr = new long[n]; StringTokenizer st = new StringTokenizer(br.readLine()); for (int i = 0; i < n; i++) { long tmp = Long.parseLong(st.nextToken()); arr[i] = tmp; } int h = 1; int v = 1; long minHor = arr[0]; long minVir = arr[1]; long sum0 = arr[0]; long sum1 = arr[1]; long total = (arr[0] + arr[1])*n; for (int i = 2; i < n; i++) { if(i%2==0){ h++; sum0 += arr[i]; minHor = Math.min(arr[i] , minHor); total = Math.min(total , minHor*(n-h+1)+(sum0-minHor)+minVir*(n-v+1)+(sum1-minVir)); }else { v++; sum1 += arr[i]; minVir = Math.min(arr[i] , minVir); total = Math.min(total , minHor*(n-h+1)+(sum0-minHor)+minVir*(n-v+1)+(sum1-minVir)); } } System.out.println(total); } } }",4b7646f4,"import javax.print.DocFlavor; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class BST { public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); while (t-->0){ int n = Integer.parseInt(br.readLine()); long [] arr = new long[n]; StringTokenizer st = new StringTokenizer(br.readLine()); for (int i = 0; i < n; i++) { long tmp = Long.parseLong(st.nextToken()); arr[i] = tmp; } int h = 1; int v = 1; long minHor = arr[0]; long minVir = arr[1]; long sum0 = arr[0]; long sum1 = arr[1]; long total = (arr[0] + arr[1])*n; for (int i = 2; i < n; i++) { if(i%2==0){ h++; sum0 += arr[i]; minHor = Math.min(arr[i] , minHor); total = Math.min(total , minHor*(n-h+1)+(sum0-minHor)+minVir*(n-v+1)+(sum1-minVir)); }else { v++; sum1 += arr[i]; minVir = Math.min(arr[i] , minVir); total = Math.min(total , minHor*(n-h+1)+(sum0-minHor)+minVir*(n-v+1)+(sum1-minVir)); } } System.out.println(total); } } }",1.0000000000000002,18,1
1c90c367,"import java.io.BufferedReader; import java.text.DecimalFormat; import java.text.ParseException; import java.text.SimpleDateFormat; import java.io.IOException; import java.io.InputStreamReader; import java.math.BigInteger; import java.util.*; import java.util.stream.Collectors; import java.util.stream.Stream; import java.io.*; public class abc { static PrintWriter pw; static long x = 1, y = 1; public static void main(String[] args) throws Exception { FastReader sc = new FastReader(); pw = new PrintWriter(System.out); int tst = sc.nextInt(); while(tst-->0) { int n=sc.nextInt(); int app[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) { app[i]=sc.nextInt(); } for(int i=0;i<n;i++) { h[i]=sc.nextInt(); } long man = 0; long last = app[n - 1] - h[n - 1] + 1; int end = n-1; for (int i = n-2; i >=0; i--) { if(app[i]>=last) { last = Math.min(last,app[i] - h[i] + 1); } else { long s = app[end]-last+1; man += (s*(s+1))/2; end = i; last = app[i] - h[i] + 1;; } } long s = app[end]-last+1; man += (s*(s+1))/2; pw.println(man); } pw.flush(); } }",f0801d53,"import java.util.*; import java.io.*; public class hmm { static Scanner sc = new Scanner(System.in); static PrintWriter pw = new PrintWriter(System.out); public static void main(String[] args) throws Exception { int t =sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int []k = sc.nextIntArray(n); int h[]=sc.nextIntArray(n); long mana = 0; pair cur = new pair(k[n-1]-h[n-1]+1,k[n-1]); for(int i=n-1;i>=0;i--) { int s = k[i]; int start = s-h[i]+1; if(s>=cur.x) { cur.x = Math.min(start, cur.x); } else { long x = cur.y - cur.x +1; mana += x*(x+1)/2; cur.x = start; cur.y = s; } } long x = cur.y - cur.x +1; mana += x*(x+1)/2; pw.println(mana); } pw.close(); } static class pair { int x ; int y; public pair(int n,int c) { x= n; y = c; } } }",0.4041325023566419,21,1
1dab88fb,"import java.util.*; public class Main { static class Edge{ public int node; public int index; public Edge(int n, int i){ node=n; index=i; } } static Scanner sc=new Scanner(System.in); public static void main(String[] args) { int test=sc.nextInt(); while(test-->0){ solve(); } } static void solve(){ int n=sc.nextInt(); ArrayList<ArrayList<Edge>> graph= new ArrayList<ArrayList<Edge>>(); for(int i=0;i<n;i++){ graph.add(new ArrayList<>()); } for (int i = 0; i < n - 1; i++) { int u = sc.nextInt(); int v = sc.nextInt(); u--; v--; graph.get(u).add(new Edge(v, i)); graph.get(v).add(new Edge(u, i)); } int start = 0; for (int i = 0; i < n; i++) { if (graph.get(i).size() > 2) { System.out.println(""-1""); return; } else if (graph.get(i).size() == 1) { start = i; } } int[] weight = new int[n - 1]; int prevNode = -1; int curNode = start; int curWeight = 2; while (true) { ArrayList<Edge> edges = graph.get(curNode); Edge next = edges.get(0); if (next.node == prevNode) { if (edges.size() == 1) { break; } else { next = edges.get(1); } } weight[next.index] = curWeight; prevNode = curNode; curNode = next.node; curWeight = 5 - curWeight; } for (int i = 0; i < n - 1; i++) { System.out.print(weight[i]); System.out.print("" ""); } System.out.println(); } }",f59d9b6e,"import java.util.*; import java.lang.*; import java.io.*; public class Codechef{ public static class Edge{ int node; int index; Edge(int node, int index){ this.node = node; this.index = index; } } static Scanner scn = new Scanner(System.in); public static void main (String[] args) throws java.lang.Exception{ int t = scn.nextInt(); while(t-->0){ solve(); } } public static void solve(){ int n = scn.nextInt(); ArrayList<Edge>[]graph = new ArrayList[n]; for(int i = 0; i < n; i++){ graph[i] = new ArrayList<>(); } for(int i = 0; i < n - 1; i++){ int u = scn.nextInt() - 1; int v = scn.nextInt() - 1; graph[u].add(new Edge(v, i)); graph[v].add(new Edge(u, i)); } int start = 0; for(int i = 0; i < n; i++){ if(graph[i].size() > 2){ System.out.println(""-1""); return; }else if(graph[i].size() == 1){ start = i; } } int[]weight = new int[n - 1]; int prevNode = -1, curNode = start, curWeight = 2; while(true){ ArrayList<Edge>edges = graph[curNode]; Edge next = edges.get(0); if(next.node == prevNode){ if(edges.size() == 1){ break; }else{ next = edges.get(1); } } weight[next.index] = curWeight; prevNode = curNode; curNode = next.node; curWeight = 5 - curWeight; } for(int i = 0; i < n - 1; i++){ System.out.print(weight[i]); System.out.print("" ""); } System.out.println(); } }",0.8951115762799103,3,1
1ea771ea,"import java.io.*; import java.util.*; public class CODECHEF { static long MOD=1000000000; static long[] solve(int[] pos,long[] arr,int n,int k){ long[] ans=new long[n]; long[] left=new long[n]; long[] right=new long[n]; long min=Integer.MAX_VALUE; for(int i=0;i<n;i++){ min=Math.min(min+1,arr[i]); left[i]=min; } min=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ min=Math.min(min+1,arr[i]); right[i]=min; } for(int i=0;i<n;i++){ ans[i]=Math.min(left[i],right[i]); } return ans; } public static void main(String[] args) throws java.lang.Exception { FastReader fs=new FastReader(System.in); int t=fs.nextInt(); while (t-->0){ int n=fs.nextInt(); int k=fs.nextInt(); int[] pos=new int[k]; for(int i=0;i<k;i++) pos[i]=fs.nextInt()-1; long[] temp=new long[n]; int ptr=0; Arrays.fill(temp,Integer.MAX_VALUE); for(int i=0;i<k;i++) temp[pos[ptr++]]=fs.nextLong(); long[] ans=solve(pos,temp,n,k); for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",ee270b2a,"import java.util.*; public class D{ private static Scanner scanner = new Scanner(System.in); public static void main(String[] args){ int q = scanner.nextInt(); while(q-- > 0){ int n = scanner.nextInt(), k = scanner.nextInt(); int[] a = new int[k]; for(int i=0;i<k;i++){ a[i] = scanner.nextInt(); } int[] t = new int[k]; for(int j=0;j<k;j++){ t[j] = scanner.nextInt(); } long[] L = new long[n]; long[] R = new long[n]; for(int i=0;i<n;i++){ L[i] = Integer.MAX_VALUE; R[i] = Integer.MAX_VALUE; } for(int i=0;i<k;i++){ L[a[i]-1] = t[i]; R[a[i]-1] = t[i]; } long min = Integer.MAX_VALUE; for(int i=0;i<n;i++){ L[i] = Math.min(min+1,L[i]); min = L[i]; } min = Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ R[i] = Math.min(min+1,R[i]); min = R[i]; } for(int i=0;i<n;i++){ System.out.print(Math.min(L[i],R[i]) + "" ""); } System.out.println(); } } }",0.6948049477933116,8,1
201e3463,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.TreeSet; public class D { public static void main(String[] args) { CP sc =new CP(); int tt = sc.nextInt(); while (tt-- > 0) { int n = sc.nextInt(); TreeSet<Long> set = new TreeSet<>(); long prev = -1; boolean flag = true; for (int i = 0; i < n; i++) { long x = sc.nextInt(); if (i == 0) { set.add(x); prev = x; continue; } if (x > prev) { Long high = set.higher(prev); if (high == null) set.add(x); else if (high >= x) set.add(x); else flag = false; } else if (x < prev) { Long low = set.lower(prev); if (low == null) set.add(x); else if (low <= x) set.add(x); else flag = false; } prev = x; } System.out.println(flag ? ""YES"" : ""NO""); } } }",de599e42,"import java.util.*; import java.io.*; public class _724 { public static void main(String[] args) { MyScanner sc = new MyScanner(); PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out)); int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); TreeSet<Long> set = new TreeSet<>(); long prev = -1; boolean ok = true; for (int i = 0; i < n; i++) { long x = sc.nextInt(); if (i == 0) { set.add(x); prev = x; continue; } if (x > prev) { Long high = set.higher(prev); if (high == null) set.add(x); else if (high >= x) set.add(x); else { ok = false; } } else if (x < prev) { Long low = set.lower(prev); if (low == null) set.add(x); else if (low <= x) set.add(x); else { ok = false; } } prev = x; } out.println(ok ? ""YES"" : ""NO""); } out.close(); } }",0.8327408621250076,11,1
21123500,"import java.io.*; import java.util.*; public class Main { static class Pair implements Comparable<Pair> { int f, s; Pair(int f, int s) { this.f = f; this.s = s; } } public static void main(String[] args) throws IOException { PriorityQueue<Pair> pq = new PriorityQueue(); for (int t = readInt(); t > 0; --t) { int n = readInt(), m = readInt(), x = readInt(); System.out.println(""YES""); for (int i = 1; i <= m; ++i) { pq.add(new Pair(readInt(), i)); System.out.print(i + "" ""); } for (int i = m + 1; i <= n; ++i) { Pair p = pq.poll(); p.f += readInt(); pq.add(p); System.out.print(p.s + "" ""); } System.out.println(); pq.clear(); } } static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static StringTokenizer st; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int readInt() throws IOException { return Integer.parseInt(next()); } }",fbd26aa0,"import java.io.*; import java.util.*; public class Main { static class Pair implements Comparable<Pair> { int f, s; Pair(int f, int s) { this.f = f; this.s = s; } } public static void main(String[] args) throws IOException { PriorityQueue<Pair> pq = new PriorityQueue(); for (int t = readInt(); t > 0; --t) { int n = readInt(), m = readInt(), x = readInt(); System.out.println(""YES""); for (int i = 1; i <= m; ++i) { pq.add(new Pair(readInt(), i)); System.out.print(i + "" ""); } for (int i = m + 1; i <= n; ++i) { Pair p = pq.poll(); p.f += readInt(); pq.add(p); System.out.print(p.s + "" ""); } System.out.println(); pq.clear(); } } static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static StringTokenizer st; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int readInt() throws IOException { return Integer.parseInt(next()); } }",1.0000000000000002,9,1
2120328e,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static FastReader sc =new FastReader(); static PrintWriter out=new PrintWriter(System.out); static int mod=10000007; static StringBuilder sb=new StringBuilder(); public static void main(String [] args) { int t = i(); while(t-->0) { int n = i(); int a[] = input(n); char c[] = inputC(); ArrayList<Integer> b = new ArrayList<>(); ArrayList<Integer> r = new ArrayList<>(); for(int i=0;i<n;i++) { if(c[i]=='R') r.add(a[i]); else b.add(a[i]); } Collections.sort(b); Collections.sort(r,Collections.reverseOrder()); boolean is = true; int cnt = 1; for(int i=0;i<b.size();i++) { if(b.get(i)<cnt) { is = false; break; } cnt++; } for(int i=0;i<r.size();i++) { if(r.get(i)>n-i) { is = false; break; } } out.println(is==true?""YES"":""NO""); } out.close(); } static int i() { return sc.nextInt(); } static String s() { return sc.next(); } static char[] inputC() { String s = sc.nextLine(); return s.toCharArray(); } static int[] input(int n) { int A[]=new int[n]; for(int i=0;i<n;i++) { A[i]=sc.nextInt(); } return A; } }",464a03b8,"import java.util.*; public class Soltion{ public static void main(String []args){ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n = sc.nextInt(); Integer[] arr = new Integer[n]; for(int i=0;i<n;i++){ arr[i] = sc.nextInt(); } String s = sc.next(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int i=0;i<s.length();i++){ if(s.charAt(i)=='B'){ blue.add(arr[i]); } else{ red.add(arr[i]); } } Collections.sort(blue); Collections.sort(red); int p=1,q=n; boolean flag = true; for(int i=red.size()-1;i>=0;i--){ if(red.get(i)>q){ flag = false; break; } q--; } for(int i=0;i<blue.size();i++){ if(blue.get(i)<p){ flag = false; break; } p++; } System.out.println(flag? ""Yes"" : ""No""); } } }",0.5456642310192302,20,1
2120328e,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static FastReader sc =new FastReader(); static PrintWriter out=new PrintWriter(System.out); static int mod=10000007; static StringBuilder sb=new StringBuilder(); public static void main(String [] args) { int t = i(); while(t-->0) { int n = i(); int a[] = input(n); char c[] = inputC(); ArrayList<Integer> b = new ArrayList<>(); ArrayList<Integer> r = new ArrayList<>(); for(int i=0;i<n;i++) { if(c[i]=='R') r.add(a[i]); else b.add(a[i]); } Collections.sort(b); Collections.sort(r,Collections.reverseOrder()); boolean is = true; int cnt = 1; for(int i=0;i<b.size();i++) { if(b.get(i)<cnt) { is = false; break; } cnt++; } for(int i=0;i<r.size();i++) { if(r.get(i)>n-i) { is = false; break; } } out.println(is==true?""YES"":""NO""); } out.close(); } static int i() { return sc.nextInt(); } static String s() { return sc.next(); } static char[] inputC() { String s = sc.nextLine(); return s.toCharArray(); } static int[] input(int n) { int A[]=new int[n]; for(int i=0;i<n;i++) { A[i]=sc.nextInt(); } return A; } }",6de04ee2,"import java.util.*; public class Solution{ public static void main(String[] args){ Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int[] a=new int[n]; for(int i=0;i<n;i++) a[i]=sc.nextInt(); char[] c=sc.next().toCharArray(); Vector<Integer> l=new Vector<>(), r=new Vector<>(); for(int i=0;i<n;i++) (c[i] == 'B' ? l : r).add(a[i]); Collections.sort(l); Collections.sort(r,Collections.reverseOrder()); boolean ok = true; for(int i=0;i<l.size();i++) if (l.get(i) < i + 1) ok = false; for(int i=0;i<r.size();i++) if (r.get(i) > n - i) ok = false; System.out.print((ok ? ""YES"" : ""NO"")+'\n'); } } }",0.6514604440775572,20,1
2120328e,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static FastReader sc =new FastReader(); static PrintWriter out=new PrintWriter(System.out); static int mod=10000007; static StringBuilder sb=new StringBuilder(); public static void main(String [] args) { int t = i(); while(t-->0) { int n = i(); int a[] = input(n); char c[] = inputC(); ArrayList<Integer> b = new ArrayList<>(); ArrayList<Integer> r = new ArrayList<>(); for(int i=0;i<n;i++) { if(c[i]=='R') r.add(a[i]); else b.add(a[i]); } Collections.sort(b); Collections.sort(r,Collections.reverseOrder()); boolean is = true; int cnt = 1; for(int i=0;i<b.size();i++) { if(b.get(i)<cnt) { is = false; break; } cnt++; } for(int i=0;i<r.size();i++) { if(r.get(i)>n-i) { is = false; break; } } out.println(is==true?""YES"":""NO""); } out.close(); } static int i() { return sc.nextInt(); } static String s() { return sc.next(); } static char[] inputC() { String s = sc.nextLine(); return s.toCharArray(); } static int[] input(int n) { int A[]=new int[n]; for(int i=0;i<n;i++) { A[i]=sc.nextInt(); } return A; } }",b790ef12,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastReader obj = new FastReader(); PrintWriter out = new PrintWriter(System.out); int l = obj.nextInt(); while (l-- != 0) { int n = obj.nextInt(); int[] num = new int[n]; for (int i = 0; i < n; i++) num[i] = obj.nextInt(); Vector<Integer> red = new Vector<>(); Vector<Integer> blue = new Vector<>(); String s = obj.next(); for (int i = 0; i < s.length(); i++) { if (s.charAt(i) == 'R') red.add(num[i]); else blue.add(num[i]); } Collections.sort(blue); Collections.sort(red); int c = 1, f = 0; for (int i = 0; i < blue.size(); i++) { if (blue.get(i) < c) { f = 1; break; } c++; } for (int i = 0; i < red.size(); i++) { if (red.get(i) > c) { f = 1; break; } c++; } if (f == 0) out.println(""YES""); else out.println(""NO""); } out.flush(); } }",0.5312552321091983,20,1
21c9b214,"import java.util.*; import java.io.*; public class AiseHi { static Scanner sc = new Scanner(System.in); public static void main (String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); z : while(t-->0) { int n = sc.nextInt(); char sadsasa[] = sc.next().toCharArray(); char sadsdsdsasa[] = sc.next().toCharArray(); if(sadsdscds(sadsasa, sadsdsdsasa)) { System.out.print(""0\n""); continue; } int sadsdscdhggs = 0, sadsdscdiyuihggs = 0, sadsdscdiyhtruihggs = 0, poinhnhgs = 0; for(int i=0;i<n;i++) { if(sadsasa[i]!=sadsdsdsasa[i]) { if(sadsasa[i] == '0') poinhnhgs++; else sadsdscdiyhtruihggs++; } else { if(sadsasa[i] == '0') sadsdscdiyuihggs++; else sadsdscdhggs++; } } int rtenymu = 0; rtenymu = uiuyfdsfrinhgw(sadsdscdhggs, sadsdscdiyuihggs, sadsdscdiyhtruihggs, poinhnhgs); rtenymu = Math.min(rtenymu, uiuyfdsfrinhgwdss(sadsdscdhggs, sadsdscdiyuihggs, sadsdscdiyhtruihggs, poinhnhgs)); if(rtenymu == Integer.MAX_VALUE) { rtenymu = -1; } System.out.print(rtenymu+""\n""); } } private static int uiuyfdsfrinhgwdss(int sadsdscdhggs, int sadsdscdiyuihggs, int sadsdscdiyhtruihggs, int poinhnhgs) { boolean rtenymuefwefw = false; int uiuyinhgw = 0; while(true) { if(sadsdscdiyhtruihggs == 0 && poinhnhgs == 0) return uiuyinhgw; if((rtenymuefwefw && sadsdscdhggs == 0) || (!rtenymuefwefw && sadsdscdiyhtruihggs == 0)) return Integer.MAX_VALUE; if(rtenymuefwefw) { int td1 = sadsdscdiyuihggs; int td0 = sadsdscdhggs - 1; int te1 = poinhnhgs + 1; int te0 = sadsdscdiyhtruihggs; sadsdscdiyhtruihggs = td1; poinhnhgs = td0; sadsdscdhggs = te1; sadsdscdiyuihggs = te0; } else { int td1 = 1 + sadsdscdiyuihggs; int td0 = sadsdscdhggs; int te1 = poinhnhgs; int te0 = sadsdscdiyhtruihggs-1; sadsdscdiyhtruihggs = td1; poinhnhgs = td0; sadsdscdhggs = te1; sadsdscdiyuihggs = te0; } rtenymuefwefw = !rtenymuefwefw; uiuyinhgw++; } } private static int uiuyfdsfrinhgw(int sadsdscdhggs, int sadsdscdiyuihggs, int sadsdscdiyhtruihggs, int poinhnhgs) { boolean rtenymuefwefw = true; int uiuyinhgw = 0; while(true) { if(sadsdscdiyhtruihggs == 0 && poinhnhgs == 0) return uiuyinhgw; if((rtenymuefwefw && sadsdscdhggs == 0) || (!rtenymuefwefw && sadsdscdiyhtruihggs == 0)) return Integer.MAX_VALUE; if(rtenymuefwefw) { int td1 = sadsdscdiyuihggs; int td0 = sadsdscdhggs - 1; int te1 = poinhnhgs + 1; int te0 = sadsdscdiyhtruihggs; sadsdscdiyhtruihggs = td1; poinhnhgs = td0; sadsdscdhggs = te1; sadsdscdiyuihggs = te0; } else { int td1 = 1 + sadsdscdiyuihggs; int td0 = sadsdscdhggs; int te1 = poinhnhgs; int te0 = sadsdscdiyhtruihggs-1; sadsdscdiyhtruihggs = td1; poinhnhgs = td0; sadsdscdhggs = te1; sadsdscdiyuihggs = te0; } rtenymuefwefw = !rtenymuefwefw; uiuyinhgw++; } } private static boolean sadsdscds(char[] sadsasa, char[] sadsdsdsasa) { for(int i=0;i<sadsasa.length;i++) { if(sadsasa[i]!=sadsdsdsasa[i]) return false; } return true; } }",d5a20936,"import java.util.*; import java.io.*; public class Main { static long mod = (long)(1e9+7); static FastReader sc = new FastReader(); static PrintWriter out = new PrintWriter(System.out); static int ans; public static void main (String[] args) { int ttt = 1; ttt = sc.nextInt(); z :for(int tc=1;tc<=ttt;tc++){ int n = sc.nextInt(); char a[] = sc.next().toCharArray(); char b[] = sc.next().toCharArray(); if(same(a, b)) { out.write(""0\n""); continue; } int e1 = 0, e0 = 0, d1 = 0, d0 = 0; for(int i=0;i<n;i++) { if(a[i]!=b[i]) { if(a[i] == '0') d0++; else d1++; } else { if(a[i] == '0') e0++; else e1++; } } int ans = 0; ans = solveByFirstD(e1, e0, d1, d0); ans = Math.min(ans, solveByFirstE(e1, e0, d1, d0)); if(ans == Integer.MAX_VALUE) { ans = -1; } out.write(ans+""\n""); } out.close(); } private static int solveByFirstD(int e1, int e0, int d1, int d0) { boolean is = false; int cnt = 0; while(true) { if(d1 == 0 && d0 == 0) return cnt; if((is && e1 == 0) || (!is && d1 == 0)) return Integer.MAX_VALUE; if(is) { int td1 = e0; int td0 = e1 - 1; int te1 = d0 + 1; int te0 = d1; d1 = td1; d0 = td0; e1 = te1; e0 = te0; } else { int td1 = 1 + e0; int td0 = e1; int te1 = d0; int te0 = d1-1; d1 = td1; d0 = td0; e1 = te1; e0 = te0; } is = !is; cnt++; } } private static int solveByFirstE(int e1, int e0, int d1, int d0) { boolean is = true; int cnt = 0; while(true) { if(d1 == 0 && d0 == 0) return cnt; if((is && e1 == 0) || (!is && d1 == 0)) return Integer.MAX_VALUE; if(is) { int td1 = e0; int td0 = e1 - 1; int te1 = d0 + 1; int te0 = d1; d1 = td1; d0 = td0; e1 = te1; e0 = te0; } else { int td1 = 1 + e0; int td0 = e1; int te1 = d0; int te0 = d1-1; d1 = td1; d0 = td0; e1 = te1; e0 = te0; } is = !is; cnt++; } } private static boolean same(char[] a, char[] b) { for(int i=0;i<a.length;i++) { if(a[i]!=b[i]) return false; } return true; } }",0.4125109198048567,4,1
22b41936,"import java.io.*; import java.util.*; import java.io.BufferedReader; import java.io.IOException; import java.util.Collections; import java.io.InputStreamReader; import static java.lang.Math.*; import static java.lang.System.*; public class Main1 { static ArrayList<Integer> list1 = new ArrayList<>() ; static ArrayList<Integer> list2 = new ArrayList<>() ; static int n , m ; static long dp[][] ; static long solver(int i , int j ){ if (j == m)return 0 ; int tt1 = n-i ; int tt2 = m-j ; if (n-i < m-j)return Long.MAX_VALUE/2 ; if ( dp[i][j] != -1 )return dp[i][j] ; long a = solver(i+1 , j) ; long b = abs( list1.get(i) - list2.get(j)) + solver(i+1 , j+1) ; return dp[i][j] = min(a , b) ; } public static void main(String[] args) throws IOException { FastScanner in = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int N = in.nextInt() ; int a[] = in.readArray(N) ; for (int i = 0; i <N ; i++) { if (a[i] == 1)list2.add(i) ; else list1.add(i) ; } n = list1.size() ; m = list2.size() ; dp = new long[n][m] ; for(int i=0 ; i<n ; i++) for(int j=0 ; j<m ; j++) dp[i][j] = -1 ; System.out.println(solver(0 , 0 )); out.flush(); out.close(); } static ArrayList<Integer> list = new ArrayList<>(); static boolean A[] = new boolean[2 * 90000001]; }",9cea10af,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; import java.util.StringTokenizer; public class P4 { static int dp[][]=new int[5000+1][5000+1]; public static void main(String[] args) { FastReader sc=new FastReader(); int t=1; StringBuilder s=new StringBuilder(); while(t--!=0) { int n=sc.nextInt(); int a[]=new int[n]; for(int i=0;i<=n;i++) { for(int j=0;j<=n;j++) { P4.dp[i][j]=-1; } } ArrayList<Integer> one=new ArrayList<>(); ArrayList<Integer> zero=new ArrayList<>(); for(int i=0;i<n;i++) { a[i]=sc.nextInt(); if(a[i]==0) { zero.add(i); }else { one.add(i); } } Collections.sort(zero); Collections.sort(one); long ans=sol(0,0,zero.size(),one.size(),a,zero,one); System.out.println(ans); } } private static long sol(int i, int j, int n, int m,int a[], ArrayList<Integer> zero, ArrayList<Integer> one) { if(j==m) { return 0; } int av=n-i; int rem=m-j; if(av<rem) { return Integer.MAX_VALUE-1; } if(dp[i][j]!=-1) { return dp[i][j]; } long ans1=sol(i+1,j,n,m,a, zero, one); long ans2=Math.abs(zero.get(i)-one.get(j))+sol(i+1,j+1,n,m,a, zero, one); dp[i][j]=(int) Math.min(ans1, ans2); return dp[i][j]; } }",0.6030202634729434,19,1
24b20554,"import java.util.*; import java.lang.*; public class Codeforces { static Scanner sr=new Scanner(System.in); public static void main(String[] args) throws java.lang.Exception { StringBuilder ans = new StringBuilder(""""); int T = sr.nextInt(); while (T-- > 0) { int n=sr.nextInt(); int m=sr.nextInt(); int x=sr.nextInt(); TreeMap<Integer,ArrayList<Integer>>h=new TreeMap<>(); for(int i=0;i<n;i++) { int a=sr.nextInt(); if(!h.containsKey(a)) h.put(a,new ArrayList<>()); h.get(a).add(i); } ans.append(""YES""); ans.append('\n'); int an[]=new int[n]; int q=0; for(int z:h.keySet()) { for(int i=0;i<h.get(z).size();i++) { an[h.get(z).get(i)]=(q++)%m+1; } } for(int i=0;i<n;i++) ans.append(an[i]+"" ""); ans.append('\n'); } System.out.println(ans); } }",43b10dec,"import java.util.*; import java.io.*; import java.lang.*; import java.util.StringTokenizer; import java.util.concurrent.TimeUnit; public class C101 { static HritikScanner sc = new HritikScanner(); static PrintWriter pw = new PrintWriter(System.out, true); public static void main(String[] args) { int t = ni(); while (t-- > 0) { solve(); } } static void solve() { int n = ni(); int m = ni(), x = ni(); Map<Integer, ArrayList<Integer>> map = new TreeMap<>(); System.out.println(""YES""); for(int i = 0; i < n; i++) { int num = ni(); if(!map.containsKey(num)) { map.put(num, new ArrayList<Integer>()); } map.get(num).add(i); } int[] ans = new int[n]; int q = 0; for(int block : map.keySet()) { for(int i = 0; i < map.get(block).size(); i++) { ans[map.get(block).get(i)] = (q++)%m+1; } } for(int ele : ans) { System.out.print(ele + "" ""); } } static int ni() { return sc.nextInt(); } }",0.5526703792086678,9,1
2695ce73,"import java.io.*; import java.util.*; public class c { public static void main(String args[]) throws IOException { FastScanner in = new FastScanner(System.in); PrintWriter out = new PrintWriter(System.out); int t = in.nextInt(); for ( ; t > 0; t--) { int n = in.nextInt(); long[] vals = new long[n]; for (int i = 0; i < n; i++) vals[i] = in.nextInt(); long oo = (long)(1e18); long[] min = {oo, oo}; long[] sub = {n, n}; long sum = 0; long max = oo; for (int i = 0; i < n; i++) { min[i % 2] = Math.min(min[i % 2], vals[i]); sub[i % 2]--; sum += vals[i]; if (i > 0) { max = Math.min(max, sum + min[0] * sub[0] + min[1] * sub[1]); } } out.println(max); } out.close(); } }",ac8acb97,"import java.util.Scanner; public class C1499 { public static void main(String[] args) { Scanner in = new Scanner(System.in); int t = in.nextInt(); while (t-- > 0) { int n = in.nextInt(); long[] mn = { Long.MAX_VALUE, Long.MAX_VALUE }; long[] rem = { n, n }; long sum = 0; long ans = Long.MAX_VALUE; for (int i = 0; i < n; i++) { int temp = in.nextInt(); mn[i % 2] = Math.min(mn[i % 2], temp); rem[i % 2]--; sum += temp; if (i > 0) { long cur = sum + rem[0] * mn[0] + rem[1] * mn[1]; ans = Math.min(ans, cur); } } System.out.println(ans); } } }",0.48066996392996936,18,1
28c2d81a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class D { public static void main(String[] args) { FastScanner fs = new FastScanner(); int cases = fs.nextInt(); while(cases-->0){ int n = fs.nextInt(), k = fs.nextInt(); int[] positions = fs.readArray(k), temps = fs.readArray(k); int[] forced = new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for(int i=0; i<k; i++) forced[positions[i]-1] = temps[i]; for(int i=1; i<n; i++) forced[i] = Math.min(forced[i],forced[i-1]+1); for(int i=n-2; i>=0; i--) forced[i] = Math.min(forced[i], forced[i+1]+1); for(int i=0; i<n; i++) System.out.print(forced[i] + "" ""); System.out.println(); } } }",48c5f745,"import java.io.*; import java.util.*; public class E { public static void main(String[] args) throws Exception { Reader sc=new Reader(); PrintWriter pw=new PrintWriter(System.out); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); int[] idxes=new int[k]; int[] temps=new int[k]; for(int i=0;i<k;i++) { idxes[i]=sc.nextInt()-1; } for(int i=0;i<k;i++) { temps[i]=sc.nextInt(); } int[] ans=new int[n]; Arrays.fill(ans, Integer.MAX_VALUE/2); for(int i=0;i<k;i++) { ans[idxes[i]]=temps[i]; } for(int i=1;i<n;i++) { ans[i]=Math.min(ans[i], ans[i-1]+1); } for(int i=n-2;i>=0;i--) { ans[i]=Math.min(ans[i], ans[i+1]+1); } for(int i=0;i<n;i++) { pw.print(ans[i]+"" ""); } pw.println(); } pw.flush(); sc.close(); } }",0.3990480022425672,8,1
28c2d81a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class D { public static void main(String[] args) { FastScanner fs = new FastScanner(); int cases = fs.nextInt(); while(cases-->0){ int n = fs.nextInt(), k = fs.nextInt(); int[] positions = fs.readArray(k), temps = fs.readArray(k); int[] forced = new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for(int i=0; i<k; i++) forced[positions[i]-1] = temps[i]; for(int i=1; i<n; i++) forced[i] = Math.min(forced[i],forced[i-1]+1); for(int i=n-2; i>=0; i--) forced[i] = Math.min(forced[i], forced[i+1]+1); for(int i=0; i<n; i++) System.out.print(forced[i] + "" ""); System.out.println(); } } }",8f6421f3,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; public class Main{ public static void main (String[] args){ FastReader s = new FastReader(); int t=1;t=s.ni(); for(int test=1;test<=t;test++){ int n=s.ni(),k=s.ni(); int position[]=s.readArray(k),temp[]=s.readArray(k); int ans[]=new int[n]; Arrays.fill(ans,Integer.MAX_VALUE/2); for(int i=0;i<k;i++){ ans[position[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",0.41292791394136114,8,1
28c2d81a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class D { public static void main(String[] args) { FastScanner fs = new FastScanner(); int cases = fs.nextInt(); while(cases-->0){ int n = fs.nextInt(), k = fs.nextInt(); int[] positions = fs.readArray(k), temps = fs.readArray(k); int[] forced = new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for(int i=0; i<k; i++) forced[positions[i]-1] = temps[i]; for(int i=1; i<n; i++) forced[i] = Math.min(forced[i],forced[i-1]+1); for(int i=n-2; i>=0; i--) forced[i] = Math.min(forced[i], forced[i+1]+1); for(int i=0; i<n; i++) System.out.print(forced[i] + "" ""); System.out.println(); } } }",fa484fdd,"import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; public class AirConditioners { static InputReader inputReader=new InputReader(System.in); static void solve() { int n=inputReader.nextInt(); int k=inputReader.nextInt(); int pos[]=inputReader.nextIntArray(k); int power[]=inputReader.nextIntArray(k); int answer[]=new int[n]; Arrays.fill(answer,(int)(2e9)); for (int i=0;i<k;i++) { answer[pos[i]-1]=power[i]; } for (int i=1;i<n;i++) { answer[i]=Math.min(answer[i],answer[i-1]+1); } for (int i=n-2;i>=0;i--) { answer[i]=Math.min(answer[i],answer[i+1]+1); } for (int i=0;i<n;i++) { out.print(answer[i]+"" ""); } } static PrintWriter out=new PrintWriter((System.out)); public static void main(String args[])throws IOException { int t=inputReader.nextInt(); while(t-->0) { solve(); out.println(); } out.close(); } }",0.39406001382526934,8,1
2915ac5b,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static long min; static FastReader sc=new FastReader(); public static void main (String[] args) throws java.lang.Exception { PrintWriter w=new PrintWriter(System.out); int t=sc.nextInt(); while(t-->0){ int n=sc.nextInt(); long[] c=new long[n]; for(int i=0;i<n;i++) { c[i]=sc.nextLong(); } min=c[0]*n+c[1]*n; long x=Long.MAX_VALUE-1,y=Long.MAX_VALUE-1,sumx=0,sumy=0,cx=0,cy=0,min1=Long.MAX_VALUE-1,min2=Long.MAX_VALUE-1; for(int i=0;i<n;i++) { if(i%2==0){ x=Math.min(x,c[i]);sumx+=c[i];cx=i/2+1; min1=sumx+x*(n-cx); } else {y=Math.min(y,c[i]);sumy+=c[i];cy=(i+1)/2; min2=sumy+y*(n-cy); } if(i>=1)min=Math.min(min,min1+min2); } System.out.println(min); } w.flush(); w.close(); } }",9b8c6bd7,"import java.util.*; import java.io.*; import java.math.*; public final class Main{ public static void main(String[] args) throws IOException{ FastReader sc=new FastReader(); PrintWriter writer=new PrintWriter(System.out); int tc=sc.nextInt(); while(tc-->0) { int n=sc.nextInt(); long[] c=new long[n]; for(int i=0;i<n;i++) c[i]=sc.nextInt(); long ans=c[0]*n+c[1]*n; long x=Long.MAX_VALUE-1,y=Long.MAX_VALUE-1,sumx=0,sumy=0,cx=0,cy=0,min1=Long.MAX_VALUE-1,min2=Long.MAX_VALUE-1; for(int i=0;i<n;i++) { if(i%2==0){ x=Math.min(x,c[i]); sumx+=c[i]; cx=i/2+1; min1=sumx+x*(n-cx); } else { y=Math.min(y,c[i]); sumy+=c[i];cy=(i+1)/2; min2=sumy+y*(n-cy); } if(i>=1) ans=Math.min(ans,min1+min2); } System.out.println(ans); } writer.flush(); writer.close(); } }",0.8444040418280873,18,1
29cb9b0e,"import java.util.*; public class Main { public static void solve (int ar[],int n) { if(n%2==1) { int c=ar[2]; int b=ar[1]; int a=ar[0]; if(a+b!=0) { ar[2]=-(a+b); ar[1]=c; ar[0]=c; } else if(b+c!=0) { ar[2]=a; ar[1]=a; ar[0]=-(b+c); } else { ar[2]=b; ar[1]=-(a+c); ar[0]=b; } System.out.print(ar[0]+"" ""+ar[1]+"" ""+ar[2]+"" ""); for(int i=3;i<(n);i=i+2) { System.out.print((-ar[i+1])+"" ""+ar[i]+"" ""); } System.out.println(); } else { for(int i=0;i<(n);i=i+2) { System.out.print((-ar[i+1])+"" ""+ar[i]+"" ""); } System.out.println(); } } public static void main(String[] args) { Scanner sc=new Scanner(System.in);int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int ar[]=new int[n]; for(int i=0;i<n;i++) ar[i]=sc.nextInt(); solve(ar,n); } } }",d3da65ff,"import java.util.*; public class Main { public static void solve (int ar[],int n) { if(n%2==1) { int c=ar[2]; int b=ar[1]; int a=ar[0]; if(a+b!=0) { ar[2]=-(a+b); ar[1]=c; ar[0]=c; } else if(b+c!=0) { ar[2]=a; ar[1]=a; ar[0]=-(b+c); } else { ar[2]=b; ar[1]=-(a+c); ar[0]=b; } System.out.print(ar[0]+"" ""+ar[1]+"" ""+ar[2]+"" ""); for(int i=3;i<(n);i=i+2) { System.out.print((-ar[i+1])+"" ""+ar[i]+"" ""); } System.out.println(); } else { for(int i=0;i<(n);i=i+2) { System.out.print((-ar[i+1])+"" ""+ar[i]+"" ""); } System.out.println(); } } public static void main(String[] args) { Scanner sc=new Scanner(System.in);int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int ar[]=new int[n]; for(int i=0;i<n;i++) ar[i]=sc.nextInt(); solve(ar,n); } } }",1.0000000000000002,17,1
29cf2e70,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner in = new Scanner(System.in); int T = in.nextInt(); while(T-- > 0) { int n = in.nextInt(); int[] a = new int[n]; for(int j=0;j<n;j++) a[j] = in.nextInt(); char[] s = in.next().toCharArray(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int j=0;j<n;j++) { if(s[j] == 'B') blue.add(a[j]); else red.add(a[j]); } Collections.sort(blue); Collections.sort(red); boolean p = true; int cur = 1; for(int val : blue) { if(val<cur) { p = false; break; } else cur++; } for(int val : red) { if(val>cur) { p = false; break; } else cur++; } if(p) System.out.println(""yes""); else System.out.println(""no""); } } }",2f4509a0,"import java.util.*; import java.io.*; public class Main { private static FS sc = new FS(); private static class extra { static int[] intArr(int size) { int[] a = new int[size]; for(int i = 0; i < size; i++) a[i] = sc.nextInt(); return a; } } static int mod = (int) 1e9 + 7; static LinkedList<String>[] temp, temp2; static int inf = (int) 1e9; public static void main(String[] args) { int t = sc.nextInt(); StringBuilder ret = new StringBuilder(); while(t-- > 0) { int n = sc.nextInt(); int[] a = extra.intArr(n); String s = sc.next(); ArrayList<Integer> red = new ArrayList<>(), blue = new ArrayList<>(); for(int i = 0; i < n; i++) { if(s.charAt(i) == 'R') red.add(a[i]); else blue.add(a[i]); } Collections.sort(red); Collections.sort(blue); int start = 1, flag = 0; for(int aa:blue) { if(start > aa) { flag = 1; break; } start++; } for(int aa:red) { if(start < aa) { flag = 1; break; } start++; } if(flag == 1) ret.append(""NO\n""); else ret.append(""YES\n""); } System.out.println(ret); } }",0.5416554513743685,20,1
29cf2e70,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner in = new Scanner(System.in); int T = in.nextInt(); while(T-- > 0) { int n = in.nextInt(); int[] a = new int[n]; for(int j=0;j<n;j++) a[j] = in.nextInt(); char[] s = in.next().toCharArray(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int j=0;j<n;j++) { if(s[j] == 'B') blue.add(a[j]); else red.add(a[j]); } Collections.sort(blue); Collections.sort(red); boolean p = true; int cur = 1; for(int val : blue) { if(val<cur) { p = false; break; } else cur++; } for(int val : red) { if(val>cur) { p = false; break; } else cur++; } if(p) System.out.println(""yes""); else System.out.println(""no""); } } }",584b0e9e,"import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.InputStreamReader; import java.io.PrintWriter; import java.math.BigInteger; import java.util.ArrayList; import java.util.Arrays; import java.util.BitSet; import java.util.Calendar; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.SortedSet; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class D_Round_753_Div3 { public static int MOD = 1000000007; static int[][] dp; public static void main(String[] args) throws FileNotFoundException { PrintWriter out = new PrintWriter(System.out); Scanner in = new Scanner(); int T = in.nextInt(); for (int z = 0; z < T; z++) { int n = in.nextInt(); int[] data = new int[n]; for (int i = 0; i < n; i++) { data[i] = in.nextInt(); } String line = in.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < n; i++) { if (line.charAt(i) == 'B') { blue.add(data[i]); } else { red.add(data[i]); } } Collections.sort(blue); Collections.sort(red); int st = 1; boolean ok = true; for (int i : blue) { if (i < st) { ok = false; break; } st++; } if (ok) { for (int i : red) { if (i > st) { ok = false; break; } st++; } } out.println(ok ? ""Yes"" : ""No""); } out.close(); } }",0.49008944460732023,20,1
29cf2e70,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner in = new Scanner(System.in); int T = in.nextInt(); while(T-- > 0) { int n = in.nextInt(); int[] a = new int[n]; for(int j=0;j<n;j++) a[j] = in.nextInt(); char[] s = in.next().toCharArray(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int j=0;j<n;j++) { if(s[j] == 'B') blue.add(a[j]); else red.add(a[j]); } Collections.sort(blue); Collections.sort(red); boolean p = true; int cur = 1; for(int val : blue) { if(val<cur) { p = false; break; } else cur++; } for(int val : red) { if(val>cur) { p = false; break; } else cur++; } if(p) System.out.println(""yes""); else System.out.println(""no""); } } }",72d9eb5b,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner in = new Scanner(System.in); int T = in.nextInt(); while(T-- > 0) { int n = in.nextInt(); int[] a = new int[n]; for(int j=0;j<n;j++) a[j] = in.nextInt(); char[] s = in.next().toCharArray(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int j=0;j<n;j++) { if(s[j] == 'B') blue.add(a[j]); else red.add(a[j]); } Collections.sort(blue); Collections.sort(red); boolean p = true; int cur = 1; for(int val : blue) { if(val<cur) { p = false; break; } else cur++; } for(int val : red) { if(val>cur) { p = false; break; } else cur++; } if(p) System.out.println(""yes""); else System.out.println(""no""); } } }",1.0,20,1
29cf2e70,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner in = new Scanner(System.in); int T = in.nextInt(); while(T-- > 0) { int n = in.nextInt(); int[] a = new int[n]; for(int j=0;j<n;j++) a[j] = in.nextInt(); char[] s = in.next().toCharArray(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int j=0;j<n;j++) { if(s[j] == 'B') blue.add(a[j]); else red.add(a[j]); } Collections.sort(blue); Collections.sort(red); boolean p = true; int cur = 1; for(int val : blue) { if(val<cur) { p = false; break; } else cur++; } for(int val : red) { if(val>cur) { p = false; break; } else cur++; } if(p) System.out.println(""yes""); else System.out.println(""no""); } } }",b2001d68,"import java.util.*; import java.lang.*; import java.io.*; public class D753 { public static void main(String[] args) throws java.lang.Exception { try { FastReader sc = new FastReader(); int t = sc.nextInt(); while (t-- > 0) { int n=sc.nextInt(); int[] arr=new int[n]; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); } char[] color=sc.next().toCharArray(); ArrayList<Integer> b=new ArrayList<>(); ArrayList<Integer> r=new ArrayList<>(); for(int i=0;i<n;i++){ if(color[i]=='B')b.add(arr[i]); else r.add(arr[i]); } Collections.sort(b); Collections.sort(r); boolean ok=true; int cur=1; for(int i:b){ if(i>=cur)cur++; else{ ok=false; break; } } for(int i:r){ if(i<=cur)cur++; else{ ok=false; break; } } if(ok)System.out.println(""YES""); else System.out.println(""NO""); } } catch (Exception e) { return; } } }",0.5996767272094933,20,1
2a655afe,"import java.io.*; import java.util.*; public class c { public static BufferedReader in; public static void main(String[] args) throws Exception { in = new BufferedReader(new InputStreamReader(System.in)); PrintWriter out = new PrintWriter(System.out); int numcases = Integer.parseInt(in.readLine()); for (int casenum = 0; casenum < numcases; casenum++) { int n = Integer.parseInt(in.readLine()); int[] p = new int[n]; Arrays.fill(p, -1); for (int i = 0; i < n; i++) { if (p[i] != -1) continue; ArrayList<Integer> cycle = new ArrayList<>(); cycle.add(query(i)); while (cycle.size() == 1 || !cycle.get(0).equals(cycle.get(cycle.size() - 1))) { cycle.add(query(i)); } cycle.remove(cycle.size() - 1); for (int j = 0; j < cycle.size() - 1; j++) { p[cycle.get(j)] = cycle.get(j + 1); } p[cycle.get(cycle.size() - 1)] = cycle.get(0); } StringBuilder b = new StringBuilder(); b.append(""! ""); for (int i = 0; i < n; i++) { b.append((p[i] + 1) + (i < n - 1 ? "" "" : ""\n"")); } System.out.print(b); System.out.flush(); } in.close(); out.close(); } public static int query(int i) throws Exception { System.out.println(""? "" + (i + 1)); System.out.flush(); int k = Integer.parseInt(in.readLine()); return k - 1; } }",692a4496,"import java.io.*; import java.util.*; public class c { public static BufferedReader in; public static void main(String[] args) throws Exception { in = new BufferedReader(new InputStreamReader(System.in)); PrintWriter out = new PrintWriter(System.out); int numcases = Integer.parseInt(in.readLine()); for (int casenum = 0; casenum < numcases; casenum++) { int n = Integer.parseInt(in.readLine()); int[] p = new int[n]; Arrays.fill(p, -1); for (int i = 0; i < n; i++) { if (p[i] != -1) continue; ArrayList<Integer> cycle = new ArrayList<>(); cycle.add(query(i)); while (cycle.size() == 1 || !cycle.get(0).equals(cycle.get(cycle.size() - 1))) { cycle.add(query(i)); } cycle.remove(cycle.size() - 1); for(int j = 0; j < cycle.size() - 1; j++){ p[cycle.get(j)] = cycle.get(j + 1); } p[cycle.get(cycle.size() - 1)] = cycle.get(0); } StringBuilder b = new StringBuilder(); b.append(""! ""); for (int i = 0; i < n; i++) { b.append((p[i] + 1) + (i < n - 1 ? "" "" : ""\n"")); } System.out.print(b); System.out.flush(); } in.close(); out.close(); } public static int query(int i) throws Exception { System.out.println(""? "" + (i + 1)); System.out.flush(); int k = Integer.parseInt(in.readLine()); return k - 1; } }",1.0000000000000007,5,1
2b2d3b84,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.HashMap; import java.util.Scanner; import java.util.StringTokenizer; public class Main { public static void main(String[] args) { FastReader in = new FastReader(); int t=in.nextInt(); while(t-->0) { int n=in.nextInt(); int k=in.nextInt(); int a[]=new int[k]; int ans[]=new int[n]; int tem[]=new int[k]; for(int i=0;i<k;i++) a[i]=in.nextInt(); for(int i=0;i<k;i++) tem[i]=in.nextInt(); long c[]=new long[n]; long l[]=new long[n]; long r[]=new long[n]; Arrays.fill(c,Integer.MAX_VALUE); Arrays.fill(l, Integer.MAX_VALUE); Arrays.fill(r,Integer.MAX_VALUE); long p=Integer.MAX_VALUE; for(int i=0;i<k;i++) c[a[i]-1]=tem[i]; for(int i=0;i<n;i++) { p=Math.min(p+1,c[i]); l[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--) { p=Math.min(p+1,c[i]); r[i]=p; } for(int i=0;i<n;i++) System.out.print(Math.min(l[i],r[i])+"" ""); System.out.println(); } } }",aaccc000,"import java.io.*; import java.util.*; public class GFG { public static void main (String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-- > 0){ int n = sc.nextInt(); int k = sc.nextInt(); int[] a = new int[k]; int[] temp = new int[k]; for(int i=0;i<k;i++){ a[i] = sc.nextInt(); } for(int i=0;i<k;i++){ temp[i] = sc.nextInt(); } long[] c = new long[n]; Arrays.fill(c,Integer.MAX_VALUE); for(int i=0;i<k;i++){ c[a[i]-1] = temp[i]; } long p = Integer.MAX_VALUE; long[] left = new long[n]; for(int i=0;i<n;i++){ p = (p+1<c[i])?p+1:c[i]; left[i] = p; } p = Integer.MAX_VALUE; long[] right = new long[n]; for(int i=n-1;i>=0;i--){ p = (p+1<c[i])?p+1:c[i]; right[i] = p; } for(int i=0;i<n;i++){ long kl = (left[i]>right[i])?right[i]:left[i]; System.out.print(kl+"" ""); } System.out.println(); } } }",0.7278281819971519,8,1
2b7b2d45,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; public class D_1552 { public static void main(String args[]) { FastReader fs = new FastReader(); int tc = fs.nextInt(); while(tc-- > 0) { boolean flag=false; int n=fs.nextInt(); int[] ar=new int[n]; for(int i=0;i<n;i++) {ar[i]=fs.nextInt();} for(int i=1;i<Math.pow(3, n);i++) { int copy=i; int sum=0; for(int j=0;j<n;j++) { int rem=copy%3; sum+=rem==0?0:rem==1?ar[j]:-ar[j]; copy=copy/3; } if(sum==0) {System.out.println(""yes""); flag=true; break;} } if(flag==false) System.out.println(""no""); } } }",a0b406e6,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Task solver = new Task(); int tcCnt = in.nextInt(); for (int tc = 1; tc <= tcCnt; tc++) solver.solve(tc, in, out); out.close(); } static class Task { public void solve(int testNumber, InputReader in, PrintWriter out) { int n = in.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) { a[i] = in.nextInt(); } for (int mask = 1; mask < (int)(Math.pow(3, n)); mask++) { int copy = mask; int sum = 0; for (int idx = 0; idx < n; idx++) { int digit = copy % 3; sum += digit == 0 ? 0 : digit == 1 ? a[idx] : -a[idx]; copy = copy / 3; } if (sum == 0) { out.println(""YES""); return; } } out.println(""NO""); } } }",0.5269919686632274,7,1
2b9dfed3,"import static java.lang.Math.max; import static java.lang.Math.min; import static java.lang.Math.abs; import java.util.*; import java.io.*; import java.math.*; public class E { public static void process() throws IOException { int n = sc.nextInt(),k = sc.nextInt(); int index[] = sc.readArray(k); long t[] = sc.readArrayLong(k); PriorityQueue<Pair> q = new PriorityQueue<Pair>(); for(int i = 0; i<k; i++)q.add(new Pair(t[i]+index[i], index[i])); long ans[] = new long[n+1]; Arrays.fill(ans, INF); int i = 1; while(!q.isEmpty() && i<=n) { while(!q.isEmpty() && q.peek().y < i) { q.poll(); } if(q.isEmpty())break; Pair e = q.peek(); ans[i]=min(ans[i],e.x-i); i++; } q.clear(); for(i = 0; i<k; i++) { q.add(new Pair(t[i]+n-index[i], index[i])); } i = n; while(!q.isEmpty() && i>=1) { while(!q.isEmpty() && q.peek().y > i) { q.poll(); } if(q.isEmpty())break; Pair e = q.peek(); ans[i]=min(ans[i],e.x-(n-i)); i--; } for( i = 1; i<=n; i++)out.print(ans[i]+"" ""); out.println(); } private static long INF = 2000000000000000000L, M = 1000000007, MM = 998244353; private static int N = 0; static FastScanner sc; static FastWriter out; public static void main(String[] args) throws IOException { boolean oj = true; if (oj) { sc = new FastScanner(); out = new FastWriter(System.out); } else { sc = new FastScanner(""input.txt""); out = new FastWriter(""output.txt""); } long s = System.currentTimeMillis(); int t = 1; t = sc.nextInt(); int TTT = 1; while (t-- > 0) { process(); } out.flush(); } private static boolean oj = System.getProperty(""ONLINE_JUDGE"") != null; static class Pair implements Comparable<Pair> { long x; int y; Pair(long x, int y) { this.x = x; this.y = y; } } }",351c9206,"import static java.lang.Math.max; import static java.lang.Math.min; import static java.lang.Math.abs; import java.util.*; import java.io.*; import java.math.*; public class E { public static void process() throws IOException { int n = sc.nextInt(),k = sc.nextInt(); int index[] = sc.readArray(k); long t[] = sc.readArrayLong(k); PriorityQueue<Pair> q = new PriorityQueue<Pair>(); for(int i = 0; i<k; i++)q.add(new Pair(t[i]+index[i], index[i])); long ans[] = new long[n+1]; Arrays.fill(ans, INF); int i = 1; while(!q.isEmpty() && i<=n) { while(!q.isEmpty() && q.peek().y < i) { q.poll(); } if(q.isEmpty())break; Pair e = q.peek(); ans[i]=min(ans[i],e.x-i); i++; } q.clear(); for(i = 0; i<k; i++) { q.add(new Pair(t[i]+n-index[i], index[i])); } i = n; while(!q.isEmpty() && i>=1) { while(!q.isEmpty() && q.peek().y > i) { q.poll(); } if(q.isEmpty())break; Pair e = q.peek(); ans[i]=min(ans[i],e.x-(n-i)); i--; } for( i = 1; i<=n; i++)out.print(ans[i]+"" ""); out.println(); } private static long INF = 2000000000000000000L, M = 1000000007, MM = 998244353; private static int N = 0; static FastScanner sc; static FastWriter out; public static void main(String[] args) throws IOException { boolean oj = true; if (oj) { sc = new FastScanner(); out = new FastWriter(System.out); } else { sc = new FastScanner(""input.txt""); out = new FastWriter(""output.txt""); } long s = System.currentTimeMillis(); int t = 1; t = sc.nextInt(); int TTT = 1; while (t-- > 0) { process(); } out.flush(); } private static boolean oj = System.getProperty(""ONLINE_JUDGE"") != null; static class Pair implements Comparable<Pair> { long x; int y; Pair(long x, int y) { this.x = x; this.y = y; } } }",0.9999999999999996,8,1
2bbc6c80,"import java.io.*; import java.util.*; public class Main { static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static StringTokenizer st; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int readInt() throws IOException { return Integer.parseInt(next()); } static String readLine() throws IOException { return br.readLine(); } static List<Integer> adj[]; static int n, a[][]; static long dp[][]; static void DFS(int v, int p) { for (int u : adj[v]) { if (u != p) { DFS(u, v); for (int i = 0; i <= 1; ++i) { long add = 0; for (int j = 0; j <= 1; ++j) add = Math.max(add, dp[u][j] + Math.abs(a[v][i] - a[u][j])); dp[v][i] += add; } } } } public static void main(String[] args) throws IOException { for (int t = readInt(); t > 0; --t) { n = readInt(); adj = new List[n + 1]; for (int i = 1; i <= n; ++i) adj[i] = new ArrayList(); a = new int[n + 1][2]; for (int i = 1; i <= n; ++i) { a[i][0] = readInt(); a[i][1] = readInt(); } for (int i = 1; i < n; ++i) { int u = readInt(), v = readInt(); adj[u].add(v); adj[v].add(u); } dp = new long[n + 1][2]; DFS(1, 0); System.out.println(Math.max(dp[1][0], dp[1][1])); } } }",4e58558c,"import java.io.*; import java.util.*; public class Main { static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static StringTokenizer st; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int readInt() throws IOException { return Integer.parseInt(next()); } static String readLine() throws IOException { return br.readLine(); } static List<Integer> adj[]; static int n, a[][]; static long dp[][]; static void DFS(int v, int p) { for (int u : adj[v]) { if (u != p) { DFS(u, v); for (int i = 0; i <= 1; ++i) { long add = 0; for (int j = 0; j <= 1; ++j) add = Math.max(add, dp[u][j] + Math.abs(a[v][i] - a[u][j])); dp[v][i] += add; } } } } public static void main(String[] args) throws IOException { for (int t = readInt(); t > 0; --t) { n = readInt(); adj = new List[n + 1]; for (int i = 1; i <= n; ++i) adj[i] = new ArrayList(); a = new int[n + 1][2]; for (int i = 1; i <= n; ++i) { a[i][0] = readInt(); a[i][1] = readInt(); } for (int i = 1; i < n; ++i) { int u = readInt(), v = readInt(); adj[u].add(v); adj[v].add(u); } dp = new long[n + 1][2]; DFS(1, 0); System.out.println(Math.max(dp[1][0], dp[1][1])); } } }",0.9999999999999999,1,1
2bd5c798,"import static java.lang.Math.max; import static java.lang.Math.min; import static java.lang.Math.abs; import java.util.*; import java.io.*; import java.math.*; public class A { public static void process() throws IOException { int n = sc.nextInt(); String s = sc.next(),t = sc.next(); int zs = 0, zt = 0; for(int i = 0; i<n; i++) { if(s.charAt(i) == '0')zs++; if(t.charAt(i) == '0')zt++; } int ans = n+1; if(zs == zt) { int min = 0; for(int i = 0; i<n; i++)if(s.charAt(i) != t.charAt(i))min++; ans = min(ans, min); } if(n-zs-1 == zt) { int min = 0; for(int i = 0; i<n; i++)if(s.charAt(i) == t.charAt(i))min++; ans = min(ans, min); } if(ans == n+1)ans = -1; System.out.println(ans); } private static long INF = 2000000000000000000L, M = 1000000007, MM = 998244353; private static int N = 0; static FastScanner sc; static FastWriter out; public static void main(String[] args) throws IOException { boolean oj = true; if (oj) { sc = new FastScanner(); out = new FastWriter(System.out); } else { sc = new FastScanner(""input.txt""); out = new FastWriter(""output.txt""); } long s = System.currentTimeMillis(); int t = 1; t = sc.nextInt(); int TTT = 1; while (t-- > 0) { process(); } out.flush(); } private static boolean oj = System.getProperty(""ONLINE_JUDGE"") != null; }",317baeaf,"import java.util.*; import java.io.*; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(System.out); StringTokenizer st; int t = Integer.parseInt(br.readLine()); while (t --> 0) { int n = Integer.parseInt(br.readLine()); String a = br.readLine(); String b = br.readLine(); int alit = 0; int blit = 0; int ans = Integer.MAX_VALUE; for (int i = 0; i < n; i++) { if (a.charAt(i) == '1') alit++; if (b.charAt(i) == '1') blit++; } if (alit == blit) { int count = 0; for (int i = 0; i < n; i++) if (a.charAt(i) != b.charAt(i)) count++; ans = Math.min(count, ans); } if (alit == n - blit + 1) { int count = 0; for (int i = 0; i < n; i++) if (a.charAt(i) == b.charAt(i)) count++; ans = Math.min(ans, count); } if (ans == Integer.MAX_VALUE) { pw.println(""-1""); } else { pw.println(ans); } } pw.close(); } }",0.480417673804814,4,1
2c7a0000,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); String[] str = br.readLine().split("" ""); int[] a = new int[n]; int k = 0; ArrayList<Integer> pos = new ArrayList<>(); for(int i=0; i<n; i++) { a[i] = Integer.parseInt(str[i]); if(a[i] == 1) { k++; pos.add(i); } } int[][] dp = new int[n+1][k+1]; for(int i=0; i<=n; i++) { Arrays.fill(dp[i], Integer.MAX_VALUE); } dp[0][0] = 0; for(int i=0; i<n; i++) { for(int j=0; j<=k; j++) { if(dp[i][j] == Integer.MAX_VALUE) { continue; } dp[i+1][j] = Math.min(dp[i+1][j], dp[i][j]); if(j < k && a[i] == 0) { dp[i+1][j+1] = Math.min(dp[i+1][j+1], dp[i][j]+Math.abs(pos.get(j)-i)); } } } System.out.println(dp[n][k]); } }",4201fdf7,"import java.util.*; import java.io.*; public class CF_1525_D{ public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out)); StringBuilder sb = new StringBuilder(); StringTokenizer st; int n = Integer.parseInt(br.readLine()); int a[] = new int[n]; ArrayList<Integer> pos = new ArrayList<Integer>(); st = new StringTokenizer(br.readLine()); for(int i=0;i<n;i++){ a[i] = Integer.parseInt(st.nextToken()); if(a[i]==1) pos.add(i); } int z = pos.size(); int dp[][] = new int[n+1][z+1]; for(int i=0;i<=n;i++) Arrays.fill(dp[i], Integer.MAX_VALUE); dp[0][0] = 0; for(int i=0;i<n;i++){ for(int j=0;j<=z;j++){ if(dp[i][j] == Integer.MAX_VALUE) continue; dp[i+1][j] = Math.min(dp[i+1][j], dp[i][j]); if(j<z && a[i]==0) dp[i+1][j+1] = Math.min(dp[i+1][j+1], dp[i][j]+Math.abs(pos.get(j)-i)); } } pw.print(dp[n][z]); pw.flush(); pw.close(); } }",0.877643787020989,19,1
2c7a0000,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); String[] str = br.readLine().split("" ""); int[] a = new int[n]; int k = 0; ArrayList<Integer> pos = new ArrayList<>(); for(int i=0; i<n; i++) { a[i] = Integer.parseInt(str[i]); if(a[i] == 1) { k++; pos.add(i); } } int[][] dp = new int[n+1][k+1]; for(int i=0; i<=n; i++) { Arrays.fill(dp[i], Integer.MAX_VALUE); } dp[0][0] = 0; for(int i=0; i<n; i++) { for(int j=0; j<=k; j++) { if(dp[i][j] == Integer.MAX_VALUE) { continue; } dp[i+1][j] = Math.min(dp[i+1][j], dp[i][j]); if(j < k && a[i] == 0) { dp[i+1][j+1] = Math.min(dp[i+1][j+1], dp[i][j]+Math.abs(pos.get(j)-i)); } } } System.out.println(dp[n][k]); } }",bd50e3fe,"import java.util.ArrayList; import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n=sc.nextInt(); int[] a=new int[n]; for(int i=0;i<n;i++) a[i]=sc.nextInt(); ArrayList<Integer> pos=new ArrayList<>(n); for(int i=0;i<n;i++) if(a[i]==1) pos.add(i); int k=pos.size(); int[][] dp=new int[n+1][k+1]; for(int i=0;i<n+1;i++) Arrays.fill(dp[i], Integer.MAX_VALUE); dp[0][0]=0; for(int i=0;i<n;i++) for(int j=0;j<=k;j++) { if(dp[i][j]==Integer.MAX_VALUE) continue; dp[i+1][j]=Math.min(dp[i+1][j], dp[i][j]); if(j<k && a[i]==0) dp[i+1][j+1]=Math.min(dp[i+1][j+1], dp[i][j]+Math.abs(pos.get(j)-i)); } System.out.println(dp[n][k]); } }",0.8564335425933696,19,1
2c7a0000,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); String[] str = br.readLine().split("" ""); int[] a = new int[n]; int k = 0; ArrayList<Integer> pos = new ArrayList<>(); for(int i=0; i<n; i++) { a[i] = Integer.parseInt(str[i]); if(a[i] == 1) { k++; pos.add(i); } } int[][] dp = new int[n+1][k+1]; for(int i=0; i<=n; i++) { Arrays.fill(dp[i], Integer.MAX_VALUE); } dp[0][0] = 0; for(int i=0; i<n; i++) { for(int j=0; j<=k; j++) { if(dp[i][j] == Integer.MAX_VALUE) { continue; } dp[i+1][j] = Math.min(dp[i+1][j], dp[i][j]); if(j < k && a[i] == 0) { dp[i+1][j+1] = Math.min(dp[i+1][j+1], dp[i][j]+Math.abs(pos.get(j)-i)); } } } System.out.println(dp[n][k]); } }",f4f1b18f,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.StringTokenizer; import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastScanner in = new FastScanner(inputStream); PrintWriter out = new PrintWriter(outputStream); DArmchairs solver = new DArmchairs(); solver.solve(1, in, out); out.close(); } static class DArmchairs { public void solve(int testNumber, FastScanner in, PrintWriter out) { int n = in.nextInt(); int[] a = in.nextIntArray(n); int[] pos = new int[n]; int ptr = 0; for (int i = 0; i < n; ++i) { if (a[i] == 1) { pos[ptr++] = i; } } pos = Arrays.copyOf(pos, ptr); int[][] dp = new int[n + 1][ptr + 1]; ArrayUtils.fill(dp, Integer.MAX_VALUE); dp[0][0] = 0; for (int i = 0; i < n; ++i) { for (int j = 0; j <= ptr; ++j) { if (dp[i][j] == Integer.MAX_VALUE) continue; dp[i + 1][j] = Math.min(dp[i + 1][j], dp[i][j]); if (j < ptr && a[i] == 0) { dp[i + 1][j + 1] = Math.min(dp[i + 1][j + 1], dp[i][j] + Math.abs(pos[j] - i)); } } } out.println(dp[n][ptr]); } } static class ArrayUtils { public static void fill(int[][] array, int value) { for (int[] row : array) { Arrays.fill(row, value); } } } }",0.6568081879587129,19,1
2d1553b5,"import java.util.*; import java.io.*; public class Interactive{ static long MOD=(long)1e9+7; static Scanner sc = new Scanner(System.in); static long query(int l, int r) { System.out.println(""? "" + l + "" "" + r); return sc.nextLong(); } static int query(int i) { System.out.println(""? "" + i); return sc.nextInt(); } public static void main (String[] args) throws java.lang.Exception { int test=1; test=sc.nextInt(); while(test-->0) { int n = sc.nextInt(); int ans[] = new int[n]; for(int i = 1; i <= n; i++) { if(ans[i - 1] != 0) continue; HashSet<Integer> set = new HashSet<>(); ArrayList<Integer> arr = new ArrayList<>(); while(true) { int x = query(i); if(set.contains(x)) break; set.add(x); arr.add(x - 1); } for(int j = 0; j < arr.size(); j++) { ans[arr.get(j)] = arr.get((j + 1) % arr.size()) + 1; } } System.out.print(""! ""); for(int x: ans) System.out.print(x+"" ""); System.out.println(); } } }",656d0f78,"import java.awt.Container; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.File; import java.io.FileNotFoundException; import java.io.FileWriter; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.math.BigInteger; import java.util.*; public class Main { public static void main(String[] args) { FastScanner input = new FastScanner(); int tc = input.nextInt(); work: while (tc-- > 0) { int n = input.nextInt(); int ans[] = new int[n]; for (int i = 1; i <=n; i++) { if(ans[i-1]!=0) { continue ; } HashSet<Integer> set = new HashSet<>(); ArrayList<Integer> a = new ArrayList<>(); while(true) { System.out.println(""? ""+i); int value = input.nextInt(); if(set.contains(value)) { break; } a.add(value-1); set.add(value); } for (int j = 0; j <a.size(); j++) { ans[a.get(j)] = a.get((j+1)%a.size())+1; } } System.out.print(""! ""); for (int an : ans) { System.out.print(an+"" ""); } System.out.println(""""); } } }",0.5248967689614107,5,1
2da4b3fe,"import java.util.*; import java.lang.*; import java.io.*; public class Codeforces { public static void main (String[] args) throws java.lang.Exception { FastReader sc=new FastReader(); int n=sc.nextInt(); int a[]=new int[n]; ArrayList<Integer> arr0=new ArrayList<>(); ArrayList<Integer> arr1=new ArrayList<>(); for(int i=0;i<n;i++) { a[i]=sc.nextInt(); if(a[i]==0) arr0.add(i); else arr1.add(i); } n=arr0.size(); int m=arr1.size(); int dp[][]=new int[m+1][n+1]; for(int i=0;i<=n;i++) { dp[0][i]=0; } for(int i=1;i<=m;i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(arr0.get(i-1)-arr1.get(i-1)); for(int j=i+1;j<=n;j++) { dp[i][j]=Math.min(dp[i-1][j-1]+Math.abs(arr0.get(j-1)-arr1.get(i-1)),dp[i][j-1]); } } System.out.println(dp[m][n]); } }",3d06b643,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",0.5781115807709073,19,1
2e1109d7,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; import java.io.IOException; import java.util.ArrayList; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DArmchairs solver = new DArmchairs(); solver.solve(1, in, out); out.close(); } static class DArmchairs { ArrayList<Integer>[] arr; long[][] dp; public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(); int[] a = in.readArray(n); int mx = 5001; dp = new long[mx][mx]; for (int i = 0; i < mx; ++i) { Arrays.fill(dp[i], -1); } arr = new ArrayList[2]; for (int i = 0; i < 2; ++i) { arr[i] = new ArrayList<>(); } for (int i = 0; i < n; ++i) { arr[a[i]].add(i); } out.println(go(0, 0)); } long go(int i, int j) { if (i == arr[1].size()) return 0; if (j == arr[0].size()) return (long) 1e9; if (dp[i][j] != -1) return dp[i][j]; long pick = Math.abs(arr[0].get(j) - arr[1].get(i)) + go(i + 1, j + 1); long leave = go(i, j + 1); dp[i][j] = Math.min(leave, pick); return dp[i][j]; } } }",e7000ac2,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; import java.io.IOException; import java.util.ArrayList; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DArmchairs solver = new DArmchairs(); solver.solve(1, in, out); out.close(); } static class DArmchairs { ArrayList<Integer>[] arr; long[][] dp; public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(); int[] a = in.readArray(n); int mx = 5001; dp = new long[mx][mx]; for (int i = 0; i < mx; ++i) { Arrays.fill(dp[i], -1); } arr = new ArrayList[2]; for (int i = 0; i < 2; ++i) { arr[i] = new ArrayList<>(); } for (int i = 0; i < n; ++i) { arr[a[i]].add(i); } out.println(go(0, 0)); } long go(int i, int j) { if (i == arr[1].size()) return 0; if (j == arr[0].size()) return (long) 1e9; if (dp[i][j] != -1) return dp[i][j]; long pick = Math.abs(arr[0].get(j) - arr[1].get(i)) + go(i + 1, j + 1); long leave = go(i, j + 1); dp[i][j] = Math.min(leave, pick); return dp[i][j]; } } }",1.0,19,1
2f8c3bf3,"import java.util.*; public class Main { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0){ int n=sc.nextInt(); int k=sc.nextInt(); int idx[]=new int[k]; for(int i=0;i<k;i++){ idx[i]=sc.nextInt(); } long arr[]=new long[n]; Arrays.fill(arr,Integer.MAX_VALUE); for(int i=0;i<k;i++){ long temp=sc.nextLong(); arr[idx[i]-1]=temp; } long left[]=new long[n]; long right[]=new long[n]; Arrays.fill(left,Integer.MAX_VALUE); Arrays.fill(right,Integer.MAX_VALUE); left[0]=arr[0]; for(int i=1;i<n;i++){ left[i]=Math.min(left[i-1]+1,arr[i]); } right[arr.length-1]=arr[arr.length-1]; for(int i=n-2;i>=0;i--){ right[i]=Math.min(right[i+1]+1,arr[i]); } for(int i=0;i<n;i++){ System.out.print(Math.min(left[i],right[i])+"" ""); } System.out.println(); } } }",a3abac01,"import java.math.*; import java.util.*; import java.lang.*; import java.io.*; public final class Main { FastReader s; public static void main (String[] args) throws java.lang.Exception { new Main().run(); } void run() { s = new FastReader(); solve(); } StringBuffer sb; void solve() { sb = new StringBuffer(); for(int T = s.nextInt();T > 0;T--) start(); } void start() { int n = s.nextInt(); int m = s.nextInt(); long arr[] = longArr(m); long arr2[] = longArr(m); long ans [] = new long[n]; Arrays.fill(ans,Integer.MAX_VALUE); for(int i = 0; i<m; i++) { ans[(int)arr[i]-1] = arr2[i]; } long left [] = new long[n]; long right [] = new long[n]; left[0] = ans[0]; for(int i = 1; i<n; i++) { left[i] = Math.min(ans[i], left[i-1]+1); } right[n-1] = ans[n-1]; for(int i = n-2; i>=0; i--) { right[i] = Math.min(right[i+1]+1, ans[i]); } StringBuffer x = new StringBuffer(); for(int i =0; i<n; i++) { long p = Math.min(left[i],right[i]); x.append(p+"" ""); } System.out.println(x); } public long [] longArr(int len) { long [] arr = new long[len]; String [] strs = s.nextLine().trim().split(""\\s+""); for(int i =0; i<len; i++) { arr[i] = Long.parseLong(strs[i]); } return arr; } }",0.6558967880746939,8,1
3088ca9c,"import java.util.*; import java.io.*; public class MyClass { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t>0) { int n = sc.nextInt(); sc.nextLine(); String [] str = new String[n]; int res = 0; for(int i=0;i<n;i++) { str[i]=sc.nextLine(); } int [][] freq = new int [n][5]; for(int i=0;i<n;i++) { for(int j=0;j<str[i].length();j++) { int k = str[i].charAt(j)-'a'; freq[i][k]++; } } for(int i=0;i<5;i++) { int [] arr = new int[n]; for(int j=0;j<n;j++) { int pos = freq[j][i]; int sum=0; for(int k = 0;k<5;k++) { sum+=freq[j][k]; } sum-=pos; arr[j]=(pos-sum); } Arrays.sort(arr); int count=0; int sum=0; for(int p=n-1;p>=0;p--) { sum+=arr[p]; if(sum>0) { count++; } else { break; } } res=Math.max(count , res); } System.out.println(res); t--; } } }",6f393cfe,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",0.6488092893011496,15,1
3088ca9c,"import java.util.*; import java.io.*; public class MyClass { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t>0) { int n = sc.nextInt(); sc.nextLine(); String [] str = new String[n]; int res = 0; for(int i=0;i<n;i++) { str[i]=sc.nextLine(); } int [][] freq = new int [n][5]; for(int i=0;i<n;i++) { for(int j=0;j<str[i].length();j++) { int k = str[i].charAt(j)-'a'; freq[i][k]++; } } for(int i=0;i<5;i++) { int [] arr = new int[n]; for(int j=0;j<n;j++) { int pos = freq[j][i]; int sum=0; for(int k = 0;k<5;k++) { sum+=freq[j][k]; } sum-=pos; arr[j]=(pos-sum); } Arrays.sort(arr); int count=0; int sum=0; for(int p=n-1;p>=0;p--) { sum+=arr[p]; if(sum>0) { count++; } else { break; } } res=Math.max(count , res); } System.out.println(res); t--; } } }",7a9c69d8,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",0.6488092893011496,15,1
317a209c,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",3e6def38,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",1.0,14,1
317a209c,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",0.9853370419484938,14,1
317a209c,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",6b97058e,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",0.9853370419484938,14,1
317a209c,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",921b6e4a,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",0.9853370419484938,14,1
317a209c,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",9ab3c0e1,"import java.util.*; public class d { public static Scanner sc = new Scanner(System.in); public static final int MOD = 998244353; int []f; int [] lf; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } public static int ksm(int a, int n) { int ans = 1; while(n > 0) { if((n & 1) == 1) ans = mul(a, ans); a = mul(a, a); n >>= 1; } return ans; } public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(lf[n - k], lf[k])); } public static int inv(int a) { return ksm(a, MOD - 2); } public void solve() { int n = sc.nextInt(); int k = sc.nextInt(); f = new int[n + 42]; lf = new int[n + 42]; f[0] = lf[0] = 1; for(int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); lf[i] = mul(lf[i - 1], inv(i)); } int[] events = new int[2 * n]; for(int i = 0; i < n; i++) { int le = sc.nextInt(); int ri = sc.nextInt(); events[i] = le * 2; events[i + n] = ri * 2 + 1; } Arrays.sort(events); int ans = 0, balance = 0; for(int r = 0; r < 2 * n;) { int l = r; while(r < 2 * n && events[l] == events[r]) ++r; int added = r - l; if(events[l] % 2 == 0) { ans += C(balance + added, k); if(ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if(ans >= MOD) ans -= MOD; balance += added; } else balance -= added; } sc.close(); System.out.println(ans); } public static void main(String[] args) { (new d()).solve(); } }",0.830007410430473,14,1
3368f340,"import java.io.*; import java.util.*; public class Menorah { public static void main(String[] args) throws IOException { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); StringBuilder sb = new StringBuilder(); while (t-->0){ int n = sc.nextInt(); char[] a = sc.next().toCharArray(); char[] b = sc.next().toCharArray(); int a1=0, b1=0; for(int i=0;i<n;i++){ if(a[i]=='1') a1++; if(b[i]=='1') b1++; } int min = 100000000; if(a1==b1){ int c = 0; for(int i=0;i<n;i++){ if(a[i]!=b[i]) c++; } min = Math.min(min, c); } if(b1==(n-a1+1)){ int ind = -1; for(int i=0;i<n;i++){ if(a[i]==b[i] && a[i]=='1'){ ind = i; break; } } int c = 0; for(int i=0;i<n;i++){ if(i==ind) continue; if(a[i]==b[i]) c++; } min = Math.min(min, c + 1); } if(min == 100000000) sb.append(""-1\n""); else sb.append(min).append(""\n""); } System.out.println(sb); sc.close(); } }",a8f7c8b7,"import java.util.Scanner; public class Menorah { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); char initial[] = sc.next().toCharArray(); char desired[] = sc.next().toCharArray(); int lit1 = 0, lit2 = 0; int ans = Integer.MAX_VALUE; for (int i = 0; i < n; i++) { if (initial[i] == '1') { ++lit1; } if (desired[i] == '1') { ++lit2; } } if (lit1 == lit2) { int count = 0; for (int i = 0; i < n; i++) { if (initial[i] != desired[i]) { ++count; } } ans = Math.min(count, ans); } if (lit2 == (n - lit1 + 1)) { int count = 0; for (int i = 0; i < n; i++) { if (initial[i] == desired[i]) { ++count; } } ans = Math.min(ans, count); } if (ans == Integer.MAX_VALUE) { System.out.println(-1); } else { System.out.println(ans); } } } }",0.5109304523087704,4,1
3380fa52,"import java.util.*; import java.io.*; import java.math.*; public class Coder { static int n, k; static long a[]; static int pos[]; static int temp[]; static StringBuilder str = new StringBuilder(""""); static int cnt[][] = new int[(int)1e5+5][2]; static void solve() { long []l = new long[n]; long []r = new long[n]; long p = Integer.MAX_VALUE; for(int i=0;i<n;i++){ p = Math.min(p+1, a[i]); l[i] = p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ p = Math.min(p+1, a[i]); r[i] = p; } for(int i=0;i<n;i++){ str.append(Math.min(l[i],r[i])).append("" ""); } str.append(""\n""); } public static void main(String[] args) throws java.lang.Exception { BufferedReader bf = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(bf.readLine().trim()); while (t-- > 0) { bf.readLine(); String s[] = bf.readLine().trim().split(""\\s+""); n = Integer.parseInt(s[0]); k = Integer.parseInt(s[1]); s = bf.readLine().trim().split(""\\s+""); pos = new int[k]; temp = new int[k]; a = new long[n]; for(int i=0;i<k;i++) pos[i]=Integer.parseInt(s[i]); s = bf.readLine().trim().split(""\\s+""); for(int i=0;i<k;i++) temp[i]=Integer.parseInt(s[i]); Arrays.fill(a, Integer.MAX_VALUE); for(int i=0;i<k;i++) a[pos[i]-1] = temp[i]; solve(); } System.out.print(str); } }",48993e07,"import java.io.*; import java.util.*; public class Codeforce { static int mod = (int) (1e9 + 7); public static void main(String arg[]) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); StringBuilder sb = new StringBuilder(); while (t-- > 0) { br.readLine(); String s[]=br.readLine().split("" ""); int n=Integer.parseInt(s[0]); int k=Integer.parseInt(s[1]); long a[]=new long[n]; long b[]=new long[n]; long c[]=new long[n]; Arrays.fill(c,Integer.MAX_VALUE); String s1[]=br.readLine().split("" ""); s=br.readLine().split("" ""); for(int i=0;i<k;i++) c[Integer.parseInt(s1[i])-1]=Integer.parseInt(s[i]); long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1,c[i]); a[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ p=Math.min(p+1,c[i]); b[i]=p; } for(int i=0;i<n;i++) sb.append((Math.min(a[i],b[i]))+"" ""); sb.append(""\n""); } System.out.println(sb); } }",0.7190289885855085,8,1
3380fa52,"import java.util.*; import java.io.*; import java.math.*; public class Coder { static int n, k; static long a[]; static int pos[]; static int temp[]; static StringBuilder str = new StringBuilder(""""); static int cnt[][] = new int[(int)1e5+5][2]; static void solve() { long []l = new long[n]; long []r = new long[n]; long p = Integer.MAX_VALUE; for(int i=0;i<n;i++){ p = Math.min(p+1, a[i]); l[i] = p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ p = Math.min(p+1, a[i]); r[i] = p; } for(int i=0;i<n;i++){ str.append(Math.min(l[i],r[i])).append("" ""); } str.append(""\n""); } public static void main(String[] args) throws java.lang.Exception { BufferedReader bf = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(bf.readLine().trim()); while (t-- > 0) { bf.readLine(); String s[] = bf.readLine().trim().split(""\\s+""); n = Integer.parseInt(s[0]); k = Integer.parseInt(s[1]); s = bf.readLine().trim().split(""\\s+""); pos = new int[k]; temp = new int[k]; a = new long[n]; for(int i=0;i<k;i++) pos[i]=Integer.parseInt(s[i]); s = bf.readLine().trim().split(""\\s+""); for(int i=0;i<k;i++) temp[i]=Integer.parseInt(s[i]); Arrays.fill(a, Integer.MAX_VALUE); for(int i=0;i<k;i++) a[pos[i]-1] = temp[i]; solve(); } System.out.print(str); } }",f28b8cb4,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.lang.reflect.Array; import java.util.Arrays; import java.util.StringTokenizer; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader( new InputStreamReader(System.in)); int q = Integer.parseInt(br.readLine()); for (int i = 0; i < q; i++) { br.readLine(); StringTokenizer st = new StringTokenizer(br.readLine()); int n = Integer.parseInt(st.nextToken()); int k = Integer.parseInt(st.nextToken()); st = new StringTokenizer(br.readLine()); int[] a = new int[k]; for (int j = 0; j < k; j++) { a[j] = Integer.parseInt(st.nextToken()); } st = new StringTokenizer(br.readLine()); int[] t = new int[k]; for (int j = 0; j < k; j++) { t[j] = Integer.parseInt(st.nextToken()); } int[] c = new int[n]; Arrays.fill(c, Integer.MAX_VALUE); for (int j = 0; j < k; j++) { c[a[j] - 1] = t[j]; } long[] left = new long[n]; Arrays.fill(left, Integer.MAX_VALUE); long p = Integer.MAX_VALUE; for (int j = 0; j < n; j++) { p = Math.min(p + 1, c[j]); left[j] = p; } long[] right = new long[n]; Arrays.fill(right, Integer.MAX_VALUE); p = Integer.MAX_VALUE; for (int j = n - 1; j >= 0; j--) { p = Math.min(p + 1, c[j]); right[j] = p; } for (int j = 0; j < n; j++) { System.out.print(Math.min(left[j], right[j]) + "" ""); } System.out.println(); } } }",0.6625361794351649,8,1
3412b353,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int t=Integer.parseInt(bu.readLine()); while(t-->0) { int n=Integer.parseInt(bu.readLine()); int k[]=new int[n+1],h[]=new int[n+1],i; String s[]=bu.readLine().split("" ""); for(i=1;i<=n;i++) k[i]=Integer.parseInt(s[i-1]); s=bu.readLine().split("" ""); for(i=1;i<=n;i++) h[i]=Integer.parseInt(s[i-1]); long max[]=new long[n+1]; for(i=1;i<=n;i++) { int j; long here=h[i]; for(j=i-1;j>=0;j--) { long diff=here-(k[i]-k[j]); if(diff<=0) {max[i]=max[j]+here*(here+1)/2; break;} if(diff<h[j]) here+=h[j]-diff; } } sb.append(max[n]+""\n""); } System.out.print(sb); } }",528a6162,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int t=Integer.parseInt(bu.readLine()); while(t-->0) { int n=Integer.parseInt(bu.readLine()); int k[]=new int[n+1],h[]=new int[n+1],i; String s[]=bu.readLine().split("" ""); for(i=1;i<=n;i++) k[i]=Integer.parseInt(s[i-1]); s=bu.readLine().split("" ""); for(i=1;i<=n;i++) h[i]=Integer.parseInt(s[i-1]); long max[]=new long[n+1]; for(i=1;i<=n;i++) { int j; long here=h[i]; for(j=i-1;j>=0;j--) { long diff=here-(k[i]-k[j]); if(diff<=0) {max[i]=max[j]+here*(here+1)/2; break;} if(diff<h[j]) here+=h[j]-diff; } } sb.append(max[n]+""\n""); } System.out.print(sb); } }",1.0,21,1
34b9ed7f,"import java.io.*; import java.util.*; public class q3 { public static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); public static void solve() throws Exception { String[] parts = br.readLine().split("" ""); int n = Integer.parseInt(parts[0]); int[] arr = new int[n + 1]; boolean[] vis = new boolean[n + 1]; for(int i = 1;i <= n;i++){ if(vis[i]) continue; ArrayList<Integer> list = new ArrayList<>(); while(true){ System.out.println(""? "" + i); int val = Integer.parseInt(br.readLine()); vis[val] = true; list.add(val); if(list.size() > 1 && val == list.get(0)) break; } for(int j = 0;j < list.size() - 1;j++) arr[list.get(j)] = list.get(j + 1); } System.out.print(""! ""); StringBuilder ans = new StringBuilder(); for(int i = 1;i <= n;i++) ans.append(arr[i]).append("" ""); System.out.println(ans); } public static void main(String[] args) throws Exception { int tests = Integer.parseInt(br.readLine()); for (int test = 1; test <= tests; test++) { solve(); } } }",8311f375,"import java.io.*; import java.util.*; public class q3 { public static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); public static void solve() throws Exception { String[] parts = br.readLine().split("" ""); int n = Integer.parseInt(parts[0]); int[] arr = new int[n + 1]; boolean[] vis = new boolean[n + 1]; for(int i = 1;i <= n;i++){ if(vis[i]) continue; ArrayList<Integer> list = new ArrayList<>(); while(true){ System.out.println(""? "" + i); int val = Integer.parseInt(br.readLine()); vis[val] = true; list.add(val); if(list.size() > 1 && val == list.get(0)) break; } for(int j = 0;j < list.size() - 1;j++) arr[list.get(j)] = list.get(j + 1); } System.out.print(""! ""); StringBuilder ans = new StringBuilder(); for(int i = 1;i <= n;i++) ans.append(arr[i]).append("" ""); System.out.println(ans); } public static void main(String[] args) throws Exception { int tests = Integer.parseInt(br.readLine()); for (int test = 1; test <= tests; test++) { solve(); } } }",1.0,5,1
36f1b52a,"import java.util.*; import java.lang.*; import java.io.*; public class Solution { public static void main(String[] args) throws java.lang.Exception { out = new PrintWriter(new BufferedOutputStream(System.out)); sc = new FastReader(); int test = sc.nextInt(); for (int t = 0; t < test; t++) { solve(); } out.close(); } private static void solve() { int n = sc.nextInt(); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = sc.nextInt(); } int[] res = new int[n]; if (n % 2 == 0) { for (int i = 1; i < n; i += 2) { res[i] = arr[i - 1]; res[i - 1] = -arr[i]; } }else { for (int i = 4; i < n; i += 2) { res[i] = arr[i - 1]; res[i - 1] = -arr[i]; } if (arr[0] + arr[1] != 0) { res[0] = -arr[2]; res[1] = -arr[2]; res[2] = arr[0] + arr[1]; }else if (arr[0] + arr[2] != 0) { res[0] = -arr[1]; res[2] = -arr[1]; res[1] = arr[0] + arr[2]; }else { res[1] = -arr[0]; res[2] = -arr[0]; res[0] = arr[1] + arr[2]; } } for (int i = 0; i < n; i++) { out.print(res[i] + "" ""); } out.println(); } public static FastReader sc; public static PrintWriter out; }",558df7d4,"import java.io.*; import java.util.*; public class Pupsen { public static void main(String[] args) throws Exception { FastIO in = new FastIO(); int t = in.nextInt(); for (int tc=0; tc<t; tc++) { int n = in.nextInt(); int[] a = new int[n]; for (int i=0; i<n; i++) { a[i] = in.nextInt(); } int[] b = new int[n]; if (n%2==0) { for (int i=0; i<n-1; i+=2) { b[i] = -a[i+1]; b[i+1] = a[i]; } for (int i=0; i<n; i++) System.out.print(b[i]+"" ""); } else { if (a[0]+a[1]!=0) { b[0] = -a[2]; b[1] = -a[2]; b[2] = a[0]+a[1]; } else if (a[0]+a[2]!=0) { b[0] = -a[1]; b[2] = -a[1]; b[1] = a[0]+a[2]; } else { b[1] = -a[0]; b[2] = -a[0]; b[0] = a[1]+a[2]; } for (int i=3; i<n-1; i+=2) { b[i] = -a[i+1]; b[i+1] = a[i]; } for (int i=0; i<n; i++) System.out.print(b[i]+"" ""); } System.out.println(); } } }",0.3473908654419234,17,1
38129877,"import java.util.Scanner; public class C { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int t = scanner.nextInt(); while (t-- > 0) { int n = scanner.nextInt(); int[] h = new int[n]; for (int i = 0; i < n; i++) { h[i] = scanner.nextInt(); } System.out.println(binSearchSolution(h)); } } private static int binSearchSolution(int[] a) { int l = 0; int r = (int)1e9 + 1; while (l < r - 1) { int m = l + (r - l) / 2; if (canAchieve(a, m)) { l = m; } else { r = m; } } return l; } private static boolean canAchieve(int[] a, int min) { int back1 = a[a.length - 2]; int current = a[a.length - 1]; int nextIndex = a.length - 3; while (nextIndex >= 0) { int back2 = a[nextIndex]; if (current < min) { return false; } int canMove = Math.min(current - min, a[nextIndex + 2]); int d = canMove / 3; current = back1 + d; back1 = back2 + 2 * d; nextIndex--; } if (current < min || back1 < min) { return false; } return true; } }",7493a104,"import java.util.Scanner; public class C { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int t = scanner.nextInt(); while (t-- > 0) { int n = scanner.nextInt(); int[] h = new int[n]; for (int i = 0; i < n; i++) { h[i] = scanner.nextInt(); } System.out.println(binSearchSolution(h)); } } private static int binSearchSolution(int[] a) { int l = 0; int r = (int)1e9 + 1; while (l < r - 1) { int m = l + (r - l) / 2; if (canAchieve(a, m)) { l = m; } else { r = m; } } return l; } private static boolean canAchieve(int[] a, int min) { int back1 = a[a.length - 2]; int current = a[a.length - 1]; int nextIndex = a.length - 3; while (nextIndex >= 0) { int back2 = a[nextIndex]; if (current < min) { return false; } int canMove = Math.min(current - min, a[nextIndex + 2]); int d = canMove / 3; current = back1 + d; back1 = back2 + 2 * d; nextIndex--; } if (current < min || back1 < min) { return false; } return true; } }",1.0000000000000002,16,1
39210347,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastReader input=new FastReader(); PrintWriter out=new PrintWriter(System.out); int T=input.nextInt(); while(T-->0) { int n=input.nextInt(); int a[]=new int[n]; for(int i=0;i<n;i++) { a[i]=input.nextInt(); } int b[]=new int[n]; if(n%2==0) { for(int i=0;i<n;i+=2) { int v1=Math.abs(a[i]),v2=Math.abs(a[i+1]); int l=lcm(v1,v2); int x=l/v1,y=l/v2; if((a[i]>=0 && a[i+1]<0) || (a[i]<0 && a[i+1]>=0)) { b[i]=x; b[i+1]=y; } else { b[i]=x; b[i+1]=-y; } } for(int i=0;i<n;i++) { out.print(b[i]+"" ""); } out.println(); } else { for(int i=0;i<n-3;i+=2) { int v1=Math.abs(a[i]),v2=Math.abs(a[i+1]); int l=lcm(v1,v2); int x=l/v1,y=l/v2; if((a[i]>=0 && a[i+1]<0) || (a[i]<0 && a[i+1]>=0)) { b[i]=x; b[i+1]=y; } else { b[i]=x; b[i+1]=-y; } } int l1=lcm(Math.abs(a[n-3]),Math.abs(a[n-2])); int x=l1/Math.abs(a[n-3]),y=l1/Math.abs(a[n-2]); int l2=lcm(Math.abs(a[n-3]),Math.abs(a[n-1])); int z=l2/Math.abs(a[n-3]); if((a[n-3]>=0 && a[n-2]<0) || (a[n-3]<0 && a[n-2]>=0)) { } else { y=-y; } x+=z; int sum=a[n-3]*x+a[n-2]*y; sum=-sum; z=sum/a[n-1]; b[n-3]=x; b[n-2]=y; b[n-1]=z; for(int i=0;i<n;i++) { out.print(b[i]+"" ""); } out.println(); } } out.close(); } public static int gcd(int a, int b) { if(a==0) { return b; } else { return gcd(b%a,a); } } public static int lcm(int a, int b) { return (a/gcd(a,b))*b; } }",68dff461,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastReader input=new FastReader(); PrintWriter out=new PrintWriter(System.out); int T=input.nextInt(); while(T-->0) { int n=input.nextInt(); int a[]=new int[n]; for(int i=0;i<n;i++) { a[i]=input.nextInt(); } int b[]=new int[n]; if(n%2==0) { for(int i=0;i<n;i+=2) { int v1=Math.abs(a[i]),v2=Math.abs(a[i+1]); int l=lcm(v1,v2); int x=l/v1,y=l/v2; if((a[i]>=0 && a[i+1]<0) || (a[i]<0 && a[i+1]>=0)) { b[i]=x; b[i+1]=y; } else { b[i]=x; b[i+1]=-y; } } for(int i=0;i<n;i++) { out.print(b[i]+"" ""); } out.println(); } else { for(int i=0;i<n-3;i+=2) { int v1=Math.abs(a[i]),v2=Math.abs(a[i+1]); int l=lcm(v1,v2); int x=l/v1,y=l/v2; if((a[i]>=0 && a[i+1]<0) || (a[i]<0 && a[i+1]>=0)) { b[i]=x; b[i+1]=y; } else { b[i]=x; b[i+1]=-y; } } int l1=lcm(Math.abs(a[n-3]),Math.abs(a[n-2])); int x=l1/Math.abs(a[n-3]),y=l1/Math.abs(a[n-2]); int l2=lcm(Math.abs(a[n-3]),Math.abs(a[n-1])); int z=l2/Math.abs(a[n-3]); if((a[n-3]>=0 && a[n-2]<0) || (a[n-3]<0 && a[n-2]>=0)) { } else { y=-y; } x+=z; int sum=a[n-3]*x+a[n-2]*y; sum=-sum; z=sum/a[n-1]; b[n-3]=x; b[n-2]=y; b[n-1]=z; for(int i=0;i<n;i++) { out.print(b[i]+"" ""); } out.println(); } } out.close(); } public static int gcd(int a, int b) { if(a==0) { return b; } else { return gcd(b%a,a); } } public static int lcm(int a, int b) { return (a/gcd(a,b))*b; } }",1.0000000000000002,17,1
3b5cec19,"import java.util.*; import java.io.*; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; public class Test{ static class Pair implements Comparable<Pair>{ int wt; int idx; Pair(int x,int y){ this.wt=x; this.idx=y; } } public static void main (String[] args) throws java.lang.Exception{ FastReader scan=new FastReader(); int t=scan.nextInt(); while(t-->0){ int n=scan.nextInt(); int m=scan.nextInt(); int x=scan.nextInt(); int[]arr=new int[n]; for(int i=0;i<n;i++){ arr[i]=scan.nextInt(); } Queue<Pair>q=new PriorityQueue<>(); for(int i=1;i<=m;i++){ q.add(new Pair(0,i)); } System.out.println(""YES""); for(int i=0;i<n;i++){ Pair temp=q.poll(); int wt=temp.wt; int idx=temp.idx; System.out.print(idx+"" ""); q.add(new Pair(wt+arr[i],idx)); } System.out.println(); } } }",8f31b279,"import java.util.*; import java.io.*; public class JavaTract { static class Pair implements Comparable<Pair>{ int first; int second; Pair(int x,int y){ this.first=x; this.second=y; } } public static void main (String[] args) { Scanner scan=new Scanner(System.in); int t=scan.nextInt(); while(t-->0){ int n=scan.nextInt(); int m=scan.nextInt(); int x=scan.nextInt(); int[]arr=new int[n]; for(int i=0;i<n;i++){ arr[i]=scan.nextInt(); } Queue<Pair> set = new PriorityQueue<>(); for(int i=1;i<=m;i++){ set.add(new Pair(0,i)); } System.out.println(""YES""); for(int i=0;i<n;i++){ Pair temp=set.poll(); int first = temp.first; int second = temp.second; System.out.print(second+"" ""); set.add(new Pair(first+arr[i],second)); } System.out.println(); } } }",0.7219478947767484,9,1
3c667d4f,"import java.util.*; public class j { public static void main(String args[]) { Scanner in=new Scanner(System.in); int n=in.nextInt(); while(n-->0) { int len=in.nextInt(); int t=in.nextInt(); int pos[]=new int[t]; int temp[]=new int[t]; for(int i=0;i<t;i++) pos[i]=in.nextInt(); for(int i=0;i<t;i++) temp[i]=in.nextInt(); long range[]=new long[len]; Arrays.fill(range,Long.MAX_VALUE-10000); for(int i=0;i<t;i++) range[pos[i]-1]=temp[i]; for(int i=1;i<len;i++) { range[i]=Math.min(range[i],1+range[i-1]); } for(int i=len-2;i>=0;i--) { range[i]=Math.min(range[i+1]+1,range[i]); } for(int i=0;i<len;i++) { System.out.print(range[i]+"" ""); }System.out.println(); } } }",a7894e0b,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuilder res = new StringBuilder(); int tc = sc.nextInt(); while(tc-->0) { int n=sc.nextInt(); int k=sc.nextInt(); int[] ac=new int[k]; long[] ans=new long[n]; Arrays.fill(ans, Integer.MAX_VALUE/2); for(int i=0;i<k;i++) { ac[i]=sc.nextInt()-1; } for(int i=0;i<k;i++) { long x = sc.nextLong(); ans[ac[i]] = x; } for(int i=1;i<n;i++) { ans[i]=Math.min(ans[i], ans[i-1]+1); } for(int i=n-2;i>=0;i--) { ans[i]=Math.min(ans[i], ans[i+1]+1); } for(int i=0;i<n;i++) { res.append(ans[i]+"" ""); } res.append(""\n""); } System.out.println(res); } }",0.39388859513169505,8,1
3c667d4f,"import java.util.*; public class j { public static void main(String args[]) { Scanner in=new Scanner(System.in); int n=in.nextInt(); while(n-->0) { int len=in.nextInt(); int t=in.nextInt(); int pos[]=new int[t]; int temp[]=new int[t]; for(int i=0;i<t;i++) pos[i]=in.nextInt(); for(int i=0;i<t;i++) temp[i]=in.nextInt(); long range[]=new long[len]; Arrays.fill(range,Long.MAX_VALUE-10000); for(int i=0;i<t;i++) range[pos[i]-1]=temp[i]; for(int i=1;i<len;i++) { range[i]=Math.min(range[i],1+range[i-1]); } for(int i=len-2;i>=0;i--) { range[i]=Math.min(range[i+1]+1,range[i]); } for(int i=0;i<len;i++) { System.out.print(range[i]+"" ""); }System.out.println(); } } }",be3b1289,"import java.util.*; import java.lang.*; import java.io.*; public class cf { static PrintWriter out; static FastReader scan; public static int ni() { return scan.nextInt(); } static void lPA(long arr[]) { StringBuilder output = new StringBuilder(); for (int i = 0; i < arr.length; i++) output.append(arr[i] + "" ""); out.println(output); } static void iIA(int arr[]) { for (int i = 0; i < arr.length; i++) arr[i] = ni(); } static final Random random = new Random(); public static void main(String[] args) throws java.lang.Exception { OutputStream outputStream = System.out; out = new PrintWriter(outputStream); scan = new FastReader(); StringBuilder sb = new StringBuilder(); int t = ni(); while (t-- != 0) { int n=ni(); int k=ni(); int[] a=new int[k]; int[] temp=new int[k]; iIA(a); iIA(temp); long dp[]=new long[n]; Arrays.fill(dp,Integer.MAX_VALUE); for(int i=0;i<k;i++){ dp[a[i]-1]=temp[i]; } for(int i=1;i<n;i++){ dp[i]=Math.min(dp[i-1]+1,dp[i]); } for(int i=n-2;i>=0;i--){ dp[i]=Math.min(dp[i+1]+1,dp[i]); } lPA(dp); } out.flush(); out.close(); } }",0.4027962947928833,8,1
3c74c140,"import java.math.*; import java.util.*; import java.lang.*; import java.io.*; public final class Main { FastReader s; public static void main (String[] args) throws java.lang.Exception { new Main().run(); } void run() { s = new FastReader(); solve(); } StringBuffer sb; void solve() { sb = new StringBuffer(); for(int T = s.nextInt();T > 0;T--) { start(); } } void start() { int n = s.nextInt(); int mat[][] = new int[n][5]; for(int i = 0; i<n; i++) { char [] x = s.nextLine().toCharArray(); for(char c : x) { mat[i][c-'a']++; } int p[] = new int[5]; int to = 0; for(int j : mat[i]) to+=j; for(int j = 0; j<5; j++) { mat[i][j]=2*mat[i][j]-to; } } int ans = 0; for(int i = 0; i<5; i++) { int g = check(i,mat, n); ans = Math.max(g,ans); } System.out.println(ans); } int check(int i, int mat[][], int n) { ArrayList<Integer> x = new ArrayList<>(); for(int j = 0; j<n; j++) { x.add(mat[j][i]); } Collections.sort(x); int s = 0; int cnt = 0; int l = n-1; while(l>=0) { int u = x.get(l); if(s+u>0) { s+=u; cnt++; } else break; l--; } return cnt; } static void sort(int[] A){ int n = A.length; Random rnd = new Random(); for(int i=0; i<n; ++i){ int tmp = A[i]; int randomPos = i + rnd.nextInt(n-i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static void sort(long[] A){ int n = A.length; Random rnd = new Random(); for(int i=0; i<n; ++i){ long tmp = A[i]; int randomPos = i + rnd.nextInt(n-i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static String sort(String s) { Character ch[]=new Character[s.length()]; for(int i=0;i<s.length();i++) { ch[i]=s.charAt(i); } Arrays.sort(ch); StringBuffer st=new StringBuffer(""""); for(int i=0;i<s.length();i++) { st.append(ch[i]); } return st.toString(); } }",732c98a0,"import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; import static java.lang.Math.*; import static java.lang.System.out; import static java.lang.Long.MAX_VALUE; public final class Main { FastReader in; StringBuffer sb; public static void main(String[] args) { new Main().run(); } void run(){ in= new FastReader(); start(); } void start(){ sb= new StringBuffer(); for(int t=in.nextInt();t>0;t--) solve(); out.print(sb); } void solve(){ int n = in.nextInt(); int[][] mat = new int[n][5]; for(int i = 0; i<n; i++) { char[] pp =in.nextLine().toCharArray(); for(char c : pp) { mat[i][c-'a']++; } int[] p = new int[5]; int tt = 0; for(int j : mat[i]) tt +=j; for(int j = 0; j<5; j++) { mat[i][j]=2*mat[i][j]-tt; } } int ans = 0; for(int i = 0; i<5; i++) { int g = check(i,mat, n); ans = Math.max(g,ans); } sb.append(ans).append(""\n""); } int check(int i, int[][] mat, int n) { ArrayList<Integer> x = new ArrayList<>(); for(int j = 0; j<n; j++) { x.add(mat[j][i]); } Collections.sort(x); int s = 0; int cnt = 0; int l = n-1; while(l>=0) { int u = x.get(l); if(s+u>0) { s+=u; cnt++; } else break; l--; } return cnt; } void sort(long[] A){ int n = A.length; Random rnd = new Random(); for(int i=0; i<n; ++i){ long tmp = A[i]; int randomPos = i + rnd.nextInt(n-i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } long MAX= MAX_VALUE; int[] precomp= new int[(int) (MAX+1)]; }",0.9157174500642433,15,1
3cbcb1cc,"import java.util.*; import java.lang.*; import java.io.*; public class E { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); br.readLine(); StringBuilder sb = new StringBuilder(); while (t-- > 0) { String[] scn = (br.readLine()).trim().split("" ""); int n = Integer.parseInt(scn[0]); int m = Integer.parseInt(scn[1]); long[] land = new long[n + 1]; scn = (br.readLine()).trim().split("" ""); String[] scn1 = (br.readLine()).trim().split("" ""); for (int i = 0; i < m; i++) { int idx = (int) Long.parseLong(scn[i]); long temp = Long.parseLong(scn1[i]); land[idx] = temp; } long[] ans = new long[n + 1]; long min = (long) (1e15); for (int i = 1; i <= n; i++) { if (land[i] != 0) { min = Math.min(min, land[i]); } ans[i] = min; min += 1; } min = (long) (1e15); for (int i = n; i >= 1; i--) { if (land[i] != 0) { min = Math.min(min, land[i]); } ans[i] = Math.min(min, ans[i]); min += 1; } for (int i = 1; i <= n; i++) { sb.append(ans[i] + "" ""); } sb.append(""\n""); if (t != 0) { br.readLine(); } } System.out.println(sb); return; } }",6045e5d1,"import java.util.*; import java.lang.*; import java.io.*; public class E { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); br.readLine(); StringBuilder sb = new StringBuilder(); while (t-- > 0) { String[] scn = (br.readLine()).trim().split("" ""); int n = Integer.parseInt(scn[0]); int m = Integer.parseInt(scn[1]); long[] land = new long[n + 1]; scn = (br.readLine()).trim().split("" ""); String[] scn1 = (br.readLine()).trim().split("" ""); for (int i = 0; i < m; i++) { int idx = (int) Long.parseLong(scn[i]); long temp = Long.parseLong(scn1[i]); land[idx] = temp; } long[] ans = new long[n + 1]; long min = (long) (1e15); for (int i = 1; i <= n; i++) { if (land[i] != 0) { min = Math.min(min, land[i]); } ans[i] = min; min += 1; } min = (long) (1e15); for (int i = n; i >= 1; i--) { if (land[i] != 0) { min = Math.min(min, land[i]); } ans[i] = Math.min(min, ans[i]); min += 1; } for (int i = 1; i <= n; i++) { sb.append(ans[i] + "" ""); } sb.append(""\n""); if (t != 0) { br.readLine(); } } System.out.println(sb); return; } }",1.0000000000000002,8,1
3d06b643,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",0.5424201273350167,19,1
3d06b643,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",cb87df79,"import java.util.*; public class Longjumps { public static void main(String[] args){ Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",0.6670979364998347,19,1
3d06b643,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",db7f80a5,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.*; public class CodeForces { public static void main(String[] args) throws IOException { FastReader input = new FastReader(); PrintWriter output = new PrintWriter(System.out); int n=input.nextInt(); ArrayList<Integer>seated=new ArrayList<>(); ArrayList<Integer>empty=new ArrayList<>(); for(int i=0;i<n;i++){ int x=input.nextInt(); if(x==1) seated.add(i); else empty.add(i); } if(seated.size()==0) output.println(0); else{ output.println(helper(seated,empty)); } output.close(); } public static long helper(ArrayList<Integer>seated,ArrayList<Integer>empty){ long dp[][]=new long[seated.size()+1][empty.size()+1]; for(int i=1;i<= seated.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(seated.get(i-1)-empty.get(i-1)); for(int j=i+1;j<= empty.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(seated.get(i-1)-empty.get(j-1))); } } return dp[seated.size()][empty.size()]; } } }",0.43339187968248416,19,1
3d06b643,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",f6ca6fc8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n = sc.nextInt(); ArrayList<Integer> o=new ArrayList<Integer>(); ArrayList<Integer> e=new ArrayList<Integer>(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } } System.out.println(dp[o.size()][e.size()]); } }",0.6787549688628459,19,1
3d245498,"import java.io.DataInputStream; import java.io.IOException; import java.io.OutputStreamWriter; import java.io.PrintWriter; public class Main { private static void run() throws IOException { int n = in.nextInt(); int[] a = new int[n]; int[] ans = new int[n]; int sum = 0; a[0] = in.nextInt(); for (int i = 1; i < n; i++) { a[i] = in.nextInt(); if (a[i] * sum <= 0) { ans[i] = 1; } else { ans[i] = -1; } sum += ans[i] * a[i]; } if (sum == 0) { sum -= ans[1] * a[1]; ans[1] = -ans[1]; sum += ans[1] * a[1]; } int d = gcd(Math.abs(sum), Math.abs(a[0])); if (a[0] * sum < 0) { ans[0] = Math.abs(sum) / d; } else { ans[0] = -Math.abs(sum) / d; } for (int i = 1; i < n; i++) { ans[i] *= Math.abs(a[0]) / d; } print_array(ans); } public static void main(String[] args) throws IOException { in = new Reader(); out = new PrintWriter(new OutputStreamWriter(System.out)); int t = in.nextInt(); for (int i = 0; i < t; i++) { run(); } out.flush(); in.close(); out.close(); } private static int gcd(int a, int b) { if (a == 0 || b == 0) return 0; while (b != 0) { int tmp; tmp = a % b; a = b; b = tmp; } return a; } private static Reader in; private static PrintWriter out; private static void print_array(int[] array) { for (int now : array) { out.print(now); out.print(' '); } out.println(); } }",7838095f,"import java.io.DataInputStream; import java.io.IOException; import java.io.OutputStreamWriter; import java.io.PrintWriter; public class Main { private static void run() throws IOException { int n = in.nextInt(); int[] a = new int[n]; int[] ans = new int[n]; int sum = 0; a[0] = in.nextInt(); for (int i = 1; i < n; i++) { a[i] = in.nextInt(); if (a[i] * sum <= 0) { ans[i] = 1; } else { ans[i] = -1; } sum += ans[i] * a[i]; } if (sum == 0) { sum -= ans[1] * a[1]; ans[1] = -ans[1]; sum += ans[1] * a[1]; } int d = gcd(Math.abs(sum), Math.abs(a[0])); if (a[0] * sum < 0) { ans[0] = Math.abs(sum) / d; } else { ans[0] = -Math.abs(sum) / d; } for (int i = 1; i < n; i++) { ans[i] *= (double) Math.abs(a[0]) / d; } print_array(ans); } public static void main(String[] args) throws IOException { in = new Reader(); out = new PrintWriter(new OutputStreamWriter(System.out)); int t = in.nextInt(); for (int i = 0; i < t; i++) { run(); } out.flush(); in.close(); out.close(); } private static int gcd(int a, int b) { if (a == 0 || b == 0) return 0; while (b != 0) { int tmp; tmp = a % b; a = b; b = tmp; } return a; } private static Reader in; private static PrintWriter out; private static void print_array(int[] array) { for (int now : array) { out.print(now); out.print(' '); } out.println(); } }",0.9989916437042231,17,1
3d88acb8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { FastScanner sc = new FastScanner(); int T = sc.nextInt(); while(T-->0) { int n = sc.nextInt(); int[] arr = new int[n]; for(int i = 0; i < n; i++) { arr[i] = sc.nextInt(); } if(check(arr)) System.out.println(""YES""); else System.out.println(""NO""); } } static boolean check(int[] arr) { int n = arr.length; TreeSet<Integer> set = new TreeSet<>(); set.add(arr[0]); for(int i = 1; i < n; i++) { set.add(arr[i]); if(arr[i-1] == arr[i]) continue; Integer x = set.lower(arr[i]); if(x != null && x == arr[i-1]) continue; x = set.higher(arr[i]); if(x != null && x == arr[i-1]) continue; return false; } return true; } }",8aadde13,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeSet; public class A { public static void main(String args[]) throws Exception { FastScanner sc = new FastScanner(); int T = 1; T = sc.nextInt(); PrintWriter pw = new PrintWriter(System.out); while (T-- > 0) { solve(sc, pw); } pw.close(); } public static void solve(FastScanner sc, PrintWriter pw) throws Exception { int n = sc.nextInt(); int[] arr = new int[n]; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); } if(check(arr)) pw.println(""YES""); else pw.println(""NO""); } public static boolean check(int[] arr){ int n=arr.length; TreeSet<Integer> S = new TreeSet<>(); S.add(arr[0]); for(int i=1;i<n;i++) { S.add(arr[i]); if (arr[i] == arr[i - 1]) continue; Integer lb = S.lower(arr[i]); if (lb != null && lb == arr[i - 1]) continue; Integer ub = S.higher(arr[i]); if (ub != null && ub == arr[i - 1]) continue; return false; } return true; } }",0.7586216964384497,11,1
3e6def38,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",0.9853370419484938,14,1
3e6def38,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static void shuffleArray(int[] a) { Random rnd = new Random(); for (int i = a.length-1; i > 0; i--) { int index = rnd.nextInt(i + 1); int tmp = a[index]; a[index] = a[i]; a[i] = tmp; } } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } shuffleArray(events); Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",e7dce35b,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(System.out); int n = nextInt(); int k = nextInt(); f = new int[n + 42]; rf = new int[n + 42]; f[0] = 1; rf[0] = 1; for (int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); rf[i] = mul(rf[i - 1], inv(i)); } int[] a = new int[n * 2]; for (int i = 0; i < n; i++) { a[i] = nextInt() * 2; a[i + n] = nextInt() * 2 + 1; } Arrays.sort(a); int ans = 0; int curOpen = 0; for (int r = 0; r < 2 * n;) { int l = r; while (r < 2 * n && a[l] == a[r]) r++; int intersections = r - l; if (a[l] % 2 == 0) { ans += C(curOpen + intersections, k); if (ans >= mod) ans -= mod; ans += mod - C(curOpen, k); if (ans >= mod) ans -= mod; curOpen += intersections; } else { curOpen -= intersections; } } pw.println(ans); pw.close(); } static int mod = 998244353; static int mul(int a, int b) { return (int) ((long) a * (long) b % mod); } static int[] f; static int[] rf; static int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n - k], rf[k])); } static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static int inv(int a) { return pow(a, mod - 2); } static StringTokenizer st = new StringTokenizer(""""); static BufferedReader br; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int nextInt() throws IOException { return Integer.parseInt(next()); } }",0.8235715779957794,14,1
3e93b259,"import java.util.*; import java.io.*; public class Main { public static void main(String args[]) { FastReader fs=new FastReader(); PrintWriter pw=new PrintWriter(System.out); int tc=fs.nextInt(); while(tc-->0) { int n=fs.nextInt(); long a[]=new long[n]; for(int i=0;i<n;i++) a[i]=fs.nextLong(); long minans=a[0]*n+a[1]*n; long sum=a[0]+a[1]; long min1=a[0],min2=a[1]; for(int i=2;i<n;i++) { sum+=a[i]; if(i%2==0) min1=Math.min(min1,a[i]); else min2=Math.min(min2,a[i]); long tsum=sum-min1-min2; if(i%2==0) tsum=tsum+(n-i/2+1)*min2+(n-i/2)*min1; else tsum=tsum+(min1+min2)*(n-((i+1)/2)+1); minans=Math.min(minans,tsum); } pw.println(minans); } pw.flush(); pw.close(); } }",a60fba84,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static PrintWriter out; static FastReader scan; public static int ni(){return scan.nextInt();} public static long nl(){return scan.nextLong();} static void lIA(long arr[]){ for(int i=0; i<arr.length; i++)arr[i] = nl(); } public static void main (String[] args) throws java.lang.Exception { OutputStream outputStream =System.out; out =new PrintWriter(outputStream); scan =new FastReader(); StringBuilder sb = new StringBuilder(); int t = ni(); while(t-->0){ int n = ni(); long arr[] = new long[n]; lIA(arr); long ans = (long)(n*(arr[0] + arr[1])); long sum = arr[0] + arr[1]; long emin = arr[0], omin = arr[1]; for(int i=2; i<n; i++){ sum += arr[i]; if(i%2==0){ emin = Math.min(arr[i], emin); } else{ omin = Math.min(arr[i], omin); } long temp = sum - emin - omin; if(i%2==0) temp += (n-i/2)*emin + (n-i/2+1)*omin; else temp += (n-(i-1)/2)*(emin + omin); ans = Math.min(ans, temp); } System.out.println(ans); } out.flush(); out.close(); } }",0.2746358150925902,18,1
3ff60986,"import java.io.*; import java.util.*; public class Main { static int N = (int)2e5 +10; static ArrayList<ArrayList<Integer>> adj= new ArrayList<>(N); static { for(int i=0; i<N; i++) { adj.add(new ArrayList<>()); } } static int[][] a = new int[2][N]; static long[][] dp = new long[2][N]; static void dfs(int v, int p){ dp[0][v] = 0; dp[1][v]=0; for(int u: adj.get(v)) { if(u!=p) { dfs(u, v); dp[0][v] += Math.max(Math.abs(a[0][v] - a[1][u]) + dp[1][u], Math.abs(a[0][v] - a[0][u]) + dp[0][u]); dp[1][v] += Math.max(Math.abs(a[1][v] - a[1][u]) + dp[1][u], Math.abs(a[1][v] - a[0][u]) + dp[0][u]); } } } public static void main(String[] args) throws IOException{ FastReader sc = new FastReader(); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); for(int i=1; i<=n; i++) { a[0][i] = sc.nextInt(); a[1][i] = sc.nextInt(); adj.set(i, new ArrayList<>()); } for(int i=1; i<n; i++) { int u = sc.nextInt(); int v = sc.nextInt(); adj.get(u).add(v); adj.get(v).add(u); } dfs(1, 0); System.out.println(Math.max(dp[0][1], dp[1][1])); } } }",d0b4b96c,"import java.io.*; import java.util.*; public class Main { static int N = (int)2e5 +10; static ArrayList<ArrayList<Integer>> adj= new ArrayList<>(N); static { for(int i=0; i<N; i++) { adj.add(new ArrayList<>()); } } static int[][] a = new int[2][N]; static long[][] dp = new long[2][N]; static void dfs(int v, int p){ dp[0][v] = 0; dp[1][v]=0; for(int u: adj.get(v)) { if(u!=p) { dfs(u, v); dp[0][v] += Math.max(Math.abs(a[0][v] - a[1][u]) + dp[1][u], Math.abs(a[0][v] - a[0][u]) + dp[0][u]); dp[1][v] += Math.max(Math.abs(a[1][v] - a[1][u]) + dp[1][u], Math.abs(a[1][v] - a[0][u]) + dp[0][u]); } } } public static void main(String[] args) throws IOException{ FastReader sc = new FastReader(); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); for(int i=1; i<=n; i++) { a[0][i] = sc.nextInt(); a[1][i] = sc.nextInt(); adj.set(i, new ArrayList<>()); } for(int i=1; i<n; i++) { int u = sc.nextInt(); int v = sc.nextInt(); adj.get(u).add(v); adj.get(v).add(u); } dfs(1, 0); System.out.println(Math.max(dp[0][1], dp[1][1])); } } }",1.0,1,1
403e3270,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.text.DecimalFormat; import java.util.*; public class Codeforces { static int mod= 998244353; public static void main(String[] args) throws Exception { PrintWriter out=new PrintWriter(System.out); FastScanner fs=new FastScanner(); int t=fs.nextInt(); outer:while(t-->0) { int n=fs.nextInt(); int arr[]=fs.readArray(n); int l=0, r=1000000000; while(l<r) { int mid=(l+r+1)/2; if(check(arr,mid)) { l=mid; } else r=mid-1; } out.println(l); } out.close(); } static boolean check(int arr[],int min) { int n=arr.length; int brr[]=new int[n]; for(int i=n-1;i>1;i--) { if(brr[i]+arr[i]<min) return false; int cur= Math.min(arr[i], arr[i]+brr[i]-min); int d=cur/3; brr[i-1]+=d; brr[i-2]+=2*d; } return (arr[0]+brr[0]>=min)&&(arr[1]+brr[1]>=min); } }",58d18fca,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastScanner fs=new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t = fs.nextInt(); while(t-->0) { int n = fs.nextInt(); int[] h = fs.readArray(n); int l=1, r=(int)1e9; int ans = -1; while(l<=r) { int mid = (l+r)/2; if(isPossible(mid, h, n)) { ans = mid; l = mid+1; }else { r= mid-1; } } out.println(ans); } out.close(); } static boolean isPossible(int min, int[] h, int n) { int[] c = new int[n]; for(int i=n-1; i>=2; i--) { if(h[i]+c[i]-min<0)return false; int x = Math.min(h[i], h[i]+c[i]-min) / 3; c[i-1] += x; c[i-2] += 2*x; } return (h[0]+c[0]>=min&&h[1]+c[1]>=min); } }",0.7028071767077332,16,1
41e69083,"import java.util.*; public class Solution { public static void main(String[] args) { Scanner io =new Scanner (System.in); int t = io.nextInt(); for (int iii=0; iii<t; iii++) { int n = io.nextInt(); long k = io.nextLong(); Long[] arr = new Long[n]; for (int i=0; i<n; i++) { arr[i] = io.nextLong(); } Arrays.sort(arr); long[] psum = new long[n]; psum[0] = arr[0]; for (int i=1; i<n; i++) { psum[i] = psum[i-1] + arr[i]; } if (psum[n-1] <= k) { System.out.println(0); continue; } long ans = Long.MAX_VALUE; for (int i=0; i<n; i++) { long sum = psum[i] + (n-i-1)*arr[0]; if (sum <= k) { ans = Math.min(ans, n-1-i); continue; } long ops = (long) Math.ceil((double) (sum - k)/(double) (n-i)); ans = Math.min(ans, n-1-i + ops); } System.out.println(ans); } } }",54eb1a6b,"import java.util.*; public class Solution { public static void main(String[] args) { Scanner io =new Scanner (System.in); int t = io.nextInt(); for (int iii=0; iii<t; iii++) { int n = io.nextInt(); long k = io.nextLong(); Long[] arr = new Long[n]; for (int i=0; i<n; i++) { arr[i] = io.nextLong(); } Arrays.sort(arr); long[] psum = new long[n]; psum[0] = arr[0]; for (int i=1; i<n; i++) { psum[i] = psum[i-1] + arr[i]; } if (psum[n-1] <= k) { System.out.println(0); continue; } long ans = Long.MAX_VALUE; for (int i=0; i<n; i++) { long sum = psum[i] + (n-i-1)*arr[0]; if (sum <= k) { ans = Math.min(ans, n-1-i); continue; } long ops = (long) Math.ceil((double) (sum - k)/(double) (n-i)); ans = Math.min(ans, n-1-i + ops); } System.out.println(ans); } } }",1.0000000000000002,13,1
4212c4b9,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Collections; import java.util.PriorityQueue; import java.util.StringTokenizer; public class Solve { static int mod = 1000000000 + 7; static long fact[] = new long[2 * 100000 + 3]; public static void main(String[] args) throws Exception { Scanner sc = new Scanner(); PrintWriter pw = new PrintWriter(System.out); int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int m = sc.nextInt(); int x = sc.nextInt(); int heights[] = new int[n]; int sum = 0; PriorityQueue<Pair> pq = new PriorityQueue<Pair>(); for (int i = 0; i < n; i++) { heights[i] = sc.nextInt(); } for (int i = 0; i < m; i++) { pq.add(new Pair(i + 1, 0)); } pw.println(""YES""); for (int i = 0; i < n; i++) { Pair p = pq.poll(); p.value += heights[i]; pq.add(p); pw.print(p.tower + "" ""); } pw.println(); } pw.flush(); } } class Pair implements Comparable<Pair> { int tower; int value = 0; Pair(int x, int y) { tower = x; value = y; } }",829d2024,"import java.util.*; import java.io.*; public class Main{ public static class Element implements Comparable<Element>{ public int key; public int value; Element(int k, int v) { key=k; value=v; } } public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int m=sc.nextInt(); int x=sc.nextInt(); int[] arr=new int[n]; for(int i=0;i<n;++i) arr[i]=sc.nextInt(); PriorityQueue<Element> pq=new PriorityQueue<>(); for(int i=1;i<=m;++i) { pq.add(new Element(i,0)); } System.out.println(""YES""); for(int j=0;j<n;j++) { Element cur = pq.poll(); System.out.print(cur.key+"" ""); cur.value+= arr[j]; pq.add(cur); } System.out.println(); } } }",0.6361589624249102,9,1
4241f473,"import java.io.*; import java.util.*; public class C { public static void main(String[] args)throws IOException { FastScanner scan = new FastScanner(); BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out)); int t = scan.nextInt(); for(int tt = 0;tt<t;tt++) { int n = scan.nextInt(); ArrayList<String> arr = new ArrayList<>(); for(int i = 0;i<n;i++) arr.add(scan.next()); int max = -1; for(int cases = 0;cases<5;cases++) { ArrayList<Integer> list = new ArrayList<>(); char ch = (char)('a'+cases); for(int i = 0;i<n;i++) { String s = arr.get(i); int countch = 0, countTotal = 0; for(int j = 0;j<s.length();j++) { if(s.charAt(j)==ch) countch++; else countTotal++; } list.add(countch-countTotal); } Collections.sort(list); int sum = 0, count = 0; for(int i = n-1;i>=0;i--) { sum+=list.get(i); if(sum>0) count++; else break; } max = Math.max(max, count); } output.write(max+""\n""); } output.flush(); } public static int[] sort(int arr[]) { List<Integer> list = new ArrayList<>(); for(int i:arr) list.add(i); Collections.sort(list); for(int i = 0;i<list.size();i++) { arr[i] = list.get(i); } return arr; } }",77448a05,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayDeque; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.Random; import java.util.StringTokenizer; public class P4 { static int N = 1000001; static long[] factorialNumInverse = new long[N + 1]; static long[] naturalNumInverse = new long[N + 1]; static long[] fact = new long[N + 1]; public static void main(String[] args) { FastReader sc = new FastReader(); int t; t = sc.nextInt(); StringBuilder st = new StringBuilder(); while (t-- != 0) { int n=sc.nextInt(); String s[]=new String[n]; for(int i=0;i<n;i++) { s[i]=sc.nextLine(); } int max=0; ArrayList<Integer> freq=new ArrayList<>(); for(int i=0;i<5;i++) { int f1=0; freq=new ArrayList<>(); for(int j=0;j<n;j++) { f1=0; for(int k=0;k<s[j].length();k++) { if(s[j].charAt(k)==i+'a') { f1++; }else { f1--; } } freq.add(f1); } Collections.sort(freq); int x=0; int total=0; for(int j=n-1;j>=0;j--) { total=total+freq.get(j); if(total>0) { x++; }else { break; } } max=Math.max(max, x); } st.append(max+""\n""); } System.out.println(st); } static FastReader sc = new FastReader(); static void sort(int[] A) { int n = A.length; Random rnd = new Random(); for (int i = 0; i < n; ++i) { int tmp = A[i]; int randomPos = i + rnd.nextInt(n - i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static void sort(long[] A) { int n = A.length; Random rnd = new Random(); for (int i = 0; i < n; ++i) { long tmp = A[i]; int randomPos = i + rnd.nextInt(n - i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static String sort(String s) { Character ch[] = new Character[s.length()]; for (int i = 0; i < s.length(); i++) { ch[i] = s.charAt(i); } Arrays.sort(ch); StringBuffer st = new StringBuffer(""""); for (int i = 0; i < s.length(); i++) { st.append(ch[i]); } return st.toString(); } }",0.5017601609509743,15,1
42fe7dd0,"import java.util.*; public class Solution { static Scanner sc=new Scanner(System.in); public static void main(String args[]) { int t=sc.nextInt(); outer:while(t-->0){ int n=sc.nextInt(); int[][] ct=new int[n][5]; int[] len=new int[n]; for (int i=0;i<n;i++) { String s=sc.next(); len[i]=s.length(); for(char c:s.toCharArray()){ ct[i][c-'a']++; } } int mx=0; for (int i=0;i<5;i++) { int[] diff=new int[n]; for (int j=0;j<n;j++) { diff[j]=ct[j][i]-(len[j]-ct[j][i]); } Arrays.sort(diff); int sum=0,inc=0; for(int j=n-1;j>=0;j--){ sum+=diff[j]; if (sum>0) { inc++; }else { break; } } mx=Math.max(mx,inc); } System.out.println(mx); } } }",9291ca83,"import java.math.BigDecimal; import java.math.BigInteger; import java.util.*; public class Practice { static HashMap<String, Integer> map = new HashMap<>(); public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); int[][] occurances = new int[5][n]; for(int i=0;i<n;i++){ String s = sc.next(); int[] count = new int[5]; int len = s.length(); for(int j=0;j<s.length();j++){ count[s.charAt(j)-'a']++; } for(int j=0;j<5;j++){ occurances[j][i] = count[j] - (len-count[j]); } } int ans = 0; for(int i=0;i<5;i++){ Arrays.sort(occurances[i]); int tmpAns = 0; int tmpSum=0; for(int j=n-1;j>=0;j--){ tmpSum+=occurances[i][j]; if(tmpSum>0) tmpAns++; else break; } ans = Math.max(ans, tmpAns); } System.out.println(ans); } } }",0.6834463435586475,15,1
42fe7dd0,"import java.util.*; public class Solution { static Scanner sc=new Scanner(System.in); public static void main(String args[]) { int t=sc.nextInt(); outer:while(t-->0){ int n=sc.nextInt(); int[][] ct=new int[n][5]; int[] len=new int[n]; for (int i=0;i<n;i++) { String s=sc.next(); len[i]=s.length(); for(char c:s.toCharArray()){ ct[i][c-'a']++; } } int mx=0; for (int i=0;i<5;i++) { int[] diff=new int[n]; for (int j=0;j<n;j++) { diff[j]=ct[j][i]-(len[j]-ct[j][i]); } Arrays.sort(diff); int sum=0,inc=0; for(int j=n-1;j>=0;j--){ sum+=diff[j]; if (sum>0) { inc++; }else { break; } } mx=Math.max(mx,inc); } System.out.println(mx); } } }",c4ca2ff3,"import java.util.*; import java.lang.*; import java.io.*; public class Main { public static void main (String[] args) throws java.lang.Exception { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); PrintWriter out=new PrintWriter(System.out); while(t-->0) { int n=sc.nextInt(); int freq[][]=new int[n][5]; int rem[][]=new int[n][5]; for(int i=0;i<n;i++) { String str=sc.next(); for(int j=0;j<str.length();j++) { freq[i][str.charAt(j)-'a']++; } for(int k=0;k<5;k++) { rem[i][k]=str.length()-freq[i][k]; } } int ans=0; for(int i=0;i<5;i++) { int arr[]=new int[n]; for(int j=0;j<n;j++) arr[j]=freq[j][i]-rem[j][i]; Arrays.sort(arr); int total=0; int sum=0; for(int k=n-1;k>=0;k--) { if(sum+arr[k]>0) { sum=sum+arr[k]; total++; } else { break; } } ans=Math.max(ans,total); } out.println(ans); } out.flush(); out.close(); } }",0.6696697119231828,15,1
43ca682a,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.Random; import java.util.StringTokenizer; public class D { static final int mod=998244353; static long[] facts, factInvs; public static void main(String[] args) { precomp(); FastScanner fs=new FastScanner(); int n=fs.nextInt(), k=fs.nextInt(); Seg[] segs=new Seg[n]; for (int i=0; i<n; i++) segs[i]=new Seg(fs.nextInt(), fs.nextInt()); Event[] events=new Event[n*2]; for (int i=0; i<n; i++) { events[2*i]=new Event(segs[i], true); events[2*i+1]=new Event(segs[i], false); } long ans=0; Arrays.sort(events); int counter=0; for (Event e:events) { if (e.start) { counter++; } else { counter--; if (counter+1<k) continue; else ans=add(ans, nCk(counter, k-1)); } } System.out.println(ans); } static final Random random=new Random(); static long add(long a, long b) { return (a+b)%mod; } static long mul(long a, long b) { return a*b%mod; } static long exp(long base, long e) { if (e==0) return 1; long half=exp(base, e/2); if (e%2==0) return mul(half, half); return mul(half, mul(half, base)); } static long modInv(long x) { return exp(x, mod-2); } static void precomp() { facts=new long[1_000_000]; factInvs=new long[1_000_000]; factInvs[0]=facts[0]=1; for (int i=1; i<facts.length; i++) facts[i]=mul(facts[i-1], i); factInvs[facts.length-1]=modInv(facts[facts.length-1]); for (int i=facts.length-2; i>=0; i--) factInvs[i]=mul(factInvs[i+1], i+1); } static long nCk(int n, int k) { return mul(facts[n], mul(factInvs[k], factInvs[n-k])); } static class Seg { int l, r; public Seg(int l, int r) { this.l=l; this.r=r; } } static class Event implements Comparable<Event> { boolean start; Seg s; public Event(Seg s, boolean start) { this.s=s; this.start=start; } } }",baebdc56,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.Random; import java.util.StringTokenizer; public class D { static final int mod=998244353; static long[] facts, factInvs; public static void main(String[] args) { precomp(); FastScanner fs=new FastScanner(); int n=fs.nextInt(), k=fs.nextInt(); Seg[] segs=new Seg[n]; for (int i=0; i<n; i++) segs[i]=new Seg(fs.nextInt(), fs.nextInt()); Event[] events=new Event[n*2]; for (int i=0; i<n; i++) { events[2*i]=new Event(segs[i], true); events[2*i+1]=new Event(segs[i], false); } long ans=0; Arrays.sort(events); int counter=0; for (Event e:events) { if (e.start) { counter++; } else { counter--; if (counter+1<k) continue; else ans=add(ans, nCk(counter, k-1)); } } System.out.println(ans); } static final Random random=new Random(); static long add(long a, long b) { return (a+b)%mod; } static long mul(long a, long b) { return a*b%mod; } static long exp(long base, long e) { if (e==0) return 1; long half=exp(base, e/2); if (e%2==0) return mul(half, half); return mul(half, mul(half, base)); } static long modInv(long x) { return exp(x, mod-2); } static void precomp() { facts=new long[1_000_000]; factInvs=new long[1_000_000]; factInvs[0]=facts[0]=1; for (int i=1; i<facts.length; i++) facts[i]=mul(facts[i-1], i); factInvs[facts.length-1]=modInv(facts[facts.length-1]); for (int i=facts.length-2; i>=0; i--) factInvs[i]=mul(factInvs[i+1], i+1); } static long nCk(int n, int k) { return mul(facts[n], mul(factInvs[k], factInvs[n-k])); } static class Seg { int l, r; public Seg(int l, int r) { this.l=l; this.r=r; } } static class Event implements Comparable<Event> { boolean start; Seg s; public Event(Seg s, boolean start) { this.s=s; this.start=start; } } }",1.0000000000000002,14,1
4548305b,"import java.util.function.Consumer; import java.util.*; import java.math.BigDecimal; import java.math.BigInteger; import java.math.RoundingMode; import java.text.DecimalFormat; import java.io.*; import java.lang.Math.*; public class KickStart2020{ public static void main(String[] args) throws Exception{ FastReader sc = new FastReader(); PrintWriter out = new PrintWriter(System.out); int t = sc.nextInt(); while(t-- > 0) { int n = sc.nextInt(); int k = sc.nextInt(); int arr[] = new int[k]; int temp[] = new int[k]; for(int i = 0; i < k; i++) arr[i] = sc.nextInt(); for(int i = 0; i < k; i++) temp[i] = sc.nextInt(); long brr[] = new long[n]; Arrays.fill(brr, Integer.MAX_VALUE); for(int i = 0; i < k; i++) brr[arr[i] - 1] = temp[i]; for(int i = 1; i < n; i++) { brr[i] = Math.min(brr[i], brr[i - 1] + 1); } for(int i = n - 2; i >= 0; i--) { brr[i] = Math.min(brr[i], brr[i + 1] + 1); } for(long e: brr) out.print(e + "" ""); out.println(); } out.close(); } }",be3b1289,"import java.util.*; import java.lang.*; import java.io.*; public class cf { static PrintWriter out; static FastReader scan; public static int ni() { return scan.nextInt(); } static void lPA(long arr[]) { StringBuilder output = new StringBuilder(); for (int i = 0; i < arr.length; i++) output.append(arr[i] + "" ""); out.println(output); } static void iIA(int arr[]) { for (int i = 0; i < arr.length; i++) arr[i] = ni(); } static final Random random = new Random(); public static void main(String[] args) throws java.lang.Exception { OutputStream outputStream = System.out; out = new PrintWriter(outputStream); scan = new FastReader(); StringBuilder sb = new StringBuilder(); int t = ni(); while (t-- != 0) { int n=ni(); int k=ni(); int[] a=new int[k]; int[] temp=new int[k]; iIA(a); iIA(temp); long dp[]=new long[n]; Arrays.fill(dp,Integer.MAX_VALUE); for(int i=0;i<k;i++){ dp[a[i]-1]=temp[i]; } for(int i=1;i<n;i++){ dp[i]=Math.min(dp[i-1]+1,dp[i]); } for(int i=n-2;i>=0;i--){ dp[i]=Math.min(dp[i+1]+1,dp[i]); } lPA(dp); } out.flush(); out.close(); } }",0.5094543776626064,8,1
45f46b14,"import java.util.*; public class Main { public static void main(String[] args){ Scanner scn = new Scanner(System.in); int t = scn.nextInt(); StringBuilder gs = new StringBuilder(""""); for(int Z=0 ; Z<t ; Z++){ int n = scn.nextInt(); String[] str = new String[n]; Set<String> hs = new HashSet<>(); int minLen = Integer.MAX_VALUE; for(int i=0 ; i<n ; i++) { str[i] = scn.next(); hs.add(str[i]); minLen = Math.min(minLen, str[i].length()); } if(minLen == 1) gs.append(""YES"" + ""\n""); else { boolean mark = false; for(int i=0 ; i<n ; i++) { if(str[i].length() == 2 && str[i].charAt(0) == str[i].charAt(1)) { mark = true; break; } String rev = """"; for(int j=str[i].length()-1 ; j>=0 ; j--) rev += str[i].charAt(j); if(hs.contains(rev)) { mark = true; break; } if(str[i].length() == 3) { String ans = rev.substring(1, rev.length()); if(hs.contains(ans)){ mark = true; break; } } if(str[i].length() < 3) { for(int k=0 ; k<26 ; k++) { String str1 = (char)(k + 'a') + rev; if(hs.contains(str1)) { mark= true; break; } } } hs.remove(str[i]); } if(!mark) gs.append(""NO"" + ""\n""); else gs.append(""YES"" + ""\n""); } } System.out.println(gs); } }",7b162d33,"import java.util.*; public class Main { public static void main(String[] args){ Scanner scn = new Scanner(System.in); int t = scn.nextInt(); StringBuilder sb = new StringBuilder(""""); for(int A=0 ; A<t ; A++){ int n = scn.nextInt(); String[] arr = new String[n]; Map<String, Integer> hm = new HashMap<>(); int min = 4; for(int i=0 ; i<n ; i++) { arr[i] = scn.next(); hm.put(arr[i], arr[i].length()); min = Math.min(min, arr[i].length()); } if(min == 1) sb.append(""YES"" + ""\n""); else { boolean flag = false; for(int i=0 ; i<n ; i++) { if(arr[i].length() == 2 && arr[i].charAt(0) == arr[i].charAt(1)) { flag = true; break; } String s = """"; for(int j=arr[i].length()-1 ; j>=0 ; j--) s += arr[i].charAt(j); if(hm.containsKey(s)) { flag = true; break; } if(arr[i].length() < 3) { for(int k=0 ; k<26 ; k++) { String str = (char)(k + 'a') + s; if(hm.containsKey(str)) { flag= true; break; } } } if(arr[i].length() == 3) { String str = s.substring(1, s.length()); if(hm.containsKey(str)){ flag = true; break; } } hm.remove(arr[i]); } if(flag) sb.append(""YES"" + ""\n""); else sb.append(""NO"" + ""\n""); } } System.out.println(sb); } }",0.47262644656591446,12,1
464a03b8,"import java.util.*; public class Soltion{ public static void main(String []args){ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n = sc.nextInt(); Integer[] arr = new Integer[n]; for(int i=0;i<n;i++){ arr[i] = sc.nextInt(); } String s = sc.next(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int i=0;i<s.length();i++){ if(s.charAt(i)=='B'){ blue.add(arr[i]); } else{ red.add(arr[i]); } } Collections.sort(blue); Collections.sort(red); int p=1,q=n; boolean flag = true; for(int i=red.size()-1;i>=0;i--){ if(red.get(i)>q){ flag = false; break; } q--; } for(int i=0;i<blue.size();i++){ if(blue.get(i)<p){ flag = false; break; } p++; } System.out.println(flag? ""Yes"" : ""No""); } } }",f0ede32a,"import java.util.*; public class Soltion{ public static void main(String []args){ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n = sc.nextInt(); Integer[] arr = new Integer[n]; for(int i=0;i<n;i++){ arr[i] = sc.nextInt(); } String s = sc.next(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for(int i=0;i<s.length();i++){ if(s.charAt(i)=='B'){ blue.add(arr[i]); } else{ red.add(arr[i]); } } Collections.sort(blue); Collections.sort(red); int p=1,q=n; boolean flag = true; for(int i=red.size()-1;i>=0;i--){ if(red.get(i)>q){ flag = false; break; } q--; } for(int i=0;i<blue.size();i++){ if(blue.get(i)<p){ flag = false; break; } p++; } System.out.println(flag? ""Yes"" : ""No""); } } }",1.0,20,1
46bde295,"import java.io.*; import java.util.Arrays; public class C { static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))); static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))); private static int nextInt() { try { in.nextToken(); } catch (IOException e) { e.printStackTrace(); } return (int) in.nval; } private static String next(){ try { in.nextToken(); } catch (IOException e) { e.printStackTrace(); } return in.sval; } public static void main(String[] args) { int t = nextInt(); for (int c = 0; c < t; c++) { int n = nextInt(); String[] info = new String[n]; for (int i = 0; i < n; i++) { info[i] = next(); } int ans = 0; for (int i = 0; i < 5; i++) { char cur = (char) (i+'a'); int[] map = new int[n]; for (int j = 0; j < n; j++) { for (int k = 0; k < info[j].length(); k++) { if(info[j].charAt(k)==cur)map[j]++; else map[j]--; } } Arrays.sort(map); int sum = 0; for(int j = n-1; j >= 0; j--) { sum += map[j]; if(sum<=0){ break; } ans = Math.max(ans,n-j); } } System.out.println(ans); } } }",8a858867,"import java.io.*; import java.util.*; public class Mainnn{ public static void main(String[] args) { MyScanner sc = new MyScanner(); out = new PrintWriter(new BufferedOutputStream(System.out)); int test = sc.nextInt(); while(test-- != 0) { int n = sc.nextInt(); String[] info = new String[n]; for (int i = 0; i < n; i++) { info[i] = sc.next(); } int ans = 0; for (int i = 0; i < 5; i++) { char cur = (char) (i+'a'); int[] map = new int[n]; for (int j = 0; j < n; j++) { for (int k = 0; k < info[j].length(); k++) { if(info[j].charAt(k)==cur)map[j]++; else map[j]--; } } Arrays.sort(map); int sum = 0; for(int j = n-1; j >= 0; j--) { sum += map[j]; if(sum<=0){ break; } ans = Math.max(ans,n-j); } } System.out.println(ans); } out.close(); } public static PrintWriter out; }",0.7858402788736031,15,1
47d54299,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a { static int depth[]; static ArrayList<Integer> tree[]; static int diameter=0; public static void main(String[] args) { FastReader input=new FastReader(); int t=input.nextInt(); while (t-->0){ diameter=0; int n=input.nextInt(); int a=input.nextInt(); int b=input.nextInt(); int da=input.nextInt(); int db=input.nextInt(); depth=new int[n+1]; tree=new ArrayList[n+1]; for (int i = 0; i <=n ; i++) { tree[i]=new ArrayList<>(); } for (int i = 0; i <n-1 ; i++) { int x=input.nextInt(); int y=input.nextInt(); tree[x].add(y); tree[y].add(x); } dfs(a,0); if (2 * da >= Math.min(diameter, db) ||depth[b]<=da){ System.out.println(""Alice""); }else { System.out.println(""Bob""); } } } private static int dfs(int root, int p) { int len=0; for(int child:tree[root]){ if (child!=p){ depth[child]=depth[root]+1; int curr=1+dfs(child,root); diameter=Math.max(diameter,curr+len); len=Math.max(len,curr); } } return len; } }",63bfa731,"import java.util.*; import java.io.*; public class D { static ArrayList<Integer> adj[] = new ArrayList[(int)1e5+7]; static int diameter = 0; static int[] depth = new int[(int)1e5 + 7]; public static void main(String[] args) { FastReader in = new FastReader(); int t = in.nextInt(); while(t-- > 0){ int n = in.nextInt(); int a = in.nextInt(), b = in.nextInt(), da = in.nextInt(), db = in.nextInt(); for(int i = 1; i <= n; i++){ adj[i] = new ArrayList<>(); } for(int i = 1; i <=n; i++){ adj[i].clear(); } for(int i = 0; i < n- 1; i++){ int u = in.nextInt(); int v = in.nextInt(); adj[u].add(v); adj[v].add(u); } diameter = 0; depth[a] = 0; dfs(a, -1); System.out.println(2 * da >= Math.min(diameter, db) || depth[b] <= da ? ""Alice"" : ""Bob""); } } static int dfs(int node, int parent){ int len = 0; for(int x : adj[node]){ if(x != parent){ depth[x] = depth[node] + 1; int cur = 1 + dfs(x, node); diameter = Math.max(diameter, cur + len); len = Math.max(len, cur); } } return len; } }",0.6707029539638087,2,1
47d54299,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a { static int depth[]; static ArrayList<Integer> tree[]; static int diameter=0; public static void main(String[] args) { FastReader input=new FastReader(); int t=input.nextInt(); while (t-->0){ diameter=0; int n=input.nextInt(); int a=input.nextInt(); int b=input.nextInt(); int da=input.nextInt(); int db=input.nextInt(); depth=new int[n+1]; tree=new ArrayList[n+1]; for (int i = 0; i <=n ; i++) { tree[i]=new ArrayList<>(); } for (int i = 0; i <n-1 ; i++) { int x=input.nextInt(); int y=input.nextInt(); tree[x].add(y); tree[y].add(x); } dfs(a,0); if (2 * da >= Math.min(diameter, db) ||depth[b]<=da){ System.out.println(""Alice""); }else { System.out.println(""Bob""); } } } private static int dfs(int root, int p) { int len=0; for(int child:tree[root]){ if (child!=p){ depth[child]=depth[root]+1; int curr=1+dfs(child,root); diameter=Math.max(diameter,curr+len); len=Math.max(len,curr); } } return len; } }",da0b7cb2,"import java.io.*; import java.util.*; import static java.lang.Math.*; public class Codeforces { public static void main(String[] args) throws IOException { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); TaskA solver = new TaskA(); solver.solve(in.nextInt(), in, out); out.close(); } static class TaskA { long mod = (long)(1000000007); long fact[]; int depth[]; int parentTable[][]; int degree[]; ArrayList<Integer> leaves; int max = Integer.MIN_VALUE; int min = Integer.MAX_VALUE; int diam = 0; public void solve(int testNumber, InputReader in, PrintWriter out) throws IOException { while(testNumber-->0){ int n = in.nextInt(); int a = in.nextInt(); int b = in.nextInt(); int na = in.nextInt(); int nb = in.nextInt(); ArrayList<ArrayList<Integer>> g = new ArrayList<>(); for(int i=0;i<=n;i++) g.add(new ArrayList<>()); for(int i=1;i<n;i++){ int u = in.nextInt(); int v = in.nextInt(); g.get(u).add(v); g.get(v).add(u); } if(2*na>=nb){ out.println(""Alice""); continue; } depth = new int[n+1]; diam = 0; dfs(g , a , 0); int distance = depth[b]; if(distance <= na){ out.println(""Alice""); continue; } if(2*na >= min(nb , diam)) out.println(""Alice""); else out.println(""Bob""); } } int dfs(ArrayList<ArrayList<Integer>> a , int x, int p) { int len = 0; for(int y : a.get(x)) { if(y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(a , y, x); diam = max(diam, cur + len); len = max(len, cur); } } return len; } } }",0.5853619687512842,2,1
480de7be,"import java.util.StringTokenizer; import java.io.*; public class CF_1551c{ public static final void main(String[] args){ Kattio io= new Kattio(); int t= io.getInt(); while(t-->0){ int n= io.getInt(); int[][] ps= new int[5][n]; for(int i=0; i<n; i++){ String w= io.getWord(); int len= w.length(); for(int j=0; j<len; j++) ps[w.charAt(j)-'a'][i]++; for(int k=0; k<5; k++) ps[k][i]+= ps[k][i]-len; } for(int k=0; k<5; k++) mergeSort(ps[k]); int max= 0; for(int k=0; k<5; k++){ if(ps[k][n-1]<=0) continue; if(max==0) max= 1; for(int i=2; i<=n; i++){ ps[k][n-i]+= ps[k][n-i+1]; if(ps[k][n-i]<=0) break; if(i>max) max= i; } } io.println(max); } io.close(); } static void mergeSort(int arr[]){ int n= arr.length; for (int sz= 1; sz<=n-1; sz=2*sz){ for (int l= 0; l<n-1; l+=2*sz){ int m= Math.min(l + sz-1, n-1); int r= Math.min(l + 2*sz-1, n-1); int n1= m-l+1, n2= r-m; int L[] = new int[n1]; for (int i= 0; i<n1; i++) L[i]= arr[l+i]; int R[] = new int[n2]; for (int j= 0; j<n2; j++) R[j]= arr[m+1+j]; int i= 0, j= 0, k= l; for(;i<n1 && j<n2; k++){ if(L[i]<=R[j]){arr[k]= L[i]; i++;} else{arr[k] = R[j]; j++;} } for(;i<n1; i++, k++) arr[k]= L[i]; for(;j<n2; j++, k++) arr[k]= R[j]; } } } static class Kattio extends PrintWriter { private BufferedReader r; private String line, token; private StringTokenizer st; public Kattio(){this(System.in);} public Kattio(InputStream i){ super(new BufferedOutputStream(System.out)); r= new BufferedReader(new InputStreamReader(i)); } public Kattio(InputStream i, OutputStream o){ super(new BufferedOutputStream(o)); r= new BufferedReader(new InputStreamReader(i)); } public boolean hasMoreTokens(){ return peekToken()!=null; } public int getInt(){ return Integer.parseInt(nextToken()); } public String getWord(){ return nextToken(); } private String peekToken(){ if(token==null) try { while(st==null || !st.hasMoreTokens()) { line= r.readLine(); if(line==null) return null; st= new StringTokenizer(line); } token= st.nextToken(); }catch(IOException e){} return token; } private String nextToken() { String ans= peekToken(); token= null; return ans; } } }",f4757480,"import java.util.*; import java.io.*; public class CF_1551c{ public static final void main(String[] args){ Kattio io= new Kattio(); int t= io.getInt(); while(t-->0){ int n= io.getInt(); int[][] ps= new int[5][n]; for(int i=0; i<n; i++){ String w= io.getWord(); int len= w.length(); for(int j=0; j<len; j++) ps[w.charAt(j)-'a'][i]++; for(int k=0; k<5; k++) ps[k][i]+= ps[k][i]-len; } for(int k=0; k<5; k++) Arrays.sort(ps[k]); int max= 0; for(int k=0; k<5; k++){ if(ps[k][n-1]<=0) continue; if(max==0) max= 1; for(int i=2; i<=n; i++){ ps[k][n-i]+= ps[k][n-i+1]; if(ps[k][n-i]<=0) break; if(i>max) max= i; } } io.println(max); } io.close(); } static class Kattio extends PrintWriter { private BufferedReader r; private String line, token; private StringTokenizer st; public Kattio(){this(System.in);} public Kattio(InputStream i){ super(new BufferedOutputStream(System.out)); r= new BufferedReader(new InputStreamReader(i)); } public Kattio(InputStream i, OutputStream o){ super(new BufferedOutputStream(o)); r= new BufferedReader(new InputStreamReader(i)); } public boolean hasMoreTokens(){ return peekToken()!=null; } public int getInt(){ return Integer.parseInt(nextToken()); } public String getWord(){ return nextToken(); } private String peekToken(){ if(token==null) try { while(st==null || !st.hasMoreTokens()) { line= r.readLine(); if(line==null) return null; st= new StringTokenizer(line); } token= st.nextToken(); }catch(IOException e){} return token; } private String nextToken() { String ans= peekToken(); token= null; return ans; } } }",0.8580142060541107,15,1
48993e07,"import java.io.*; import java.util.*; public class Codeforce { static int mod = (int) (1e9 + 7); public static void main(String arg[]) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); StringBuilder sb = new StringBuilder(); while (t-- > 0) { br.readLine(); String s[]=br.readLine().split("" ""); int n=Integer.parseInt(s[0]); int k=Integer.parseInt(s[1]); long a[]=new long[n]; long b[]=new long[n]; long c[]=new long[n]; Arrays.fill(c,Integer.MAX_VALUE); String s1[]=br.readLine().split("" ""); s=br.readLine().split("" ""); for(int i=0;i<k;i++) c[Integer.parseInt(s1[i])-1]=Integer.parseInt(s[i]); long p=Integer.MAX_VALUE; for(int i=0;i<n;i++) { p=Math.min(p+1,c[i]); a[i]=p; } p=Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ p=Math.min(p+1,c[i]); b[i]=p; } for(int i=0;i<n;i++) sb.append((Math.min(a[i],b[i]))+"" ""); sb.append(""\n""); } System.out.println(sb); } }",96cd6ee9,"import java.io.*; import java.util.*; import java.math.BigInteger; public class C{ public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Task solver = new Task(); solver.solve(in, out); out.close(); } static class Task{ double eps= 0.00000001; static final int MAXN = 100005; static final int MOD= 998244353; static int spf[] = new int[MAXN]; Map<Integer,Set<Integer>> dp= new HashMap<>(); int[] fact= new int[MAXN]; int[] inv= new int[MAXN]; public void solve(InputReader in, PrintWriter out) { int test= in.nextInt(); while(test-->0){ int n= in.nextInt(), k= in.nextInt(); int[] a= new int[k]; int[] t= new int[k]; for(int i=0;i<k;i++) a[i]= in.nextInt(); for(int i=0;i<k;i++) t[i]= in.nextInt(); int[] c= new int[n]; Arrays.fill(c, Integer.MAX_VALUE); for(int i=0;i<k;i++){ c[a[i]-1]=t[i]; } int[] L= new int[n]; int[] R= new int[n]; Arrays.fill(L, Integer.MAX_VALUE); Arrays.fill(R, Integer.MAX_VALUE); long p= Integer.MAX_VALUE; for(int i=0;i<n;i++){ p=Math.min(p+1,c[i]); L[i]=(int)p; } p= Integer.MAX_VALUE; for(int i=n-1;i>=0;i--){ p= Math.min(p+1,c[i]); R[i]=(int)p; } for(int i=0;i<n;i++){ out.print(Math.min(L[i],R[i])+"" ""); } out.println(); } } } }",0.5496908976847484,8,1
48c5f745,"import java.io.*; import java.util.*; public class E { public static void main(String[] args) throws Exception { Reader sc=new Reader(); PrintWriter pw=new PrintWriter(System.out); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k=sc.nextInt(); int[] idxes=new int[k]; int[] temps=new int[k]; for(int i=0;i<k;i++) { idxes[i]=sc.nextInt()-1; } for(int i=0;i<k;i++) { temps[i]=sc.nextInt(); } int[] ans=new int[n]; Arrays.fill(ans, Integer.MAX_VALUE/2); for(int i=0;i<k;i++) { ans[idxes[i]]=temps[i]; } for(int i=1;i<n;i++) { ans[i]=Math.min(ans[i], ans[i-1]+1); } for(int i=n-2;i>=0;i--) { ans[i]=Math.min(ans[i], ans[i+1]+1); } for(int i=0;i<n;i++) { pw.print(ans[i]+"" ""); } pw.println(); } pw.flush(); sc.close(); } }",4d25818e,"import java.util.*; public class Sol { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int k= sc.nextInt(); int ac[] = new int[k]; int temp[] = new int[k]; int ans[] = new int[n+1]; for(int i=0;i<k;i++) ac[i] = sc.nextInt(); for(int i=0;i<k;i++) temp[i] = sc.nextInt(); Arrays.fill(ans,Integer.MAX_VALUE); for(int i=0;i<k;i++) ans[ac[i]] = temp[i]; for(int i=2;i<n+1;i++) ans[i]=Math.min(ans[i],ans[i-1]==Integer.MAX_VALUE ? ans[i-1] : ans[i-1]+1); for(int i=n-1;i>0;i--) ans[i]=Math.min(ans[i],ans[i+1]+1); for(int i=1;i<n+1;i++) System.out.print(ans[i]+"" ""); System.out.println("" ""); } } }",0.8668171815035919,8,1
4b398e3e,"import java.io.*; import java.util.Arrays; import java.util.HashSet; import java.util.Random; import java.util.StringTokenizer; public class codeforces_750_D { private static void solve(FastReader io) { int n = io.nextInt(); int[] a = io.readArray(n); if (n % 2 == 0) { for (int i = 0; i < n; i += 2) { io.out.print(a[i + 1] + "" ""); io.out.print(-a[i] + "" ""); } } else { for (int i = 0; i < n - 3; i += 2) { io.out.print(a[i + 1] + "" ""); io.out.print(-a[i] + "" ""); } if (a[n - 3] + a[n - 2] != 0) { io.out.print(-a[n - 1] + "" ""); io.out.print(-a[n - 1] + "" ""); io.out.print(a[n - 3] + a[n - 2] + "" ""); } else if (a[n - 3] + a[n - 1] != 0) { io.out.print(-a[n - 2] + "" ""); io.out.print(a[n - 3] + a[n - 1] + "" ""); io.out.print(-a[n - 2] + "" ""); } else { io.out.print(a[n - 2] + a[n - 1] + "" ""); io.out.print(-a[n - 3] + "" ""); io.out.print(-a[n - 3] + "" ""); } } io.out.println(); } public static void main(String[] args) throws Exception { try (FastReader ioAdapter = new FastReader()) { int count = 1; count = ioAdapter.nextInt(); while (count-- > 0) { solve(ioAdapter); } } } }",94690b36,"import java.util.Scanner; public class VupsenPupsenand0 { public static void main(String args[]) { Scanner scan = new Scanner(System.in); int t = scan.nextInt(); while (t-- > 0) { int n = scan.nextInt(); int[] a = new int[n]; for (int i = 0; i < n; i++) { a[i] = scan.nextInt(); } if (n % 2 == 0) { for (int i = 0; i < n; i += 2) { System.out.print(a[i + 1] + "" "" + -a[i] + "" ""); } System.out.println(); } else { for (int i = 0; i < n - 3; i += 2) { System.out.print(a[i + 1] + "" "" + -a[i] + "" ""); } int x = a[n - 3]; int y = a[n - 2]; int z = a[n - 1]; if (x + y != 0) { System.out.println(-z + "" "" + (-z) + "" "" + (x + y)); } else if (y + z != 0) { System.out.println((y + z) + "" "" + (-x) + "" "" + (-x)); } else { System.out.println(-y + "" "" + (x + z) + "" "" + (-y)); } } } } }",0.33615776263613384,17,1
4da08761,"import java.io.IOException; import java.io.InputStream; import java.io.OutputStream; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; public class Solution { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); Main solver = new Main(); boolean multipleTC = true; int testCount = multipleTC ? Integer.parseInt(in.next()) : 1; for (int i = 1; i <= testCount; i++) solver.solve(in, out, i); out.close(); } static class Main { PrintWriter out; InputReader in; public void solve(InputReader in, PrintWriter out, int test) { this.out = out; this.in = in; int n = ni(); String[] arr = new String[n]; int[][] freq = new int[n][5]; int[][] rem = new int[n][5]; for(int i = 0; i < n; i++){ arr[i] = n(); for(int j = 0; j < arr[i].length(); j++) freq[i][arr[i].charAt(j) - 'a']++; for(int j = 0; j < 5; j++) rem[i][j] = arr[i].length() - freq[i][j]; } int ans = 0; for(int i = 0; i < 5; i++){ int[] vals = new int[n]; for(int j = 0; j < n; j++) vals[j] = freq[j][i] - rem[j][i]; Arrays.sort(vals); int sum = 0, x = 0; for(int j = n - 1; j >= 0; j--){ if(sum + vals[j] > 0){ x++; sum += vals[j]; } else { break; } } if(x > ans) { ans = x; } } System.out.println(ans); } String n(){ return in.next(); } int ni() { return in.nextInt(); } } }",c4ca2ff3,"import java.util.*; import java.lang.*; import java.io.*; public class Main { public static void main (String[] args) throws java.lang.Exception { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); PrintWriter out=new PrintWriter(System.out); while(t-->0) { int n=sc.nextInt(); int freq[][]=new int[n][5]; int rem[][]=new int[n][5]; for(int i=0;i<n;i++) { String str=sc.next(); for(int j=0;j<str.length();j++) { freq[i][str.charAt(j)-'a']++; } for(int k=0;k<5;k++) { rem[i][k]=str.length()-freq[i][k]; } } int ans=0; for(int i=0;i<5;i++) { int arr[]=new int[n]; for(int j=0;j<n;j++) arr[j]=freq[j][i]-rem[j][i]; Arrays.sort(arr); int total=0; int sum=0; for(int k=n-1;k>=0;k--) { if(sum+arr[k]>0) { sum=sum+arr[k]; total++; } else { break; } } ans=Math.max(ans,total); } out.println(ans); } out.flush(); out.close(); } }",0.7593577618196613,15,1
4e28b45e,"import java.util.*; import java.io.*; public class C { public static void main(String[] args) { FastScanner sc = new FastScanner(); int T = sc.nextInt(); while(T-->0) { int n = sc.nextInt(); char[] s = new char[n]; char[] t = new char[n]; s = sc.next().toCharArray(); t = sc.next().toCharArray(); int a = 0, b = 0, c = 0, d = 0; for(int i = 0; i < n; i++) { if(s[i] == '0' && t[i] == '0') a++; if(s[i] == '1' && t[i] == '0') b++; if(s[i] == '0' && t[i] == '1') c++; if(s[i] == '1' && t[i] == '1') d++; } int res = Integer.MAX_VALUE; if(b == c || b+1 == c) { if((b + c) % 2 == 0) { res = Math.min(res, b + c); } } if(a == d || a+1 == d) { if((a + d) % 2 == 1) { res = Math.min(res, a + d); } } if(res == Integer.MAX_VALUE) System.out.println(-1); else System.out.println(res); } } }",d7a8434f,"import java.util.*; import java.io.*; public class C { public static void main(String[] args) { FastScanner sc = new FastScanner(); int T = sc.nextInt(); while(T-->0) { int n = sc.nextInt(); char[] s = new char[n]; char[] t = new char[n]; s = sc.next().toCharArray(); t = sc.next().toCharArray(); int a = 0, b = 0, c = 0, d = 0; for(int i = 0; i < n; i++) { if(s[i] == '0' && t[i] == '0') a++; if(s[i] == '1' && t[i] == '0') b++; if(s[i] == '0' && t[i] == '1') c++; if(s[i] == '1' && t[i] == '1') d++; } int res = Integer.MAX_VALUE; if(b == c || b+1 == c) { if((b + c) % 2 == 0) { res = Math.min(res, b + c); } } if(a == d || a+1 == d) { if((a + d) % 2 == 1) { res = Math.min(res, a + d); } } if(res == Integer.MAX_VALUE) System.out.println(-1); else System.out.println(res); } } }",1.0000000000000009,4,1
4eac0eea,"import java.util.*; import java.io.*; import java.lang.*; import static java.lang.Math.*; public class cp{ static BufferedReader br; static StringTokenizer st; public static void main(String[] args)throws IOException{ br = new BufferedReader(new InputStreamReader(System.in)); List<Integer> answer = new ArrayList<Integer>(); for(int t=Integer.parseInt(br.readLine()); t>0; t--){ st = readLine(); int n = tokenInt(); String[] words = new String[n]; int i=0; while(n-- >0){ words[i] = br.readLine(); i++; } answer.add(new Solver().solve(words)); } for (int ans : answer ) System.out.println(ans); } static StringTokenizer readLine() throws IOException { return new StringTokenizer(br.readLine()); } static int tokenInt() { return Integer.parseInt(st.nextToken()); } } class Solver{ public int solve(String[] words) throws IOException{ char[] alphabets = {'a', 'b', 'c', 'd', 'e'}; int[][] arr = new int[5][words.length]; int i=0; for(String s : words) { char[] wordArr = s.toCharArray(); int j=0; for (char alpha : alphabets) { int counter = 0; for(char letter : wordArr){ if(alpha == letter){ counter++; } } arr[j][i] = 2*counter - s.length(); j++; } i++; } int[] ans = new int[5]; int m=0; for (int[] ar : arr) { Arrays.sort(ar); int val=0; int counter = 0; for(i=ar.length-1; i>=0; i--){ val += ar[i]; if(val>0){ counter++; } else break; } ans[m] = counter; m++; } return Arrays.stream(ans).max().getAsInt(); } }",f4d6d28d,"import java.util.*; import java.io.*; import java.lang.*; import static java.lang.Math.*; public class cp{ static BufferedReader br; static StringTokenizer st; public static void main(String[] args)throws IOException{ br = new BufferedReader(new InputStreamReader(System.in)); List<Integer> answer = new ArrayList<Integer>(); for(int t=Integer.parseInt(br.readLine()); t>0; t--){ st = readLine(); int n = tokenInt(); String[] words = new String[n]; int i=0; while(n-- >0){ words[i] = br.readLine(); i++; } answer.add(new Solver().solve(words)); } for (int ans : answer ) System.out.println(ans); } static StringTokenizer readLine() throws IOException { return new StringTokenizer(br.readLine()); } static int tokenInt() { return Integer.parseInt(st.nextToken()); } } class Solver{ public int solve(String[] words) throws IOException{ char[] alphabets = {'a', 'b', 'c', 'd', 'e'}; int[][] arr = new int[5][words.length]; int i=0; for(String s : words) { char[] wordArr = s.toCharArray(); int j=0; for (char alpha : alphabets) { int counter = 0; for(char letter : wordArr){ if(alpha == letter) counter++; } arr[j][i] = 2*counter - s.length(); j++; } i++; } int[] ans = new int[5]; int m=0; for (int[] ar : arr) { Arrays.sort(ar); int val=0; int counter=0; for(i=ar.length-1; i>=0; i--){ val += ar[i]; if(val>0) counter++; else break; } ans[m] = counter; m++; } return Arrays.stream(ans).max().getAsInt(); } }",1.0000000000000002,15,1
4f7af821,"import java.util.*; public class contestA { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int t = scanner.nextInt(); int inf = 1000300300; while (t-->0){ int n = scanner.nextInt(); int k = scanner.nextInt(); int[] c = new int[n]; Arrays.fill(c,inf); int[] a = new int[k]; int[] b = new int[k]; for(int i=0;i<k;++i) a[i] = scanner.nextInt() - 1; for(int i=0;i<k;++i) b[i] = scanner.nextInt(); for(int i=0;i<k;++i) c[a[i]] = b[i]; for(int i=1;i<n;++i){ c[i] = Math.min(c[i],c[i-1]+1); } for(int i=n-2;i>=0;--i){ c[i] = Math.min(c[i],c[i+1]+1); } for(int i=0;i<n;++i) System.out.print(c[i]+"" ""); System.out.println(); } } }",8f6421f3,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; public class Main{ public static void main (String[] args){ FastReader s = new FastReader(); int t=1;t=s.ni(); for(int test=1;test<=t;test++){ int n=s.ni(),k=s.ni(); int position[]=s.readArray(k),temp[]=s.readArray(k); int ans[]=new int[n]; Arrays.fill(ans,Integer.MAX_VALUE/2); for(int i=0;i<k;i++){ ans[position[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",0.46447386938083013,8,1
4fd752f7,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) { FastScanner in = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t = in.nextInt(), tt = 0; while(t-->0) { int n = in.nextInt(), m = in.nextInt(), x = in.nextInt(); int aa[] = in.readArray(n); Pair a[] = new Pair[n]; for(int i=0;i<n;i++) a[i] = new Pair(i,aa[i]); PriorityQueue<Pair> pq = new PriorityQueue<>(); Arrays.sort(a); int goneTo[] = new int[n]; for(int i=0;i<m;i++){ pq.add(new Pair(i+1,a[n-1-i].y)); goneTo[a[n-1-i].x] = i+1; } for(int i=n-m-1;i>=0;i--){ Pair xx = pq.poll(); xx.y += a[i].y; goneTo[a[i].x] = xx.x; pq.add(new Pair(xx.x,xx.y)); } Iterator<Pair> it = pq.iterator(); ArrayList<Pair> arr = new ArrayList<>(); while(it.hasNext()) arr.add(it.next()); Collections.sort(arr); if(arr.get(m-1).y-arr.get(0).y>x) out.println(""NO""); else{ out.println(""YES""); int pos[] = new int[n]; for(Pair i : a) pos[i.x] = goneTo[i.x]; for(int i : pos) out.print(i+"" ""); out.println(); } } out.flush(); } static class Pair implements Comparable<Pair> { int x, y; Pair(int a, int b){ x = a; y = b; } } static final Random random = new Random(); }",c7239c97,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) { FastScanner in = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t = in.nextInt(), tt = 0; while(t-->0) { int n = in.nextInt(), m = in.nextInt(), x = in.nextInt(); int aa[] = in.readArray(n); Pair a[] = new Pair[n]; for(int i=0;i<n;i++) a[i] = new Pair(i,aa[i]); PriorityQueue<Pair> pq = new PriorityQueue<>(); Arrays.sort(a); int goneTo[] = new int[n]; for(int i=0;i<m;i++){ pq.add(new Pair(i+1,a[n-1-i].y)); goneTo[a[n-1-i].x] = i+1; } for(int i=n-m-1;i>=0;i--){ Pair xx = pq.poll(); xx.y += a[i].y; goneTo[a[i].x] = xx.x; pq.add(new Pair(xx.x,xx.y)); } Iterator<Pair> it = pq.iterator(); ArrayList<Pair> arr = new ArrayList<>(); while(it.hasNext()) arr.add(it.next()); Collections.sort(arr); if(arr.get(m-1).y-arr.get(0).y>x) out.println(""NO""); else{ out.println(""YES""); int pos[] = new int[n]; for(Pair i : a) pos[i.x] = goneTo[i.x]; for(int i : pos) out.print(i+"" ""); out.println(); } } out.flush(); } static class Pair implements Comparable<Pair> { int x, y; Pair(int a, int b){ x = a; y = b; } } static final Random random = new Random(); }",0.9999999999999998,9,1
51cc7026,"import java.util.*; import java.math.*; import java.io.*; import java.lang.*; public class C_Balanced_Stone_Heaps { public static int t, n; public static int H[]; private static long startTime = System.currentTimeMillis(); public static void main(String[] args) { FastReader sc =new FastReader(); t = sc.nextInt(); while (t-->0) { n = sc.nextInt(); H = new int[n]; int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE; for (int i = 0; i < n; i++) { H[i] = sc.nextInt(); max = Math.max(H[i], max); min = Math.min(H[i], min); } int mid = 0; while (min < max) { mid = min + (max-min+1)/2; if(check(mid)) { min = mid; } else max = mid-1; } System.out.println(min); } } public static boolean check(int x){ int S[] = Arrays.copyOf(H, H.length); for (int i = n-1; i >= 2; i--) { if(S[i]<x) return false; int move = Math.min(S[i]-x, H[i])/3; if(i>=2){ S[i-1]+=(move); S[i-2]+=2*(move); } } return S[0]>= x && S[1] >= x; } }",e81b2d16,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class fastTemp { static int n; static int arr[]; public static void main(String[] args) { FastReader fs = new FastReader(); int t = fs.nextInt(); while(t-- >0){ n = fs.nextInt(); arr = new int[n]; int max = Integer.MIN_VALUE; for(int i=0;i<n;i++){ arr[i] = fs.nextInt(); if(max<arr[i]){ max =arr[i]; } } int l=1; int r = max; int ans = 0; while(l<r){ int mid = l + (r-l+1)/2; if(check(mid)){ l = mid; }else{ r = mid-1; } } System.out.println(l); } } static int min = Integer.MAX_VALUE; public static boolean check(int x){ int ar[] = new int[n]; for(int i=0;i<n;i++){ ar[i] = arr[i]; } for(int i=n-1;i>=2;i--){ if(ar[i]<x){ return false; } int d = (Math.min(arr[i],ar[i]-x))/3; ar[i-1] += d; ar[i-2] += 2*d; } return ar[0]>=x && ar[1]>=x; } }",0.6278573641943059,16,1
51d88c51,"import java.awt.Container; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.File; import java.io.FileNotFoundException; import java.io.FileWriter; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.math.BigInteger; import java.util.*; public class Main { public static boolean check(int a[],int value) { int b[]= new int[a.length]; for (int i = a.length-1; i >=2; i--) { if(a[i]+b[i]<value) { return false; } int d = Math.min(a[i], (a[i]+b[i]-value)); b[i-1]+=d/3; b[i-2]+=(2*(d/3)); } if(a[0]+b[0]<value||a[1]+b[1]<value) { return false; } return true; } public static void main(String[] args) { FastScanner input = new FastScanner(); StringBuilder result = new StringBuilder(); int tc = input.nextInt(); work: while (tc-- > 0) { int n = input.nextInt(); int a[]= new int[n]; int min = Integer.MAX_VALUE; int max = Integer.MIN_VALUE; for (int i = 0; i < n; i++) { a[i] = input.nextInt(); min = Math.min(min, a[i]); max = Math.max(max, a[i]); } int low = min; int high = max; int ans = 0; while(low<=high) { int mid = low+(high-low)/2; if(check(a, mid)) { ans = mid; low = mid+1; } else { high = mid-1; } } result.append(ans+""\n""); } System.out.println(result); } }",c2b7b017,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Example { public static void main(String[] args) { FastReader sc = new FastReader(); int t= sc.nextInt(); while(t>0){ t--; int ans=Integer.MAX_VALUE; int n=sc.nextInt(); int[] ar= new int[n]; int l=Integer.MAX_VALUE; int h=Integer.MIN_VALUE; for(int i=0;i<n;i++){ ar[i]=sc.nextInt(); l=Math.min(l,ar[i]); h=Math.max(h,ar[i]); } int[] extra; while(l<=h){ int mid=l+(h-l)/2; if(possibleans(ar,mid)){ ans=mid; l=mid+1; }else{ h=mid-1; } } System.out.println(ans); } } private static boolean possibleans(int[] ar, int mid) { int[] extra=new int[ar.length]; for(int i=ar.length-1;i>=2;i--){ if((ar[i]+extra[i]-mid)<0){ return false; } int d=Math.min(ar[i],extra[i]+ar[i]-mid); extra[i-1]=extra[i-1]+d/3; extra[i-2]+=2*(d/3); } int a=ar[0]+extra[0]; int b=ar[1]+extra[1]; return (a>=mid && b>=mid); } }",0.5418538279787196,16,1
530f01c2,"import java.util.*; import java.lang.*; import java.io.*; public class Codechef { public static void main (String[] args) throws java.lang.Exception { Scanner sc = new Scanner(System.in); PrintWriter out = new PrintWriter(System.out); int T = sc.nextInt(); for(int t = 0; t<T; t++){ int n = sc.nextInt(), aS = sc.nextInt() - 1, bS = sc.nextInt() - 1, aDis = sc.nextInt(), bDis = sc.nextInt(); Node nodes[] = new Node[n]; for(int i = 0; i<n; i++)nodes[i] = new Node(); for(int i = 0; i<n - 1; i++){ int g = sc.nextInt() - 1, h = sc.nextInt() - 1; nodes[g].adj.add(nodes[h]); nodes[h].adj.add(nodes[g]); } if(aDis * 2 >= bDis){ out.println(""Alice""); continue; } BFS(nodes, nodes[bS]); if (nodes[aS].dis<=aDis) { out.println(""Alice""); continue; } Node farthest=farthest(nodes); BFS(nodes, farthest); farthest=farthest(nodes); int farDist = farthest.dis; if(farDist <= aDis * 2)out.println(""Alice""); else out.println(""Bob""); } out.flush(); } static Node farthest(Node[] nodes){ Node ans = nodes[0]; for(Node nn: nodes){ if(nn.dis > ans.dis)ans = nn; } return ans; } static void BFS(Node nodes[], Node prev){ for (Node nn:nodes) nn.dis=-1; Queue<Node> queue = new LinkedList(); queue.add(prev); prev.dis = 0; while(!queue.isEmpty()){ Node par = queue.poll(); for(Node c: par.adj){ if(c.dis == -1){ c.dis = par.dis + 1; queue.add(c); } } } } static class Node{ List<Node> adj = new ArrayList(); int dis = -1; } }",f41057db,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayDeque; import java.util.Arrays; import java.util.HashMap; import java.util.LinkedList; import java.util.StringTokenizer; public class Solution{ public static void main(String[] args) throws Exception{ FastScanner fs = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int tt = fs.nextInt(); while(tt-->0) { int n = fs.nextInt(), aStart = fs.nextInt()-1, bStart = fs.nextInt()-1, aMove = fs.nextInt(), bMove = fs.nextInt(); Node[] nodes = new Node[n]; for(int i=0;i<n;i++) { nodes[i] = new Node(); } for(int i=0;i<n-1;i++) { int u = fs.nextInt()-1, v = fs.nextInt()-1; nodes[u].adjList.add(nodes[v]); nodes[v].adjList.add(nodes[u]); } if(2*aMove>=bMove) { out.println(""Alice""); continue; } bfs(nodes,nodes[aStart]); if(nodes[bStart].dis<=aMove) { out.println(""Alice""); continue; } Node fNode = farthest(nodes); bfs(nodes, fNode); fNode = farthest(nodes); if(fNode.dis>=2*aMove+1) { out.println(""Bob""); } else { out.println(""Alice""); } } out.close(); } static Node farthest(Node[] nodes) { Node fNode = nodes[0]; for(Node n: nodes) { if(n.dis>fNode.dis) { fNode = n; } } return fNode; } static void bfs(Node[] nodes, Node start) { for(Node n: nodes) n.dis = -1; start.dis = 0; ArrayDeque<Node> queue = new ArrayDeque<Node>(); queue.add(start); while(!queue.isEmpty()) { Node n = queue.remove(); for(Node node: n.adjList) { if(node.dis==-1) { node.dis = n.dis + 1; queue.add(node); } } } } static class Node{ LinkedList<Node> adjList = new LinkedList<Node>(); int dis = -1; } }",0.7150305014431243,2,1
53196443,"import java.lang.*; import java.util.*; import java.io.*; public class Main { static FastScanner in = new FastScanner(); static void solve() { int n = in.nextInt(); long[] a = new long[n], odd = new long[n], even = new long[n]; long[] sum = new long[n]; long m1 = Long.MAX_VALUE, m2 = Long.MAX_VALUE; long st = 0; for (int i = 0; i < n; ++i) { a[i] = in.nextLong(); if (i % 2 == 0 && a[i] < m1) m1 = a[i]; if (i % 2 == 1 && a[i] < m2) m2 = a[i]; st += a[i]; odd[i] = m1; even[i] = m2; sum[i] = st; } long ans = Long.MAX_VALUE; for (int i = 1; i < n; ++i) { long aux = sum[i] + odd[i] * (n - i - 1 + (i + 1) / 2) + even[i] * (n - (i + 1) / 2); if (aux < ans && aux > 0) ans = aux; } System.out.println(ans); } public static void main(String[] args) { int T = in.nextInt(); while (T-- > 0) solve(); } }",e496d229,import java.util.*; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int t=s.nextInt(); while(t-->0) { int n=s.nextInt(); long[] a=new long[n]; long[] odd=new long[n]; long[] even=new long[n]; long[] sum=new long[n]; long m1=Long.MAX_VALUE; long m2=Long.MAX_VALUE; long st=(long)0; for(int i=0;i<n;i++){ a[i]=s.nextLong(); if(i%2==0&&m1>a[i]) m1=a[i]; if(i%2==1&&m2>a[i]) m2=a[i]; st+=a[i]; odd[i]=m1; even[i]=m2; sum[i]=st; } long minc=Long.MAX_VALUE; for(int i=1;i<n;i++){ long c=sum[i]+odd[i]*(n-i-1+(i+1)/2)+even[i]*(n-(i+1)/2); if(c<minc&&c>0) minc=c; } System.out.println(minc); } } },0.8287879931952794,18,1
53d782a0,"import java.io.*; import java.util.*; public class B { static FastReader sc = new FastReader(); private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } public static void main(String[] args) throws IOException { ADMIN_MODE(); int t = sc.ni();while(t-->0) solve(); } static void solve() throws IOException { int n = sc.ni(); long k = sc.nl(); Long[] arr = new Long[n]; for(int i = 0; i < n; i++) arr[i] = sc.nl(); Arrays.sort(arr); long sum = 0; for(int i = 0; i < n; i++) { sum += arr[i]; } if(sum <= k) { System.out.println(0); return; } long cont = 0; long min = sum-k; for(int i = n-1; i >= 0; i--) { cont += arr[i]; long psum = sum-cont; if(psum <= k) { long extra = k-psum; if(arr[0]*(n-i)<=extra) { min = Math.min(min, n-i); continue; } if(i == 0) { long q = k/n; long ans = arr[0]-q+n-1; min = Math.min(min, ans); continue; } extra += arr[0]; long q = extra/(n-i+1); long ans = arr[0]-q+n-i; min = Math.min(min, ans); } else { long toRem = psum-k-arr[0]; long q = (long)Math.ceil(toRem/(n-i+1.0)); long ans = q+arr[0]+n-i; min = Math.min(min, ans); } } System.out.println(min); } }",5769b7b3,"import java.io.*; import java.util.*; public class B { static FastReader sc = new FastReader(); static OutputStream outputStream = System.out; private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } public static void main(String[] args) throws IOException { ADMIN_MODE(); int t = sc.ni();while(t-->0) solve(); w.close(); } static void solve() throws IOException { int n = sc.ni(); long k = sc.nl(); Long[] arr = new Long[n]; for(int i = 0; i < n; i++) arr[i] = sc.nl(); Arrays.sort(arr); long sum = 0; for(int i = 0; i < n; i++) { sum += arr[i]; } if(sum <= k) { System.out.println(0); return; } long cont = 0; long min = sum-k; for(int i = n-1; i >= 0; i--) { cont += arr[i]; long psum = sum-cont; if(psum <= k) { long extra = k-psum; if(arr[0]*(n-i)<=extra) { min = Math.min(min, n-i); continue; } if(i == 0) { long q = k/n; long ans = arr[0]-q+n-1; min = Math.min(min, ans); continue; } extra += arr[0]; long q = extra/(n-i+1); long ans = arr[0]-q+n-i; min = Math.min(min, ans); } else { long toRem = psum-k-arr[0]; long q = (long)Math.ceil(toRem/(n-i+1.0)); long ans = q+arr[0]+n-i; min = Math.min(min, ans); } } System.out.println(min); } }",0.9933569915977305,13,1
54129ce9,"import java.io.*; import java.util.*; public class Program{ static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static PrintWriter pw = new PrintWriter(System.out); static StringTokenizer st = new StringTokenizer(""""); static int T, N, a[]; static boolean ok; static void dfs(int i, int sum){ if(sum == a[N-1]){ ok = true; return; } if(ok || i == N-1) return; dfs(i+1, sum); if(ok) return; dfs(i+1, sum + a[i]); if(ok) return; dfs(i+1, sum - a[i]); } public static void main(String args[]) throws IOException{ T = nexti(); while(T-- > 0){ N = nexti(); a = new int[N]; for(int i = 0; i < N; i++) a[i] = nexti(); ok = false; for(int i = 0; i < N; i++){ dfs(0, 0); int tmp = a[i]; a[i] = a[N-1]; a[N-1] = tmp; } pw.println((ok ? ""YES"" : ""NO"")); } br.close(); pw.close(); } static String next() throws IOException{ while(!st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int nexti() throws IOException{ return Integer.parseInt(next()); } }",607d5541,"import java.io.*; import java.util.*; public class Program{ static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); static PrintWriter pw = new PrintWriter(System.out); static StringTokenizer st = new StringTokenizer(""""); static int T, N, a[]; static boolean ok; static void dfs(int i, int sum){ if(sum == a[N-1]){ ok = true; return; } if(ok || i == N-1) return; dfs(i+1, sum); if(ok) return; dfs(i+1, sum + a[i]); if(ok) return; dfs(i+1, sum - a[i]); } public static void main(String args[]) throws IOException{ T = nexti(); while(T-- > 0){ N = nexti(); a = new int[N]; for(int i = 0; i < N; i++) a[i] = nexti(); ok = false; for(int i = 0; i < N; i++){ dfs(0, 0); int tmp = a[i]; a[i] = a[N-1]; a[N-1] = tmp; } pw.println((ok ? ""YES"" : ""NO"")); } br.close(); pw.close(); } static String next() throws IOException{ while(!st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int nexti() throws IOException{ return Integer.parseInt(next()); } }",1.0000000000000013,7,1
548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",921b6e4a,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",1.0,14,1
548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",9ab3c0e1,"import java.util.*; public class d { public static Scanner sc = new Scanner(System.in); public static final int MOD = 998244353; int []f; int [] lf; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } public static int ksm(int a, int n) { int ans = 1; while(n > 0) { if((n & 1) == 1) ans = mul(a, ans); a = mul(a, a); n >>= 1; } return ans; } public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(lf[n - k], lf[k])); } public static int inv(int a) { return ksm(a, MOD - 2); } public void solve() { int n = sc.nextInt(); int k = sc.nextInt(); f = new int[n + 42]; lf = new int[n + 42]; f[0] = lf[0] = 1; for(int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); lf[i] = mul(lf[i - 1], inv(i)); } int[] events = new int[2 * n]; for(int i = 0; i < n; i++) { int le = sc.nextInt(); int ri = sc.nextInt(); events[i] = le * 2; events[i + n] = ri * 2 + 1; } Arrays.sort(events); int ans = 0, balance = 0; for(int r = 0; r < 2 * n;) { int l = r; while(r < 2 * n && events[l] == events[r]) ++r; int added = r - l; if(events[l] % 2 == 0) { ans += C(balance + added, k); if(ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if(ans >= MOD) ans -= MOD; balance += added; } else balance -= added; } sc.close(); System.out.println(ans); } public static void main(String[] args) { (new d()).solve(); } }",0.8217283308799268,14,1
548ffb07,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",e7dce35b,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(System.out); int n = nextInt(); int k = nextInt(); f = new int[n + 42]; rf = new int[n + 42]; f[0] = 1; rf[0] = 1; for (int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); rf[i] = mul(rf[i - 1], inv(i)); } int[] a = new int[n * 2]; for (int i = 0; i < n; i++) { a[i] = nextInt() * 2; a[i + n] = nextInt() * 2 + 1; } Arrays.sort(a); int ans = 0; int curOpen = 0; for (int r = 0; r < 2 * n;) { int l = r; while (r < 2 * n && a[l] == a[r]) r++; int intersections = r - l; if (a[l] % 2 == 0) { ans += C(curOpen + intersections, k); if (ans >= mod) ans -= mod; ans += mod - C(curOpen, k); if (ans >= mod) ans -= mod; curOpen += intersections; } else { curOpen -= intersections; } } pw.println(ans); pw.close(); } static int mod = 998244353; static int mul(int a, int b) { return (int) ((long) a * (long) b % mod); } static int[] f; static int[] rf; static int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n - k], rf[k])); } static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static int inv(int a) { return pow(a, mod - 2); } static StringTokenizer st = new StringTokenizer(""""); static BufferedReader br; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int nextInt() throws IOException { return Integer.parseInt(next()); } }",0.8162206200291916,14,1
54d7c21e,"import java.io.*; import java.util.*; public class cp { static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static ArrayList<Integer> ans; static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",80881cae,"import java.io.*; import java.util.*; public class CP { static Scanner sc=new Scanner(System.in); public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } System.out.println(mana); } } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",0.9192521980809306,21,1
54d7c21e,"import java.io.*; import java.util.*; public class cp { static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static ArrayList<Integer> ans; static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",a7e7f371,"import java.io.*; import java.util.*; public class cp { static int mod=(int)1e9+7; static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",0.9911355877900632,21,1
54d7c21e,"import java.io.*; import java.util.*; public class cp { static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static ArrayList<Integer> ans; static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",ad4c7a20,"import java.io.*; import java.util.*; public class Practice { static int mod=1000000007; static final int size=501; static FastReader sc=new FastReader(System.in); static PrintWriter out=new PrintWriter(System.out); static long[] factorialNumInverse; static long[] naturalNumInverse; static int[] sp; static long[] fact; static ArrayList<Integer> pr; public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=1; t=sc.nextInt(); for(int i=1;i<=t;i++) solve(i); out.close(); out.flush(); } static void solve(int CASENO) throws IOException, CloneNotSupportedException { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",0.9239170321654054,21,1
558df7d4,"import java.io.*; import java.util.*; public class Pupsen { public static void main(String[] args) throws Exception { FastIO in = new FastIO(); int t = in.nextInt(); for (int tc=0; tc<t; tc++) { int n = in.nextInt(); int[] a = new int[n]; for (int i=0; i<n; i++) { a[i] = in.nextInt(); } int[] b = new int[n]; if (n%2==0) { for (int i=0; i<n-1; i+=2) { b[i] = -a[i+1]; b[i+1] = a[i]; } for (int i=0; i<n; i++) System.out.print(b[i]+"" ""); } else { if (a[0]+a[1]!=0) { b[0] = -a[2]; b[1] = -a[2]; b[2] = a[0]+a[1]; } else if (a[0]+a[2]!=0) { b[0] = -a[1]; b[2] = -a[1]; b[1] = a[0]+a[2]; } else { b[1] = -a[0]; b[2] = -a[0]; b[0] = a[1]+a[2]; } for (int i=3; i<n-1; i+=2) { b[i] = -a[i+1]; b[i+1] = a[i]; } for (int i=0; i<n; i++) System.out.print(b[i]+"" ""); } System.out.println(); } } }",f0d91796,"import java.io.*; import java.util.*; public class cf { public static void main(String[] args){ FastScanner sc = new FastScanner(); int t = sc.nextInt(); while(t-- > 0){ int n=sc.nextInt(); int arr[]=new int[n]; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); } int ans[]=new int[n]; if(n%2==0){ for(int i=0;i<n;i=i+2){ ans[i]=-arr[i+1]; ans[i+1]=arr[i]; } } else{ if(arr[0]+arr[1]!=0){ ans[0]=-arr[2]; ans[1]=-arr[2]; ans[2]=arr[0]+arr[1]; } else{ if(arr[1]+arr[2]!=0){ ans[1]=-arr[0]; ans[2]=-arr[0]; ans[0]=arr[1]+arr[2]; } else{ ans[0]=-arr[1]; ans[2]=-arr[1]; ans[1]=arr[0]+arr[2]; } } for(int i=3;i<n;i=i+2){ ans[i]=-arr[i+1]; ans[i+1]=arr[i]; } } for(int j=0;j<n;j++){ System.out.print(ans[j]+"" ""); } System.out.println(); } } }",0.2970383718258515,17,1
55ab9b5d,"import java.io.*; import java.util.*; public class Main { static int solve(char ch, char[][] str, int N) { int[] a = new int[N]; for (int i = 0; i < N; i++) { int c1 = 0, c2 = 0; for (char x : str[i]) { if (x == ch) c1++; else c2++; } a[i] = c1 - c2; } int sum = 0, count = N; for (int x : a) sum += x; Arrays.sort(a); for (int i = 0; i < N; i++) { if (sum > 0) break; count--; sum -= a[i]; } return count; } public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st = new StringTokenizer(br.readLine()); StringBuilder out = new StringBuilder(); int T = Integer.parseInt(st.nextToken()); while (T-- > 0) { int n = Integer.parseInt(br.readLine().trim()); char[][] str = new char[n][]; for (int i = 0; i < n; i++) { str[i] = br.readLine().trim().toCharArray(); } int ans = 0; for (char ch = 'a'; ch <= 'e'; ch++) { ans = Math.max(ans, solve(ch, str, n)); } out.append(ans).append(""\n""); } System.out.println(out); } }",c6113c06,"import java.io.*; import java.util.*; public class D { private static int solve(char ch, char[][] str, int N) { int[] a=new int[N]; for(int i=0;i<N;i++) { int c1=0, c2=0; for(char x:str[i]) { if(x==ch) c1++; else c2++; } a[i]=c1-c2; } int sum=0, count=N; for(int x:a) sum+=x; Arrays.sort(a); for(int i=0;i<N;i++) { if(sum>0) break; count--; sum-=a[i]; } return count; } public static void main(String[] args) throws Exception { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int i,N; int T=Integer.parseInt(br.readLine().trim()); StringBuilder sb=new StringBuilder(); while (T-->0) { N=Integer.parseInt(br.readLine().trim()); char[][] str=new char[N][]; for(i=0;i<N;i++) str[i]=br.readLine().trim().toCharArray(); int ans=0; for(char ch='a';ch<='e';ch++) { int tmp=solve(ch,str,N); ans=Math.max(ans,tmp); } sb.append(ans).append(""\n""); } System.out.println(sb); } }",0.9417015944221195,15,1
584b0e9e,"import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.InputStreamReader; import java.io.PrintWriter; import java.math.BigInteger; import java.util.ArrayList; import java.util.Arrays; import java.util.BitSet; import java.util.Calendar; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.SortedSet; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; public class D_Round_753_Div3 { public static int MOD = 1000000007; static int[][] dp; public static void main(String[] args) throws FileNotFoundException { PrintWriter out = new PrintWriter(System.out); Scanner in = new Scanner(); int T = in.nextInt(); for (int z = 0; z < T; z++) { int n = in.nextInt(); int[] data = new int[n]; for (int i = 0; i < n; i++) { data[i] = in.nextInt(); } String line = in.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < n; i++) { if (line.charAt(i) == 'B') { blue.add(data[i]); } else { red.add(data[i]); } } Collections.sort(blue); Collections.sort(red); int st = 1; boolean ok = true; for (int i : blue) { if (i < st) { ok = false; break; } st++; } if (ok) { for (int i : red) { if (i > st) { ok = false; break; } st++; } } out.println(ok ? ""Yes"" : ""No""); } out.close(); } }",d9199dfd,"import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.Scanner; public class Simple{ public static void main(String args[]){ Scanner s = new Scanner(System.in); int t = s.nextInt(); while (t>0){ int n = s.nextInt(); int arr[] = new int[n]; for(int i=0;i<n;i++){ arr[i] = s.nextInt(); } String str = s.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for(int i=0;i<n;i++){ if(str.charAt(i)=='R'){ red.add(arr[i]); } else{ blue.add(arr[i]); } } Collections.sort(red); Collections.sort(blue); int start =1; boolean bool =true; for(int i=0;i<blue.size();i++){ if(blue.get(i)<start){ bool = false; break; } start++; } if(!bool){ System.out.println(""NO""); } else{ for(int i=0;i<red.size();i++){ if(red.get(i)>start){ bool = false; break; } start++; } if(bool){ System.out.println(""YES""); } else{ System.out.println(""NO""); } } t--; } s.close(); } }",0.6415377266833785,20,1
597195ee,"import java.io.*; import java.util.Arrays; import java.util.StringTokenizer; public class C_MonstersAndSpells_1700 { public static void main(String[] args) { MyScanner sc = new MyScanner(); out = new PrintWriter(new BufferedOutputStream(System.out)); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int[] times = new int[n]; int[] health = new int[n]; for(int i = 0; i < n; i++) { times[i] = sc.nextInt(); } for(int i = 0; i < n; i++) { health[i] = sc.nextInt(); } Point[] points = new Point[n]; for(int i = 0; i < n; i++) { points[i] = new Point(times[i]-health[i], times[i]); } Arrays.sort(points); long ans = 0; for(int i = 0; i < n; i++) { int j = i+1; int latestTime = points[i].time; while(j < n && points[j].startBy < latestTime) { latestTime = Math.max(latestTime, times[j]); j++; } long length = latestTime-points[i].startBy; ans += (length*(length + 1))/2; i = j - 1; } System.out.println(ans); } out.close(); } static class Point implements Comparable<Point> { Integer startBy; Integer time; Point(int startBy, int time) { this.startBy = startBy; this.time = time; } } public static PrintWriter out; }",5f3a196a,"import java.io.*; import java.util.*; public class MonstersAndSpells { public static PrintWriter out; public static void main(String[] args)throws IOException { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st=new StringTokenizer(br.readLine()); out=new PrintWriter(System.out); int t=Integer.parseInt(st.nextToken()); while(t-->0) { st=new StringTokenizer(br.readLine()); int n=Integer.parseInt(st.nextToken()); int time[]=new int[n]; int health[]=new int[n]; st=new StringTokenizer(br.readLine()); for(int i=0;i<n;i++) { time[i]=Integer.parseInt(st.nextToken()); } st=new StringTokenizer(br.readLine()); for(int i=0;i<n;i++) { health[i]=Integer.parseInt(st.nextToken()); } State a[]=new State[n]; for(int i=0;i<n;i++) { a[i]=new State(time[i]-health[i], time[i]); } Arrays.sort(a); long ans=0; for(int i=0;i<n;i++) { int j=i+1; int max=a[i].time; while(j<n&&a[j].x<max) { max=Math.max(max, time[j]); j++; } ans+=((long)(max-a[i].x)*(long)(max-a[i].x+1))/2; i=j-1; } out.println(ans); } out.close(); } static class State implements Comparable<State>{ int x, time; public State(int x, int time) { this.x=x;this.time=time; } } }",0.5279470201038386,21,1
5af25bd7,"import java.io.*; import java.util.*; public class MySolution { public static void main(String[] args) throws Exception { BufferedReader bu = new BufferedReader(new InputStreamReader(System.in)); StringBuilder out = new StringBuilder(); int numOfTestCases = Integer.parseInt(bu.readLine()); for (int tc = 1; tc <= numOfTestCases; tc++) { int vertices = Integer.parseInt(bu.readLine()); connections = new ArrayList[vertices]; for (int i = 0; i < vertices; i++) { connections[i] = new ArrayList<Integer>(); String st[] = bu.readLine().split("" ""); a[i][0] = Integer.parseInt(st[0]); a[i][1] = Integer.parseInt(st[1]); s[i][0] = s[i][1] = 0; } for (int j = 0; j < vertices-1; j++) { String st[] = bu.readLine().split("" ""); int u = Integer.parseInt(st[0]) - 1, v = Integer.parseInt(st[1]) - 1; connections[u].add(v); connections[v].add(u); } dfs(0, -1); out.append(Math.max(s[0][0], s[0][1]) + ""\n""); } System.out.print(out); } static int N = 100000; static int[][] a = new int[N][2]; static long[][] s = new long[N][2]; static ArrayList<Integer>[] connections; public static void dfs(int n, int parent) { for (int child : connections[n]) { if (child != parent) { dfs(child, n); s[n][0] += Math.max(s[child][0] + Math.abs(a[n][0] - a[child][0]), s[child][1] + Math.abs(a[n][0] - a[child][1])); s[n][1] += Math.max(s[child][0] + Math.abs(a[n][1] - a[child][0]), s[child][1] + Math.abs(a[n][1] - a[child][1])); } } } }",77ec956f,"import java.io.*; import java.util.*; public class Codeforces { public static void main(String args[])throws Exception { BufferedReader bu=new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb=new StringBuilder(); int t=Integer.parseInt(bu.readLine()); while(t-->0) { int n=Integer.parseInt(bu.readLine()); g=new ArrayList[n]; int i; for(i=0;i<n;i++) { g[i]=new ArrayList<>(); String st[]=bu.readLine().split("" ""); a[i][0]=Integer.parseInt(st[0]); a[i][1]=Integer.parseInt(st[1]); s[i][0]=s[i][1]=0; } for(i=0;i<n-1;i++) { String st[]=bu.readLine().split("" ""); int u=Integer.parseInt(st[0])-1,v=Integer.parseInt(st[1])-1; g[u].add(v); g[v].add(u); } dfs(0,-1); sb.append(Math.max(s[0][0],s[0][1])+""\n""); } System.out.print(sb); } static ArrayList<Integer> g[]; static int N=100000,a[][]=new int[N][2]; static long s[][]=new long[N][2]; static void dfs(int n,int p) { for(int x:g[n]) if(x!=p) { dfs(x,n); s[n][0]+=Math.max(s[x][0]+Math.abs(a[x][0]-a[n][0]),s[x][1]+Math.abs(a[x][1]-a[n][0])); s[n][1]+=Math.max(s[x][0]+Math.abs(a[x][0]-a[n][1]),s[x][1]+Math.abs(a[x][1]-a[n][1])); } } }",0.7544376038844002,1,1
5dbd0a07,"import java.io.*; import java.util.*; import static java.lang.Double.parseDouble; import static java.lang.Integer.compare; import static java.lang.Integer.parseInt; import static java.lang.Long.parseLong; import static java.lang.System.in; import static java.lang.System.out; import static java.util.Arrays.asList; import static java.util.Collections.max; import static java.util.Collections.min; public class Main { private static final int MOD = (int) (1E9 + 7); private static final int INF = (int) (1E9); static FastScanner scanner = new FastScanner(in); public static void main(String[] args) throws IOException { StringBuilder answer = new StringBuilder(); int t = 1; t = parseInt(scanner.nextLine()); while (t-- > 0) { answer.append(solve()).append(""\n""); } } private static Object solve() throws IOException { int n = scanner.nextInt(); int m = scanner.nextInt(); int x = scanner.nextInt(); Integer[] h = new Integer[n]; for (int i = 0; i < n; i++) { h[i] = scanner.nextInt(); } TreeSet<Pair> q = new TreeSet<>(); PriorityQueue<Pair> height = new PriorityQueue<>(); for (int i = 0; i < m; i++) { q.add(new Pair(i + 1,0)); } for (int i = 0; i < n; i++) { height.add(new Pair(i,h[i])); } boolean shift = false; int size = 0; while(!height.isEmpty()){ Pair p = height.poll(); Pair building = (shift) ? q.pollLast() : q.pollFirst(); h[p.index] = building.index; q.add(new Pair(building.index,building.value + p.value)); if(++size == n){ size = 0; shift = !shift; } } if(safe(q,x)){ out.println(""YES""); StringBuilder stringBuilder = new StringBuilder(); for (Object o : h) stringBuilder.append(o).append("" ""); out.println(stringBuilder); } else { out.println(""NO""); } return """"; } private static boolean safe(TreeSet<Pair> q, int x) { int last = q.pollFirst().value; while (!q.isEmpty()){ Pair p = q.pollFirst(); if(p.value - last > x) return false; last = p.value; } return true; } private static class Pair implements Comparable<Pair> { int index, value; public Pair(int index, int value) { this.index = index; this.value = value; } } private static int add(int a, int b) { long res = ((long) (a + MOD) % MOD + (b + MOD) % MOD) % MOD; return (int) res; } }",bdc08e6f,"import java.io.*; import java.util.*; import static java.lang.Double.parseDouble; import static java.lang.Integer.compare; import static java.lang.Integer.parseInt; import static java.lang.Long.parseLong; import static java.lang.System.in; import static java.lang.System.out; import static java.util.Arrays.asList; import static java.util.Collections.max; import static java.util.Collections.min; public class Main { private static final int MOD = (int) (1E9 + 7); private static final int INF = (int) (1E9); static FastScanner scanner = new FastScanner(in); public static void main(String[] args) throws IOException { StringBuilder answer = new StringBuilder(); int t = 1; t = parseInt(scanner.nextLine()); while (t-- > 0) { answer.append(solve()).append(""\n""); } } private static Object solve() throws IOException { int n = scanner.nextInt(); int m = scanner.nextInt(); int x = scanner.nextInt(); Integer[] h = new Integer[n]; for (int i = 0; i < n; i++) { h[i] = scanner.nextInt(); } TreeSet<Pair> q = new TreeSet<>(); PriorityQueue<Pair> height = new PriorityQueue<>(); for (int i = 0; i < m; i++) { q.add(new Pair(i + 1,0)); } for (int i = 0; i < n; i++) { height.add(new Pair(i,h[i])); } boolean shift = false; int size = 0; while(!height.isEmpty()){ Pair p = height.poll(); Pair building = (shift) ? q.pollLast() : q.pollFirst(); h[p.index] = building.index; q.add(new Pair(building.index,building.value + p.value)); if(++size == n){ size = 0; shift = !shift; } } if(safe(q,x)){ out.println(""YES""); StringBuilder stringBuilder = new StringBuilder(); for (Object o : h) stringBuilder.append(o).append("" ""); out.println(stringBuilder); } else { out.println(""NO""); } return """"; } private static boolean safe(TreeSet<Pair> q, int x) { int last = q.pollFirst().value; while (!q.isEmpty()){ Pair p = q.pollFirst(); if(p.value - last > x) return false; last = p.value; } return true; } private static class Pair implements Comparable<Pair> { int index, value; public Pair(int index, int value) { this.index = index; this.value = value; } } private static int add(int a, int b) { long res = ((long) (a + MOD) % MOD + (b + MOD) % MOD) % MOD; return (int) res; } }",1.0000000000000002,9,1
5e8d1aaa,"import java.io.*; import java.util.*; public class E { static FastReader sc=null; static long max=(long)1e15+7; public static void main(String[] args) { sc=new FastReader(); PrintWriter out=new PrintWriter(System.out); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(),k=sc.nextInt(); int a[]=sc.readArray(k),te[]=sc.readArray(k); int curr[]=new int[n]; Arrays.fill(curr, -1); for(int i=0;i<k;i++) { a[i]--; curr[a[i]]=te[i]; } long min=max; long ts[]=new long[n]; Arrays.fill(ts, max); for(int i=n-1;i>=0;i--) { if(curr[i]!=-1) { min=Math.min(min, curr[i]+i); } ts[i]=Math.min(ts[i], min-i); } min=max; for(int i=0;i<n;i++) { if(curr[i]!=-1) { min=Math.min(min, curr[i]-i); } ts[i]=Math.min(ts[i], min+i); } for(long e:ts)out.print(e+"" ""); out.println(); } out.close(); } }",c4d04ce7,"import java.io.*; import java.util.*; public class E { static FastReader sc=null; static long nax=(long)1e15+7; public static void main(String[] args) { sc=new FastReader(); PrintWriter out=new PrintWriter(System.out); int test=sc.nextInt(); while(test-->0) { int n=sc.nextInt(),k=sc.nextInt(); int a[]=sc.readArray(k),t[]=sc.readArray(k); int present[]=new int[n]; Arrays.fill(present, -1); for(int i=0;i<k;i++) { a[i]--; present[a[i]]=t[i]; } long min=nax; long temps[]=new long[n]; Arrays.fill(temps, nax); for(int i=n-1;i>=0;i--) { if(present[i]!=-1) { min=Math.min(min, present[i]+i); } temps[i]=Math.min(temps[i], min-i); } min=nax; for(int i=0;i<n;i++) { if(present[i]!=-1) { min=Math.min(min, present[i]-i); } temps[i]=Math.min(temps[i], min+i); } for(long e:temps)out.print(e+"" ""); out.println(); } out.close(); } static void print(int a[]) { for(int e:a) { System.out.print(e+"" ""); } System.out.println(); } }",0.6620840911405578,8,1
63a24497,"import java.util.*; import java.lang.*; import java.io.*; public class Main { void solve() { int n = in.nextInt(); char[] a = in.nextLine().toCharArray(); char[] b = in.nextLine().toCharArray(); int ans = MAX; ans = Math.min(ans, operations(a, b)); ans = Math.min(ans, change(a, b, '1')); ans = Math.min(ans, change(a, b, '0')); if (ans == MAX)ans = -1; out.append(ans + ""\n""); } int operations(char[] a, char[] b) { int count01 = 0 , count10 = 0; int n = a.length; for (int i = 0 ; i < n; i++) { if (a[i] != b[i]) { if (a[i] == '0')count01++; else count10++; } } if (count01 != count10)return MAX; return count01 + count10; } int change(char[] a, char[] b , char ch) { int n = a.length; char[] c = new char[n]; for (int i = 0 ; i < n; i++)c[i] = a[i]; int index = -1; for (int i = 0; i < n; i++) { if (c[i] == '1' && b[i] == ch) { index = i; break; } } if (index == -1)return MAX; for (int i = 0 ; i < n; i++) { if (i == index)continue; c[i] = (char)( '0' + ('1' - c[i]) ); } int local = operations(c, b); if (local == MAX)return MAX; return 1 + local; } public static void main (String[] args) { Main sol = new Main(); int t = 1; t = in.nextInt(); while (t-- != 0) { sol.solve(); } System.out.print(out); } static { try { System.setIn(new FileInputStream(""input.txt"")); System.setOut(new PrintStream(new FileOutputStream(""output.txt""))); err = new PrintStream(new FileOutputStream(""error.txt"")); } catch (Exception e) {} } static FastReader in; static StringBuilder out; static PrintStream err; final int MAX; final int MIN; int mod ; Main() { in = new FastReader(); out = new StringBuilder(); MAX = Integer.MAX_VALUE; MIN = Integer.MIN_VALUE; mod = (int)1e9 + 7; } }",6e5ab1d2,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.InputMismatchException; import java.io.IOException; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); CMenorah solver = new CMenorah(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class CMenorah { public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(); char[] a = in.next().toCharArray(); char[] b = in.next().toCharArray(); int ans = checkPairs(a, b, -1); ans = Math.min(ans, changePair(a, b, '1')); ans = Math.min(ans, changePair(a, b, '0')); if (ans == Integer.MAX_VALUE) ans = -1; out.println(ans); } int changePair(char[] a, char[] b, char t) { int index = -1; int n = a.length; for (int i = 0; i < n; ++i) { if (a[i] == '1' && b[i] == t) { index = i; break; } } return checkPairs(a, b, index); } int checkPairs(char[] a, char[] b, int changeStringIndex) { int n = a.length; int val = 0; char[] tmp = new char[n]; System.arraycopy(a, 0, tmp, 0, n); if (changeStringIndex != -1) { val = 1; for (int i = 0; i < n; ++i) { if (i == changeStringIndex) continue; tmp[i] = a[i] == '0' ? '1' : '0'; } } int _10 = 0, _01 = 0; for (int i = 0; i < n; ++i) { if (tmp[i] != b[i]) { if (tmp[i] == '0') _01++; else _10++; } } return _01 == _10 ? 2 * _01 + val : Integer.MAX_VALUE; } } }",0.6485242534623623,4,1
63bfa731,"import java.util.*; import java.io.*; public class D { static ArrayList<Integer> adj[] = new ArrayList[(int)1e5+7]; static int diameter = 0; static int[] depth = new int[(int)1e5 + 7]; public static void main(String[] args) { FastReader in = new FastReader(); int t = in.nextInt(); while(t-- > 0){ int n = in.nextInt(); int a = in.nextInt(), b = in.nextInt(), da = in.nextInt(), db = in.nextInt(); for(int i = 1; i <= n; i++){ adj[i] = new ArrayList<>(); } for(int i = 1; i <=n; i++){ adj[i].clear(); } for(int i = 0; i < n- 1; i++){ int u = in.nextInt(); int v = in.nextInt(); adj[u].add(v); adj[v].add(u); } diameter = 0; depth[a] = 0; dfs(a, -1); System.out.println(2 * da >= Math.min(diameter, db) || depth[b] <= da ? ""Alice"" : ""Bob""); } } static int dfs(int node, int parent){ int len = 0; for(int x : adj[node]){ if(x != parent){ depth[x] = depth[node] + 1; int cur = 1 + dfs(x, node); diameter = Math.max(diameter, cur + len); len = Math.max(len, cur); } } return len; } }",7974ffba,"import java.util.*; import java.io.*; import java.math.*; public class Euler { static int N = (int)1e5 + 5; static int n, a, b, da, db; static int[] depth = new int[N]; static ArrayList<Integer>[] adj = new ArrayList[N]; static int diam; public static int dfs(int x, int p) { int len = 0; for (int y : adj[x]) { if (y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(y, x); diam = Math.max(diam, cur + len); len = Math.max(len, cur); } } return len; } public static void main(String[] args){ FastReader in = new FastReader(); PrintWriter o = new PrintWriter(System.out); int t = in.nextInt(); while(t-- > 0) { n = in.nextInt(); a = in.nextInt(); b = in.nextInt(); da = in.nextInt(); db = in.nextInt(); for (int i = 1; i <= n; i++) { adj[i] = new ArrayList<>(); } for (int i = 0; i < n - 1; i++) { int u = in.nextInt(); int v = in.nextInt(); adj[u].add(v); adj[v].add(u); } diam = 0; depth[a] = 0; dfs(a, -1); boolean works = true; if (depth[b] <= da) { o.println(""Alice""); continue; } if (2 * da >= diam) { o.println(""Alice""); continue; } if (db > 2 * da) { o.println(""Bob""); continue; } if (db <= 2 * da) { o.println(""Alice""); } } o.close(); o.flush(); return; } }",0.8609931032219326,2,1
63bfa731,"import java.util.*; import java.io.*; public class D { static ArrayList<Integer> adj[] = new ArrayList[(int)1e5+7]; static int diameter = 0; static int[] depth = new int[(int)1e5 + 7]; public static void main(String[] args) { FastReader in = new FastReader(); int t = in.nextInt(); while(t-- > 0){ int n = in.nextInt(); int a = in.nextInt(), b = in.nextInt(), da = in.nextInt(), db = in.nextInt(); for(int i = 1; i <= n; i++){ adj[i] = new ArrayList<>(); } for(int i = 1; i <=n; i++){ adj[i].clear(); } for(int i = 0; i < n- 1; i++){ int u = in.nextInt(); int v = in.nextInt(); adj[u].add(v); adj[v].add(u); } diameter = 0; depth[a] = 0; dfs(a, -1); System.out.println(2 * da >= Math.min(diameter, db) || depth[b] <= da ? ""Alice"" : ""Bob""); } } static int dfs(int node, int parent){ int len = 0; for(int x : adj[node]){ if(x != parent){ depth[x] = depth[node] + 1; int cur = 1 + dfs(x, node); diameter = Math.max(diameter, cur + len); len = Math.max(len, cur); } } return len; } }",949502c2,"import static java.lang.Math.max; import static java.lang.Math.min; import static java.lang.Math.abs; import static java.lang.System.out; import java.util.*; import java.io.*; import java.math.*; public class Template { static int mod = 1000000007; public static void main(String[] args) { FastScanner sc = new FastScanner(); int yo = sc.nextInt(); while (yo-- > 0) { int n = sc.nextInt(); int a = sc.nextInt()-1; int b = sc.nextInt()-1; int da = sc.nextInt(); int db = sc.nextInt(); List<List<Integer>> list = new ArrayList<>(); for(int i = 0; i < n; i++) list.add(new ArrayList<>()); for(int i = 0; i < n-1; i++){ int x = sc.nextInt()-1; int y = sc.nextInt()-1; list.get(x).add(y); list.get(y).add(x); } for(int i = 0; i <= n; i++) depth[i] = 0; diam = 0; dfs(a,-1,list); if(2 * da >= min(diam, db) || depth[b] <= da){ out.println(""Alice""); } else { out.println(""Bob""); } } } static int[] depth = new int[200001]; static int diam = 0; static int dfs(int x, int p, List<List<Integer>> list) { int len = 0; List<Integer> ne = list.get(x); for(int y : ne) { if(y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(y, x,list); diam = max(diam, cur + len); len = max(len, cur); } } return len; } }",0.588671514729147,2,1
63bfa731,"import java.util.*; import java.io.*; public class D { static ArrayList<Integer> adj[] = new ArrayList[(int)1e5+7]; static int diameter = 0; static int[] depth = new int[(int)1e5 + 7]; public static void main(String[] args) { FastReader in = new FastReader(); int t = in.nextInt(); while(t-- > 0){ int n = in.nextInt(); int a = in.nextInt(), b = in.nextInt(), da = in.nextInt(), db = in.nextInt(); for(int i = 1; i <= n; i++){ adj[i] = new ArrayList<>(); } for(int i = 1; i <=n; i++){ adj[i].clear(); } for(int i = 0; i < n- 1; i++){ int u = in.nextInt(); int v = in.nextInt(); adj[u].add(v); adj[v].add(u); } diameter = 0; depth[a] = 0; dfs(a, -1); System.out.println(2 * da >= Math.min(diameter, db) || depth[b] <= da ? ""Alice"" : ""Bob""); } } static int dfs(int node, int parent){ int len = 0; for(int x : adj[node]){ if(x != parent){ depth[x] = depth[node] + 1; int cur = 1 + dfs(x, node); diameter = Math.max(diameter, cur + len); len = Math.max(len, cur); } } return len; } }",9fc811f7,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.StringTokenizer; import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DTreeTag solver = new DTreeTag(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class DTreeTag { int diam = 0; public int dfs(ArrayList<Integer> g[], int x, int depth[], int p) { int len = 0; for (int y : g[x]) { if (y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(g, y, depth, x); diam = Math.max(diam, cur + len); len = Math.max(len, cur); } } return len; } public void solve(int testNumber, InputReader in, PrintWriter out) { int n = in.nextInt(); int a = in.nextInt() - 1; int b = in.nextInt() - 1; int da = in.nextInt(); int db = in.nextInt(); int dis[] = new int[n]; ArrayList<Integer> g[] = new ArrayList[n]; for (int i = 0; i < n; i++) g[i] = new ArrayList<>(); for (int i = 0; i < n - 1; i++) { int u = in.nextInt() - 1; int v = in.nextInt() - 1; g[u].add(v); g[v].add(u); } diam = 0; dfs(g, a, dis, -1); int disb = dis[b]; if (2 * da >= Math.min(diam, db) || disb <= da) { out.println(""Alice""); } else { out.println(""Bob""); } } } }",0.7280639003706105,2,1
6653a758,"import java.util.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",0.7232952921086643,19,1
6653a758,"import java.util.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(),dp[][]=new int[n+1][n+1]; for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",f6ca6fc8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n = sc.nextInt(); ArrayList<Integer> o=new ArrayList<Integer>(); ArrayList<Integer> e=new ArrayList<Integer>(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } } System.out.println(dp[o.size()][e.size()]); } }",0.9837919761265039,19,1
66565156,"import java.io.*; import java.util.*; public class A1 { static final Reader s = new Reader(); static final PrintWriter out = new PrintWriter(System.out); public static void main(String[] args) throws IOException { int t = s.nextInt(); for(int i=1; i<=t; ++i) { new Solver(); } out.close(); } static class Solver { Solver() { int n = s.nextInt(); String[] a = new String[n]; int[][] cnt = new int[n][5]; for(int i=0;i<n;i++) { char[] g = s.next().toCharArray(); for(int j=0;j<g.length;j++) { cnt[i][g[j]-'a']++; } } int g=0; for(int i=0;i<5;i++) { List<Integer> l = new ArrayList<>(); for(int j=0;j<n;j++) { int sum=0; for(int k=0;k<5;k++) { if(i==k)sum+=cnt[j][k]; else sum-=cnt[j][k]; } l.add(sum); } Collections.sort(l,Collections.reverseOrder()); int f=0; int v=0; for(int h:l) { v += h; if(v > 0)f++; else break; } g = Math.max(g, f); } out.println(g); } } }",6f393cfe,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",0.6813377222812693,15,1
6815a099,"import java.math.BigInteger; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Arrays; import java.util.ArrayDeque; import java.util.ArrayList; import java.util.StringTokenizer; public class mathcomp { public static void main(String []args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for(int tt=0;tt<T;tt++) { int n=fs.nextInt(); int aStart=fs.nextInt()-1; int bStart=fs.nextInt()-1; int adist=fs.nextInt();int bdist=fs.nextInt(); Node[] nodes=new Node[n]; for(int i=0;i<n;i++) nodes[i]=new Node(); for(int i=1;i<n;i++) { int a=fs.nextInt()-1,b=fs.nextInt()-1; nodes[a].adj.add(nodes[b]);nodes[b].adj.add(nodes[a]); } bfs(nodes,nodes[bStart]); if(nodes[aStart].dist<=adist) { out.println(""Alice""); continue; } Node farthest=farthest(nodes); bfs(nodes,farthest); farthest=farthest(nodes); int diam=farthest.dist; if(2*adist>=diam) { out.println(""Alice""); continue; } if(bdist>2*adist) { out.println(""Bob""); } else { out.println(""Alice""); } } out.close(); } static Node farthest(Node[] nodes) { Node ans=nodes[0]; for(Node nn:nodes) if(nn.dist>ans.dist) ans=nn; return ans; } static void bfs(Node[] nodes,Node from) { for(Node nn:nodes) nn.dist=-1; ArrayDeque<Node> bfs=new ArrayDeque<>(); bfs.add(from); from.dist=0; while(!bfs.isEmpty()) { Node nn=bfs.remove(); for(Node adj:nn.adj) { if(adj.dist==-1) { adj.dist=nn.dist+1; bfs.add(adj); } } } } static class Node{ ArrayList<Node> adj=new ArrayList<>(); int dist=-1; } }",f41057db,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayDeque; import java.util.Arrays; import java.util.HashMap; import java.util.LinkedList; import java.util.StringTokenizer; public class Solution{ public static void main(String[] args) throws Exception{ FastScanner fs = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int tt = fs.nextInt(); while(tt-->0) { int n = fs.nextInt(), aStart = fs.nextInt()-1, bStart = fs.nextInt()-1, aMove = fs.nextInt(), bMove = fs.nextInt(); Node[] nodes = new Node[n]; for(int i=0;i<n;i++) { nodes[i] = new Node(); } for(int i=0;i<n-1;i++) { int u = fs.nextInt()-1, v = fs.nextInt()-1; nodes[u].adjList.add(nodes[v]); nodes[v].adjList.add(nodes[u]); } if(2*aMove>=bMove) { out.println(""Alice""); continue; } bfs(nodes,nodes[aStart]); if(nodes[bStart].dis<=aMove) { out.println(""Alice""); continue; } Node fNode = farthest(nodes); bfs(nodes, fNode); fNode = farthest(nodes); if(fNode.dis>=2*aMove+1) { out.println(""Bob""); } else { out.println(""Alice""); } } out.close(); } static Node farthest(Node[] nodes) { Node fNode = nodes[0]; for(Node n: nodes) { if(n.dis>fNode.dis) { fNode = n; } } return fNode; } static void bfs(Node[] nodes, Node start) { for(Node n: nodes) n.dis = -1; start.dis = 0; ArrayDeque<Node> queue = new ArrayDeque<Node>(); queue.add(start); while(!queue.isEmpty()) { Node n = queue.remove(); for(Node node: n.adjList) { if(node.dis==-1) { node.dis = n.dis + 1; queue.add(node); } } } } static class Node{ LinkedList<Node> adjList = new LinkedList<Node>(); int dis = -1; } }",0.6993602677224566,2,1
6825260d,"import java.awt.Container; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.File; import java.io.FileNotFoundException; import java.io.FileWriter; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.math.BigInteger; import java.util.*; public class Main { public static int check(String a,String b) { int zero1 = 0,one0 = 0; for (int i = 0; i <a.length(); i++) { if(a.charAt(i)=='1'&&a.charAt(i)!=b.charAt(i)) { one0++; } else if(a.charAt(i)=='0'&&a.charAt(i)!=b.charAt(i)) { zero1++; } } if(zero1!=one0) { return -1; } else return zero1+one0; } public static int changeandAns(String a ,String b,int index) { char newa[] = new char[a.length()]; for (int i = 0; i <a.length(); i++) { if(i!=index) { if(a.charAt(i)=='0') { newa[i]='1'; } else { newa[i]= '0'; } } else { newa[i]= a.charAt(i); } } String ra = new String(newa); return check(ra, b); } public static void main(String[] args) { FastScanner input = new FastScanner(); int tc = input.nextInt(); StringBuilder result = new StringBuilder(); work: while (tc-- > 0) { int n = input.nextInt(); String a = input.next(); String b = input.next(); int ans = Integer.MAX_VALUE; int noChange = check(a,b); if(noChange!=-1) { ans = Math.min(ans, noChange); } boolean have = false; int index = -1; for (int i = 0; i <n; i++) { if(a.charAt(i)=='1'&&b.charAt(i)==a.charAt(i)) { have = true; index = i; break; } } if(have) { int onetone = changeandAns(a,b,index); if(onetone!=-1) { ans = Math.min(ans,1+ onetone); } } have = false; index = -1; for (int i = 0; i <n; i++) { if(a.charAt(i)=='1'&&b.charAt(i)!=a.charAt(i)) { have = true; index = i; break; } } if(have) { int onetozero = changeandAns(a,b,index); if(onetozero!=-1) { ans = Math.min(ans, 1+onetozero); } } if(ans==Integer.MAX_VALUE) { result.append(""-1\n""); } else { result.append(ans+""\n""); } } System.out.println(result); } }",c972dd00,"import java.awt.Container; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.File; import java.io.FileNotFoundException; import java.io.FileWriter; import java.io.IOException; import java.io.InputStreamReader; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.math.BigInteger; import java.util.*; public class Main { public static int check(String a,String b) { int zero1 = 0,one0 = 0; for (int i = 0; i <a.length(); i++) { if(a.charAt(i)=='1'&&a.charAt(i)!=b.charAt(i)) { one0++; } else if(a.charAt(i)=='0'&&a.charAt(i)!=b.charAt(i)) { zero1++; } } if(zero1!=one0) { return -1; } else return zero1+one0; } public static int changeandAns(String a ,String b,int index) { char newa[] = new char[a.length()]; for (int i = 0; i <a.length(); i++) { if(i!=index) { if(a.charAt(i)=='0') { newa[i]='1'; } else { newa[i]= '0'; } } else { newa[i]= a.charAt(i); } } String ra = new String(newa); return check(ra, b); } public static void main(String[] args) { FastScanner input = new FastScanner(); int tc = input.nextInt(); StringBuilder result = new StringBuilder(); work: while (tc-- > 0) { int n = input.nextInt(); String a = input.next(); String b = input.next(); int ans = Integer.MAX_VALUE; int noChange = check(a,b); if(noChange!=-1) { ans = Math.min(ans, noChange); } boolean have = false; int index = -1; for (int i = 0; i <n; i++) { if(a.charAt(i)=='1'&&b.charAt(i)==a.charAt(i)) { have = true; index = i; break; } } if(have) { int onetone = changeandAns(a,b,index); if(onetone!=-1) { ans = Math.min(ans,1+ onetone); } } have = false; index = -1; for (int i = 0; i <n; i++) { if(a.charAt(i)=='1'&&b.charAt(i)!=a.charAt(i)) { have = true; index = i; break; } } if(have) { int onetozero = changeandAns(a,b,index); if(onetozero!=-1) { ans = Math.min(ans, 1+onetozero); } } if(ans==Integer.MAX_VALUE) { result.append(""-1\n""); } else { result.append(ans+""\n""); } } System.out.println(result); } }",1.0,4,1
6946f466,"import java.util.*; public class A { public static void main(String[] args) { Scanner sc = new Scanner(System.in); StringBuilder sb = new StringBuilder(); int testCases = sc.nextInt(); for (int t = 0; t < testCases; t++) { int n = sc.nextInt(); int m = sc.nextInt(); char c[][] = new char[n][m]; for (int i = 0; i < n; i++) { String str = sc.next(); c[i] = str.toCharArray(); } int count = 0; StringBuilder ans = new StringBuilder(); for (int i = 0; i < m - 2; i++) { for (int j = 0; j < n; j++) { if (c[j][i] == '0') { continue; } count++; if (j == n - 1) { c[j][i] = '0'; c[j][i + 1] = (c[j][i + 1] == '0' ? '1' : '0'); c[j - 1][i + 1] = (c[j - 1][i + 1] == '0' ? '1' : '0'); ans.append((j + 1) + "" "" + (i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j) + "" "" + (i + 2)) .append(""\n""); continue; } c[j][i] = '0'; c[j][i + 1] = (c[j][i + 1] == '0' ? '1' : '0'); c[j + 1][i + 1] = (c[j + 1][i + 1] == '0' ? '1' : '0'); ans.append((j + 1) + "" "" + (i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 2) + "" "" + (i + 2)) .append(""\n""); } } for (int i = 0; i < n - 2; i++) { for (int j = m - 2; j < m; j++) { if (c[i][j] == '0') { continue; } count++; if (j == m - 1) { c[i][j] = '0'; c[i + 1][j] = (c[i + 1][j] == '0' ? '1' : '0'); c[i + 1][j - 1] = (c[i + 1][j - 1] == '0' ? '1' : '0'); ans.append((i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j)) .append(""\n""); continue; } c[i][j] = '0'; c[i + 1][j] = (c[i + 1][j] == '0' ? '1' : '0'); c[i + 1][j + 1] = (c[i + 1][j + 1] == '0' ? '1' : '0'); ans.append((i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 2)) .append(""\n""); } } ArrayList<String> al = new ArrayList<>(); int count_one = 0; for (int i = n - 2; i < n; i++) { for (int j = m - 2; j < m; j++) { if (c[i][j] == '0') { al.add((i + 1) + "" "" + (j + 1)); } else { count_one++; al.add(0, (i + 1) + "" "" + (j + 1)); } } } if (count_one == 0) { sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 1) { ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(3)).append(""\n""); count = count + 3; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 2) { ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(1) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); count = count + 2; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 3) { ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); count = count + 1; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 4) { ans.append(al.get(1) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(3)).append(""\n""); count = count + 4; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } } System.out.print(sb); } }",ce7027ee,"import java.util.*; public class A { public static void main(String[] args) { Scanner sc = new Scanner(System.in); StringBuilder sb = new StringBuilder(); int testCases = sc.nextInt(); for (int t = 0; t < testCases; t++) { int n = sc.nextInt(); int m = sc.nextInt(); char c[][] = new char[n][m]; for (int i = 0; i < n; i++) { String str = sc.next(); c[i] = str.toCharArray(); } int count = 0; StringBuilder ans = new StringBuilder(); for (int i = 0; i < m - 2; i++) { for (int j = 0; j < n; j++) { if (c[j][i] == '0') { continue; } count++; if (j == n - 1) { c[j][i] = '0'; c[j][i + 1] = (c[j][i + 1] == '0' ? '1' : '0'); c[j - 1][i + 1] = (c[j - 1][i + 1] == '0' ? '1' : '0'); ans.append((j + 1) + "" "" + (i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j) + "" "" + (i + 2)) .append(""\n""); continue; } c[j][i] = '0'; c[j][i + 1] = (c[j][i + 1] == '0' ? '1' : '0'); c[j + 1][i + 1] = (c[j + 1][i + 1] == '0' ? '1' : '0'); ans.append((j + 1) + "" "" + (i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 2) + "" "" + (i + 2)) .append(""\n""); } } for (int i = 0; i < n - 2; i++) { for (int j = m - 2; j < m; j++) { if (c[i][j] == '0') { continue; } count++; if (j == m - 1) { c[i][j] = '0'; c[i + 1][j] = (c[i + 1][j] == '0' ? '1' : '0'); c[i + 1][j - 1] = (c[i + 1][j - 1] == '0' ? '1' : '0'); ans.append((i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j)) .append(""\n""); continue; } c[i][j] = '0'; c[i + 1][j] = (c[i + 1][j] == '0' ? '1' : '0'); c[i + 1][j + 1] = (c[i + 1][j + 1] == '0' ? '1' : '0'); ans.append((i + 1) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 1) + "" "" + (i + 2) + "" "" + (j + 2)) .append(""\n""); } } ArrayList<String> al = new ArrayList<>(); int count_one = 0; for (int i = n - 2; i < n; i++) { for (int j = m - 2; j < m; j++) { if (c[i][j] == '0') { al.add((i + 1) + "" "" + (j + 1)); } else { count_one++; al.add(0, (i + 1) + "" "" + (j + 1)); } } } if (count_one == 0) { sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 1) { ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(3)).append(""\n""); count = count + 3; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 2) { ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(1) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); count = count + 2; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 3) { ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); count = count + 1; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } if (count_one == 4) { ans.append(al.get(1) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(2)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(2) + "" "" + al.get(3)).append(""\n""); ans.append(al.get(0) + "" "" + al.get(1) + "" "" + al.get(3)).append(""\n""); count = count + 4; sb.append(count).append(""\n""); sb.append(ans).append(""\n""); continue; } } System.out.print(sb); } }",1.0,10,1
69b2fd22,"import java.io.*; import java.util.*; public class Main { public static void main(String args[]) { FastReader input=new FastReader(); PrintWriter out=new PrintWriter(System.out); int T=1; while(T-->0) { int n=input.nextInt(); int a[]=new int[n]; ArrayList<Integer> list=new ArrayList<>(); ArrayList<Integer> space=new ArrayList<>(); for(int i=0;i<n;i++) { a[i]=input.nextInt(); if(a[i]==1) { list.add(i); } else { space.add(i); } } int pre[]=new int[space.size()]; for(int i=0;i<list.size();i++) { if(i==0) { int min=Integer.MAX_VALUE; for(int j=0;j<space.size();j++) { pre[j]=Math.abs(list.get(i)-space.get(j)); min=Math.min(min,pre[j]); pre[j]=min; } } else { int arr[]=new int[space.size()]; for(int j=0;j<i;j++) { arr[j]=Integer.MAX_VALUE; } int min=Integer.MAX_VALUE; for(int j=i;j<space.size();j++) { int v=Math.abs(list.get(i)-space.get(j)); v+=pre[j-1]; arr[j]=v; min=Math.min(min,v); arr[j]=min; } for(int j=0;j<space.size();j++) { pre[j]=arr[j]; } } } out.println(pre[space.size()-1]); } out.close(); } }",9028caf7,"import java.io.*; import java.util.*; public class Main { public static void main(String args[]) { FastReader input=new FastReader(); PrintWriter out=new PrintWriter(System.out); int T=1; while(T-->0) { int n=input.nextInt(); int a[]=new int[n]; ArrayList<Integer> list=new ArrayList<>(); ArrayList<Integer> space=new ArrayList<>(); for(int i=0;i<n;i++) { a[i]=input.nextInt(); if(a[i]==1) { list.add(i); } else { space.add(i); } } int pre[]=new int[space.size()]; for(int i=0;i<list.size();i++) { if(i==0) { int min=Integer.MAX_VALUE; for(int j=0;j<space.size();j++) { pre[j]=Math.abs(list.get(i)-space.get(j)); min=Math.min(min,pre[j]); pre[j]=min; } } else { int arr[]=new int[space.size()]; for(int j=0;j<i;j++) { arr[j]=Integer.MAX_VALUE; } int min=Integer.MAX_VALUE; for(int j=i;j<space.size();j++) { int v=Math.abs(list.get(i)-space.get(j)); v+=pre[j-1]; arr[j]=v; min=Math.min(min,v); arr[j]=min; } for(int j=0;j<space.size();j++) { pre[j]=arr[j]; } } } out.println(pre[space.size()-1]); } out.close(); } }",1.0000000000000002,19,1
6b97058e,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",921b6e4a,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",1.0,14,1
6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",734a94be,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuffer res = new StringBuffer(); int tc = 1; while(tc-->0) { int n = sc.nextInt(); ArrayList<Integer> one = new ArrayList<>(); ArrayList<Integer> zero = new ArrayList<>(); for(int i=0;i<n;i++) { int x = sc.nextInt(); if(x==1) { one.add(i); } else { zero.add(i); } } int dp[][] = new int[one.size()+1][zero.size()+1]; for(int i=1;i<=one.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(zero.get(i-1)-one.get(i-1)); for(int j=i+1;j<=zero.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(one.get(i-1)-zero.get(j-1))); } } System.out.println(dp[one.size()][zero.size()]); } System.out.println(res); } }",0.5555862631910723,19,1
6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",cb87df79,"import java.util.*; public class Longjumps { public static void main(String[] args){ Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",0.7324269589432577,19,1
6bcc5afd,"import java.util.*; public class MyClass { public static void main(String args[]) { Scanner s=new Scanner(System.in); int n=s.nextInt(); int a[]=new int[n]; ArrayList<Integer> lt1=new ArrayList<>(); ArrayList<Integer> lt0=new ArrayList<>(); for(int i=0;i<n;i++) { int l=s.nextInt(); if(l==0) lt0.add(i+1); else lt1.add(i+1); } int dp[][]=new int[lt1.size()+1][lt0.size()+1]; for(int i=1;i<=lt1.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(lt0.get(i-1)-lt1.get(i-1)); for(int j=i+1;j<=lt0.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(lt1.get(i-1)-lt0.get(j-1))); } } System.out.println(dp[lt1.size()][lt0.size()]); } }",f6ca6fc8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n = sc.nextInt(); ArrayList<Integer> o=new ArrayList<Integer>(); ArrayList<Integer> e=new ArrayList<Integer>(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } } System.out.println(dp[o.size()][e.size()]); } }",0.727659647526296,19,1
6c4ac8d3,"import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Scanner; import java.io.*; public class ieee1{ public static void main(String[] args) { Scanner scn=new Scanner(System.in); int t=scn.nextInt(); while(t-->0){ HashMap<Integer,Integer> map=new HashMap<>(); int b=scn.nextInt(); int m=scn.nextInt(); int x=scn.nextInt(); int[] arr=new int[b]; PriorityQueue<Node> pq=new PriorityQueue<>(new pqc()); for(int i=0;i<b;i++){ int ele=scn.nextInt(); arr[i]=ele; } for(int i=1;i<=m;i++){ pq.add(new Node(i,0)); } System.out.println(""YES""); for(int i=0;i<arr.length;i++){ int ele=arr[i]; Node n=pq.poll(); System.out.print(n.ind+"" ""); n.data+=ele; pq.add(n); } System.out.println(); } } public static class Node{ int ind; int data; Node(int ind,int data){ this.ind=ind; this.data=data; } } public static class pqc implements Comparator<Node>{ } }",829d2024,"import java.util.*; import java.io.*; public class Main{ public static class Element implements Comparable<Element>{ public int key; public int value; Element(int k, int v) { key=k; value=v; } } public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int m=sc.nextInt(); int x=sc.nextInt(); int[] arr=new int[n]; for(int i=0;i<n;++i) arr[i]=sc.nextInt(); PriorityQueue<Element> pq=new PriorityQueue<>(); for(int i=1;i<=m;++i) { pq.add(new Element(i,0)); } System.out.println(""YES""); for(int j=0;j<n;j++) { Element cur = pq.poll(); System.out.print(cur.key+"" ""); cur.value+= arr[j]; pq.add(cur); } System.out.println(); } } }",0.5427766119010994,9,1
6db218a2,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.InputMismatchException; import java.util.*; import java.io.*; import java.lang.*; public class Main{ public static void sortbyColumn(int arr[][], int col) { Arrays.sort(arr, new Comparator<int[]>() { }); } public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> { public U x; public V y; public Pair(U x, V y) { this.x = x; this.y = y; } } static long dist[],dp[][],left[],right[]; static int visited[],isit[]; static ArrayList<Pair<Integer,Pair<Long,Long>>> adj[],li; static int MOD=1000000007; static char ch[]; static int[] sieve,is_sieve; static TreeSet<Integer> tr; static long mat[][]; static void dfs(int node,int par, Pair<Long,Long> p[]){ for(Pair<Integer,Pair<Long,Long>> pp:adj[node]){ if(pp.x!=par){ dfs(pp.x,node,p); long x=Math.abs(p[node].x-p[pp.x].x); long y=Math.abs(p[node].x-p[pp.x].y); long z=Math.abs(p[node].y-p[pp.x].x); long w=Math.abs(p[node].y-p[pp.x].y); left[node]+=Math.max(x+left[pp.x],y+right[pp.x]); right[node]+=Math.max(z+left[pp.x],w+right[pp.x]); } } } public static void main(String args[]){ InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter w = new PrintWriter(outputStream); int t,i,j,tno=0,tte; t=in.nextInt(); while(t-->0){ int n=in.nextInt(); adj=new ArrayList[n+1]; left=new long[n+1]; right=new long[n+1]; visited=new int[n+1]; for(i=0;i<n+1;i++){ adj[i]=new ArrayList<>(); } Pair<Long,Long> p[]=new Pair[n+1]; for(i=1;i<=n;i++){ p[i]=new Pair<>(in.nextLong(),in.nextLong()); } for(i=0;i<n-1;i++){ int u,v; u=in.nextInt(); v=in.nextInt(); adj[u].add(new Pair<>(v,p[v])); adj[v].add(new Pair<>(u,p[u])); } dfs(1,-1,p); w.println((long)Math.max(left[1],right[1])); } w.close(); } }",90b71536,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.InputMismatchException; import java.util.*; import java.io.*; import java.lang.*; public class Main{ public static void sortbyColumn(int arr[][], int col) { Arrays.sort(arr, new Comparator<int[]>() { }); } public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> { public U x; public V y; public Pair(U x, V y) { this.x = x; this.y = y; } } static long dist[],dp[][],left[],right[]; static int visited[],isit[]; static ArrayList<Pair<Integer,Pair<Long,Long>>> adj[],li; static int MOD=1000000007; static char ch[]; static int[] sieve,is_sieve; static TreeSet<Integer> tr; static long mat[][]; static void dfs(int node,int par, Pair<Long,Long> p[]){ for(Pair<Integer,Pair<Long,Long>> pp:adj[node]){ if(pp.x!=par){ dfs(pp.x,node,p); long x=Math.abs(p[node].x-p[pp.x].x); long y=Math.abs(p[node].x-p[pp.x].y); long z=Math.abs(p[node].y-p[pp.x].x); long w=Math.abs(p[node].y-p[pp.x].y); left[node]+=Math.max(x+left[pp.x],y+right[pp.x]); right[node]+=Math.max(z+left[pp.x],w+right[pp.x]); } } } public static void main(String args[]){ InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter w = new PrintWriter(outputStream); int t,i,j,tno=0,tte; t=in.nextInt(); while(t-->0){ int n=in.nextInt(); adj=new ArrayList[n+1]; left=new long[n+1]; right=new long[n+1]; visited=new int[n+1]; for(i=0;i<n+1;i++){ adj[i]=new ArrayList<>(); } Pair<Long,Long> p[]=new Pair[n+1]; for(i=1;i<=n;i++){ p[i]=new Pair<>(in.nextLong(),in.nextLong()); } for(i=0;i<n-1;i++){ int u,v; u=in.nextInt(); v=in.nextInt(); adj[u].add(new Pair<>(v,p[v])); adj[v].add(new Pair<>(u,p[u])); } dfs(1,-1,p); w.println((long)Math.max(left[1],right[1])); } w.close(); } }",1.0000000000000002,1,1
6e7cd58b,"import java.util.*; import java.io.*; public class CodeforcesRound734 { static FastReader sc = new FastReader(); public static void main(String[] args) throws IOException { try { int t = sc.nextInt(); while (t-- > 0) { C(); } } catch (Exception e) { e.printStackTrace(); } } static void C() { int n = sc.nextInt(); int a[][] = new int[5][n]; for (int i = 0; i < n; i++) { String s = sc.next(); for (int j = 0; j < s.length(); j++) { if (s.charAt(j) == 'a') a[0][i]++; else a[0][i]--; if (s.charAt(j) == 'b') a[1][i]++; else a[1][i]--; if (s.charAt(j) == 'c') a[2][i]++; else a[2][i]--; if (s.charAt(j) == 'd') a[3][i]++; else a[3][i]--; if (s.charAt(j) == 'e') a[4][i]++; else a[4][i]--; } } for (int x[] : a) { Arrays.sort(x); } int ans = 0; for (int i = 0; i < 5; i++) { int temp = 0, cnt = 0; for (int j = n - 1; j >= 0; j--) { temp += a[i][j]; if (temp <= 0) break; else cnt++; } ans = Math.max(ans, cnt); } System.out.println(ans); } }",7279bcb3,"import java.util.*; public class main { public static final Scanner sc = new Scanner(System.in); public static void solve(){ int n=sc.nextInt(); int[][] a=new int[5][n]; for(int i=0;i<n;i++){ String x=sc.next(); for(int j=0;j<x.length();j++){ if(x.charAt(j)=='a') a[0][i]++; else a[0][i]--; if(x.charAt(j)=='b') a[1][i]++; else a[1][i]--; if(x.charAt(j)=='c') a[2][i]++; else a[2][i]--; if(x.charAt(j)=='d') a[3][i]++; else a[3][i]--; if(x.charAt(j)=='e') a[4][i]++; else a[4][i]--; } } for(int j=0;j<5;j++) Arrays.sort(a[j]); int ans=0; for(int j=0;j<5;j++){ int tmp=0,cnt=0; for(int i=n-1;i>=0;i--){ tmp+=a[j][i]; if(tmp<=0) break; else cnt++; } ans=Math.max(ans,cnt); } System.out.println(ans); } public static void main(String[] args) { int T=1; T=sc.nextInt(); while(--T>=0) solve(); } }",0.8860102842614503,15,1
6e7cd58b,"import java.util.*; import java.io.*; public class CodeforcesRound734 { static FastReader sc = new FastReader(); public static void main(String[] args) throws IOException { try { int t = sc.nextInt(); while (t-- > 0) { C(); } } catch (Exception e) { e.printStackTrace(); } } static void C() { int n = sc.nextInt(); int a[][] = new int[5][n]; for (int i = 0; i < n; i++) { String s = sc.next(); for (int j = 0; j < s.length(); j++) { if (s.charAt(j) == 'a') a[0][i]++; else a[0][i]--; if (s.charAt(j) == 'b') a[1][i]++; else a[1][i]--; if (s.charAt(j) == 'c') a[2][i]++; else a[2][i]--; if (s.charAt(j) == 'd') a[3][i]++; else a[3][i]--; if (s.charAt(j) == 'e') a[4][i]++; else a[4][i]--; } } for (int x[] : a) { Arrays.sort(x); } int ans = 0; for (int i = 0; i < 5; i++) { int temp = 0, cnt = 0; for (int j = n - 1; j >= 0; j--) { temp += a[i][j]; if (temp <= 0) break; else cnt++; } ans = Math.max(ans, cnt); } System.out.println(ans); } }",cfba313d,"import java.io.*; import java.util.*; public class C { static class Code { private void solve(InputReader in, OutputWriter out) throws IOException { ArrayOpn o= new ArrayOpn(); int t = in.readInt(); while(t -- > 0) { int n=in.readInt(); int[][] freq= new int[5][n]; for(int i=0; i<n; i++) { char s[]= in.readString().toCharArray(); for(char e: s) { if(e=='a') { freq[0][i]++; } else { freq[0][i]--; } if(e=='b') { freq[1][i]++; } else { freq[1][i]--; } if(e=='c') { freq[2][i]++; } else { freq[2][i]--; } if(e=='d') { freq[3][i]++; } else { freq[3][i]--; } if(e=='e') { freq[4][i]++; } else { freq[4][i]--; } } } for(int i=0; i<5; i++) { Arrays.sort(freq[i]); } int ans=0; for(int i=0; i<5; i++) { int temp=0, count=0; for(int j=n-1; j>=0; j--) { temp+=freq[i][j]; if(temp<=0) { break; } count++; } ans=Math.max(ans, count); } out.printLine(ans); } out.close(); } } static class ArrayOpn{ static final Random random = new Random(); private void sort(int A[]) { int n = A.length; for(int i=0; i<n; i++) { int j = random.nextInt(n),temp = A[j]; A[j] = A[i]; A[i] = temp; } Arrays.sort(A); } } public static void main(String[] args) throws IOException { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); OutputWriter out = new OutputWriter(outputStream); Code solver = new Code(); solver.solve(in, out); out.flush(); out.close(); } }",0.5150587953382746,15,1
6f02c6d9,"import java.io.*; import java.util.*; public class Main { static long mod = 1000000007; static InputReader sc = new InputReader(System.in); static PrintWriter out = new PrintWriter(System.out); public static void main(String[] args) throws IOException { int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int[] A = new int[n]; for (int i = 0; i < A.length; i++) { A[i] = sc.nextInt(); } String word = sc.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < word.length(); i++) { if (word.charAt(i) == 'R') { red.add(A[i]); } else { blue.add(A[i]); } } Collections.sort(blue); Collections.sort(red); boolean possible = true; int a = 1; for (int i = 0; i < blue.size(); i++, a++) { if (blue.get(i) < a) { possible = false; break; } } for (int i = 0; i < red.size(); i++, a++) { if (red.get(i) > a) { possible = false; break; } } if (possible) out.println(""YES""); else out.println(""NO""); } out.flush(); out.close(); } }",884f5678,"import java.io.*; import java.util.*; import java.text.*; import java.math.*; import java.util.regex.*; public class JaiShreeRam{ static Scanner in=new Scanner(); static long mod = 1000000007; static ArrayList<ArrayList<Integer>> adj; public static void main(String[] args) throws Exception{ int z=in.readInt(); while(z-->0) { int n=in.readInt(); int a[]=nia(n); char c[]=in.readString().toCharArray(); ArrayList<Integer> d=new ArrayList<>(); ArrayList<Integer> in=new ArrayList<>(); for(int i=0;i<n;i++) { if(c[i]=='R') { in.add(a[i]); } else { d.add(a[i]); } } String ans=""YES""; Collections.sort(d); int k=1; for(int i:d) { if(i<k) { ans=""NO""; } k++; } Collections.sort(in); for(int i=in.size()-1;i>=0;i--) { if(in.get(i)>n) { ans=""NO""; break; } n--; } System.out.println(ans); } } static int[] nia(int n){ int[] arr= new int[n]; int i=0; while(i<n){ arr[i++]=in.readInt(); } return arr; } }",0.5268880578861271,20,1
6f02c6d9,"import java.io.*; import java.util.*; public class Main { static long mod = 1000000007; static InputReader sc = new InputReader(System.in); static PrintWriter out = new PrintWriter(System.out); public static void main(String[] args) throws IOException { int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int[] A = new int[n]; for (int i = 0; i < A.length; i++) { A[i] = sc.nextInt(); } String word = sc.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < word.length(); i++) { if (word.charAt(i) == 'R') { red.add(A[i]); } else { blue.add(A[i]); } } Collections.sort(blue); Collections.sort(red); boolean possible = true; int a = 1; for (int i = 0; i < blue.size(); i++, a++) { if (blue.get(i) < a) { possible = false; break; } } for (int i = 0; i < red.size(); i++, a++) { if (red.get(i) > a) { possible = false; break; } } if (possible) out.println(""YES""); else out.println(""NO""); } out.flush(); out.close(); } }",c2242c42,"import java.io.*; import java.util.*; public class cp_2 { static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int arr[]=new int[n]; for (int i = 0; i < arr.length; i++) { arr[i]=sc.nextInt(); } String s=sc.next(); ArrayList<Integer> blue=new ArrayList<>(); ArrayList<Integer> red=new ArrayList<>(); for(int i=0;i<n;i++) { if(s.charAt(i)=='B') blue.add(arr[i]); else { red.add(arr[i]); } } Collections.sort(blue); Collections.sort(red,Collections.reverseOrder()); boolean flag=true; for(int i=0;i<blue.size();i++) { if(blue.get(i)<i+1) flag=false; } for(int i=0;i<red.size();i++) { if(red.get(i)>n-i) flag=false; } printYesNo(flag); } out.flush(); out.close(); System.gc(); } static void printYesNo(boolean condition) { if (condition) { out.println(""Yes""); } else { out.println(""No""); } } static PrintWriter out=new PrintWriter(System.out); }",0.7809189185914243,20,1
6f02c6d9,"import java.io.*; import java.util.*; public class Main { static long mod = 1000000007; static InputReader sc = new InputReader(System.in); static PrintWriter out = new PrintWriter(System.out); public static void main(String[] args) throws IOException { int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int[] A = new int[n]; for (int i = 0; i < A.length; i++) { A[i] = sc.nextInt(); } String word = sc.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for (int i = 0; i < word.length(); i++) { if (word.charAt(i) == 'R') { red.add(A[i]); } else { blue.add(A[i]); } } Collections.sort(blue); Collections.sort(red); boolean possible = true; int a = 1; for (int i = 0; i < blue.size(); i++, a++) { if (blue.get(i) < a) { possible = false; break; } } for (int i = 0; i < red.size(); i++, a++) { if (red.get(i) > a) { possible = false; break; } } if (possible) out.println(""YES""); else out.println(""NO""); } out.flush(); out.close(); } }",ff34fab2,"import java.util.ArrayList; import java.util.Collections; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; import java.util.TreeSet; import java.io.*; public class Div2 { public static String solution(int [] arr, int n, String st) { ArrayList<Integer> red = new ArrayList<>(); ArrayList<Integer> blue = new ArrayList<>(); for(int i = 0; i<n; i++) { if(st.charAt(i)=='R') red.add(arr[i]); else blue.add(arr[i]); } Collections.sort(red); Collections.sort(blue); int cb = 1; for(int j = 0; j<blue.size(); j++) { if(blue.get(j)<cb) return ""NO""; cb++; } int cr = n; for(int j = red.size()-1; j>=0; j--) { if(red.get(j)>cr) return ""NO""; cr--; } return ""YES""; } private static PrintWriter out = new PrintWriter(System.out); public static void main (String[] args) { MyScanner s = new MyScanner(); int t = s.nextInt(); for(int j = 0; j<t ; j++) { int n = s.nextInt(); int[] arr = new int[n]; for(int i =0; i<n; i++) arr[i] = s.nextInt(); String st = s.next(); out.println(solution(arr,n, st)); } out.flush(); out.close(); } }",0.5923585873080541,20,1
6f393cfe,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",7a9c69d8,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",1.0,15,1
6f393cfe,"import java.io.*; import java.util.*; public class C { public static void main(String[] args) throws Exception{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); try{ int t = Integer.parseInt(br.readLine()); while(t-->0){ int n = Integer.parseInt(br.readLine()); int lst[][] = new int[n][5]; for(int i=0; i<n; i++){ String s = br.readLine(); for(int j=0; j<s.length(); j++){ lst[i][s.charAt(j)-'a']++; } } int fans = Integer.MIN_VALUE; for(int i=0; i<5; i++){ int val[] = new int[n]; for(int k=0; k<n; k++){ int sum = 0; for(int j=0; j<5; j++){ if(i==j){ sum += lst[k][j]; }else{ sum -= lst[k][j]; } } val[k] = sum; } Arrays.sort(val); int sum = 0; int ans = 0; for(int x = n-1; x>=0; x--){ sum+=val[x]; if(sum>0){ ans++; }else{ break; } } fans = Math.max(fans, ans); } bw.write(fans+""\n""); } bw.flush(); }catch(Exception e){ return; } } }",d61f51c5,"import java.util.*; import java.lang.*; import java.io.*; public class InterestingStrory { public static void main(String[] args) throws java.lang.Exception { try { FastReader sc = new FastReader(); int t =sc.nextInt(); while (t-- > 0) { int n=sc.nextInt(); int[][] occ=new int[n][5]; for(int i=0;i<n;i++){ char[] warr=sc.next().toCharArray(); for(char ch:warr){ occ[i][ch-'a']++; } } int ans=Integer.MIN_VALUE;; for(int c=0;c<5;c++){ int[] sums=new int[n]; for(int i=0;i<n;i++){ int sum=0; for(int j=0;j<5;j++){ if(c==j){ sum+=occ[i][j]; } else{ sum-=occ[i][j]; } } sums[i]=sum; } Arrays.sort(sums); int currSum=0; int l=n-1; for(l=n-1;l>=0;l--){ if(currSum+sums[l]<=0){ break; } else{ currSum+=sums[l]; } } ans=Math.max(ans,n-l-1); } System.out.println(ans); } } catch (Exception e) { return; } } }",0.6444926959966729,15,1
722e318f,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.math.BigInteger; import java.text.DecimalFormat; import java.util.*; import java.util.concurrent.ThreadLocalRandom; import java.util.stream.Collectors; import java.util.stream.IntStream; import java.util.stream.LongStream; public class TaskB { static long mod = 1000000007; static FastScanner scanner; static final StringBuilder result = new StringBuilder(); public static void main(String[] args) { scanner = new FastScanner(); int T = scanner.nextInt(); for (int t = 0; t < T; t++) { solve(t + 1); result.append(""\n""); } System.out.println(result); } static void solve(int t) { int n = scanner.nextInt(); int[] a = scanner.nextIntArray(n); String s = scanner.nextToken(); List<Integer> blue = new ArrayList<>(); List<Integer> red = new ArrayList<>(); for (int i = 0; i < n; i++) { if (s.charAt(i) == 'B') { blue.add(a[i]); } else { red.add(a[i]); } } Collections.sort(blue); Collections.sort(red); for (int i = 0; i < blue.size(); i++) { if (blue.get(i) < i + 1) { result.append(""NO""); return; } } for (int i = 0; i < red.size(); i++) { if (red.get(i) > i + 1 + blue.size()) { result.append(""NO""); return; } } result.append(""YES""); } }",b790ef12,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastReader obj = new FastReader(); PrintWriter out = new PrintWriter(System.out); int l = obj.nextInt(); while (l-- != 0) { int n = obj.nextInt(); int[] num = new int[n]; for (int i = 0; i < n; i++) num[i] = obj.nextInt(); Vector<Integer> red = new Vector<>(); Vector<Integer> blue = new Vector<>(); String s = obj.next(); for (int i = 0; i < s.length(); i++) { if (s.charAt(i) == 'R') red.add(num[i]); else blue.add(num[i]); } Collections.sort(blue); Collections.sort(red); int c = 1, f = 0; for (int i = 0; i < blue.size(); i++) { if (blue.get(i) < c) { f = 1; break; } c++; } for (int i = 0; i < red.size(); i++) { if (red.get(i) > c) { f = 1; break; } c++; } if (f == 0) out.println(""YES""); else out.println(""NO""); } out.flush(); } }",0.5050011334912677,20,1
7279bcb3,"import java.util.*; public class main { public static final Scanner sc = new Scanner(System.in); public static void solve(){ int n=sc.nextInt(); int[][] a=new int[5][n]; for(int i=0;i<n;i++){ String x=sc.next(); for(int j=0;j<x.length();j++){ if(x.charAt(j)=='a') a[0][i]++; else a[0][i]--; if(x.charAt(j)=='b') a[1][i]++; else a[1][i]--; if(x.charAt(j)=='c') a[2][i]++; else a[2][i]--; if(x.charAt(j)=='d') a[3][i]++; else a[3][i]--; if(x.charAt(j)=='e') a[4][i]++; else a[4][i]--; } } for(int j=0;j<5;j++) Arrays.sort(a[j]); int ans=0; for(int j=0;j<5;j++){ int tmp=0,cnt=0; for(int i=n-1;i>=0;i--){ tmp+=a[j][i]; if(tmp<=0) break; else cnt++; } ans=Math.max(ans,cnt); } System.out.println(ans); } public static void main(String[] args) { int T=1; T=sc.nextInt(); while(--T>=0) solve(); } }",cfba313d,"import java.io.*; import java.util.*; public class C { static class Code { private void solve(InputReader in, OutputWriter out) throws IOException { ArrayOpn o= new ArrayOpn(); int t = in.readInt(); while(t -- > 0) { int n=in.readInt(); int[][] freq= new int[5][n]; for(int i=0; i<n; i++) { char s[]= in.readString().toCharArray(); for(char e: s) { if(e=='a') { freq[0][i]++; } else { freq[0][i]--; } if(e=='b') { freq[1][i]++; } else { freq[1][i]--; } if(e=='c') { freq[2][i]++; } else { freq[2][i]--; } if(e=='d') { freq[3][i]++; } else { freq[3][i]--; } if(e=='e') { freq[4][i]++; } else { freq[4][i]--; } } } for(int i=0; i<5; i++) { Arrays.sort(freq[i]); } int ans=0; for(int i=0; i<5; i++) { int temp=0, count=0; for(int j=n-1; j>=0; j--) { temp+=freq[i][j]; if(temp<=0) { break; } count++; } ans=Math.max(ans, count); } out.printLine(ans); } out.close(); } } static class ArrayOpn{ static final Random random = new Random(); private void sort(int A[]) { int n = A.length; for(int i=0; i<n; i++) { int j = random.nextInt(n),temp = A[j]; A[j] = A[i]; A[i] = temp; } Arrays.sort(A); } } public static void main(String[] args) throws IOException { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); OutputWriter out = new OutputWriter(outputStream); Code solver = new Code(); solver.solve(in, out); out.flush(); out.close(); } }",0.5038506882705276,15,1
734a94be,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuffer res = new StringBuffer(); int tc = 1; while(tc-->0) { int n = sc.nextInt(); ArrayList<Integer> one = new ArrayList<>(); ArrayList<Integer> zero = new ArrayList<>(); for(int i=0;i<n;i++) { int x = sc.nextInt(); if(x==1) { one.add(i); } else { zero.add(i); } } int dp[][] = new int[one.size()+1][zero.size()+1]; for(int i=1;i<=one.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(zero.get(i-1)-one.get(i-1)); for(int j=i+1;j<=zero.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(one.get(i-1)-zero.get(j-1))); } } System.out.println(dp[one.size()][zero.size()]); } System.out.println(res); } }",cb87df79,"import java.util.*; public class Longjumps { public static void main(String[] args){ Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",0.73387210247073,19,1
734a94be,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuffer res = new StringBuffer(); int tc = 1; while(tc-->0) { int n = sc.nextInt(); ArrayList<Integer> one = new ArrayList<>(); ArrayList<Integer> zero = new ArrayList<>(); for(int i=0;i<n;i++) { int x = sc.nextInt(); if(x==1) { one.add(i); } else { zero.add(i); } } int dp[][] = new int[one.size()+1][zero.size()+1]; for(int i=1;i<=one.size();i++) { dp[i][i]=dp[i-1][i-1]+Math.abs(zero.get(i-1)-one.get(i-1)); for(int j=i+1;j<=zero.size();j++) { dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(one.get(i-1)-zero.get(j-1))); } } System.out.println(dp[one.size()][zero.size()]); } System.out.println(res); } }",f6ca6fc8,"import java.util.*; import java.io.*; public class D { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int n = sc.nextInt(); ArrayList<Integer> o=new ArrayList<Integer>(); ArrayList<Integer> e=new ArrayList<Integer>(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++){ dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } } System.out.println(dp[o.size()][e.size()]); } }",0.7426248159554432,19,1
7686c854,"import java.util.*; import java.util.function.BiFunction; import java.util.function.Function; import java.util.function.IntToLongFunction; import java.lang.*; import java.io.*; import java.math.*; public final class CF { public static void main(String[]args)throws IOException { FastReader ob=new FastReader(); int t=ob.nextInt(); StringBuffer sb=new StringBuffer(); while(t-->0) { int n=ob.nextInt(); PriorityQueue<Long> a=new PriorityQueue<>(); PriorityQueue<Long> b=new PriorityQueue<>(); long ans=Long.MAX_VALUE; long sum=0; for(int i=0;i<n;i++) { long x=ob.nextInt(); if(i%2==0) a.add(x); else b.add(x); sum+=x; if(i!=0) ans=Math.min(ans,sum+(a.peek()*(n-a.size()))+(b.peek()*(n-b.size()))); } sb.append(ans+""\n""); } System.out.println(sb); } }",8a729537,"import java.io.*; import java.util.*; public class test3 { public static void main(String[] args) throws IOException { FastReader f = new FastReader(); int t = f.nextInt(); while(t-->0) { int n = f.nextInt(); int C[] = new int[n]; long ans=Long.MAX_VALUE,pre = 0; PriorityQueue<Integer> epq = new PriorityQueue<Integer>(); PriorityQueue<Integer> opq = new PriorityQueue<Integer>(); for(int i = 0;i<n;i++) { C[i] = f.nextInt(); if(i%2==0)epq.add(C[i]); else opq.add(C[i]); pre+=C[i]; if(i>0) { ans = Math.min(ans,pre+ ((long)n-(long)epq.size())*(long)epq.peek() + ((long)n-(long)opq.size())*(long)opq.peek()); } } System.out.println(ans); } } }",0.5670743610645828,18,1
7686c854,"import java.util.*; import java.util.function.BiFunction; import java.util.function.Function; import java.util.function.IntToLongFunction; import java.lang.*; import java.io.*; import java.math.*; public final class CF { public static void main(String[]args)throws IOException { FastReader ob=new FastReader(); int t=ob.nextInt(); StringBuffer sb=new StringBuffer(); while(t-->0) { int n=ob.nextInt(); PriorityQueue<Long> a=new PriorityQueue<>(); PriorityQueue<Long> b=new PriorityQueue<>(); long ans=Long.MAX_VALUE; long sum=0; for(int i=0;i<n;i++) { long x=ob.nextInt(); if(i%2==0) a.add(x); else b.add(x); sum+=x; if(i!=0) ans=Math.min(ans,sum+(a.peek()*(n-a.size()))+(b.peek()*(n-b.size()))); } sb.append(ans+""\n""); } System.out.println(sb); } }",abd16ff0,"import java.util.*; public class Solve{ public static void main(String[] args){ Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0){ int n=sc.nextInt(); long ans=Long.MAX_VALUE; long pre=0; PriorityQueue<Long> epq=new PriorityQueue<>(); PriorityQueue<Long> opq=new PriorityQueue<>(); for(int i=0;i<n;i++){ long a=sc.nextInt(); if(i%2==0)opq.add(a); else epq.add(a); pre+=a; if(i>0) ans=Math.min(ans,pre+opq.peek()*(n-opq.size())+epq.peek()*(n-epq.size())); } System.out.println(ans); } } }",0.4823293950332596,18,1
7686c854,"import java.util.*; import java.util.function.BiFunction; import java.util.function.Function; import java.util.function.IntToLongFunction; import java.lang.*; import java.io.*; import java.math.*; public final class CF { public static void main(String[]args)throws IOException { FastReader ob=new FastReader(); int t=ob.nextInt(); StringBuffer sb=new StringBuffer(); while(t-->0) { int n=ob.nextInt(); PriorityQueue<Long> a=new PriorityQueue<>(); PriorityQueue<Long> b=new PriorityQueue<>(); long ans=Long.MAX_VALUE; long sum=0; for(int i=0;i<n;i++) { long x=ob.nextInt(); if(i%2==0) a.add(x); else b.add(x); sum+=x; if(i!=0) ans=Math.min(ans,sum+(a.peek()*(n-a.size()))+(b.peek()*(n-b.size()))); } sb.append(ans+""\n""); } System.out.println(sb); } }",edce3e39,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class CF { private static FS sc = new FS(); private static class extra { static int[] intArr(int size) { int[] a = new int[size]; for(int i = 0; i < size; i++) a[i] = sc.nextInt(); return a; } } static long count = 0; public static void main(String[] args) { int t = sc.nextInt(); StringBuilder ret = new StringBuilder(); while(t-- > 0) { int n = sc.nextInt(); int[] a = extra.intArr(n); PriorityQueue<Integer> c = new PriorityQueue<>(); PriorityQueue<Integer> d = new PriorityQueue<>(); long sum = 0; long min = Long.MAX_VALUE; for(int i = 0; i < n; i++) { sum += a[i]; if(i%2 == 0) c.add(a[i]); else d.add(a[i]); if(i != 0) { min = Math.min(min, sum + (n - c.size())*1L*c.peek() + (n-d.size())*1L*d.peek()); } } ret.append(min + ""\n""); } System.out.println(ret); } }",0.549164829320548,18,1
77d22fc3,"import java.io.*; import java.util.*; public class A { static int t = 0; static FastReader sc = new FastReader(); static OutputStream outputStream = System.out; static long ima = Integer.MAX_VALUE; private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } static int tt = 0; public static void main(String[] args) throws IOException { ADMIN_MODE(); t = sc.ni();while(t-->0) { tt++; solve(); } } static void solve() throws IOException { int n = sc.ni(); String s1 = sc.ns(); String s2 = sc.ns(); char[] strr = s1.toCharArray(); char[] strr2 = s2.toCharArray(); HashSet<Integer> lia = new HashSet<>(), lib = new HashSet<>(); for(int i = 0; i < n; i++) { if(strr[i]=='1') lia.add(i); else lib.add(i); } HashSet<Integer> liaa = new HashSet<>(); for(int i = 0; i < n; i++) { if(strr2[i]=='1') liaa.add(i); } if(!(lia.size() == liaa.size() || lib.size()+1 == liaa.size())) { System.out.println(-1); return; } int ac = 0, bc = 0; for(int i: lia) { if(liaa.contains(i)) ac++; } bc = liaa.size()-ac; if(lia.size() == liaa.size() && lia.size() == ac) { System.out.println(0); return; } int nac = lia.size()-ac; int nbc = lib.size()-bc; long ansa = ac != 0 && (ac-1 == nbc)? Math.abs(ac-1+nbc): ima; long ansb = nac != 0 && (nac-1 == bc-1)? Math.abs(nac-1+bc): ima; if(ansa == ima && ansb == ima) { System.out.println(-1); return; } System.out.println(Math.min(ansa, ansb)+1); } }",d3528b2a,"import java.io.*; import java.util.*; public class A { static int t = 0; static FastReader sc = new FastReader(); static OutputStream outputStream = System.out; static long ima = Integer.MAX_VALUE; private static void ADMIN_MODE() throws IOException { if (System.getProperty(""ONLINE_JUDGE"") == null) { sc = new FastReader(new FileInputStream(""input.txt"")); } } static int tt = 0; public static void main(String[] args) throws IOException { ADMIN_MODE(); t = sc.ni();while(t-->0) { tt++; solve(); } } static void solve() throws IOException { int n = sc.ni(); String s1 = sc.ns(); String s2 = sc.ns(); char[] strr = s1.toCharArray(); char[] strr2 = s2.toCharArray(); HashSet<Integer> lia = new HashSet<>(), lib = new HashSet<>(); for(int i = 0; i < n; i++) { if(strr[i]=='1') lia.add(i); else lib.add(i); } HashSet<Integer> liaa = new HashSet<>(); for(int i = 0; i < n; i++) { if(strr2[i]=='1') liaa.add(i); } if(!(lia.size() == liaa.size() || lib.size()+1 == liaa.size())) { System.out.println(-1); return; } int ac = 0, bc = 0; for(int i: lia) { if(liaa.contains(i)) ac++; } bc = liaa.size()-ac; if(lia.size() == liaa.size() && lia.size() == ac) { System.out.println(0); return; } int nac = lia.size()-ac; int nbc = lib.size()-bc; long ansa = ac != 0 && (ac-1 == nbc)? Math.abs(ac-1+nbc): ima; long ansb = nac != 0 && (nac-1 == bc-1)? Math.abs(nac-1+bc): ima; if(ansa == ima && ansb == ima) { System.out.println(-1); return; } System.out.println(Math.min(ansa, ansb)+1); } }",1.0,4,1
7c11511f,"import java.io.*; import java.util.*; public class Solution { public static void main(String[] args) throws Exception { int tc = io.nextInt(); for (int i = 0; i < tc; i++) { solve(); } io.close(); } private static void solve() throws Exception { int n = io.nextInt(); String a = io.next(); String b = io.next(); int zz = 0; int zo = 0; int oo = 0; int oz = 0; for (int i = 0; i < a.length(); i++) { if (a.charAt(i) == '1' && b.charAt(i) == '0') { oz++; } if (a.charAt(i) == '0' && b.charAt(i) == '0') { zz++; } if (a.charAt(i) == '1' && b.charAt(i) == '1') { oo++; } if (a.charAt(i) == '0' && b.charAt(i) == '1') { zo++; } } int ans = Integer.MAX_VALUE; if (oz == zo) { ans = Math.min(ans, oz + zo); } if (oo - 1 == zz) { ans = Math.min(ans, oo + zz); } if (ans == Integer.MAX_VALUE) { ans = -1; } io.println(ans); } public static FastIO io = new FastIO(); }",ca8f11a4,"import java.util.*; import java.util.stream.Collectors; import java.io.*; import java.math.*; public class GR18_C2 { public static FastScanner sc; public static StringBuilder sb ;public static int MOD= 1000000007; public static void solve(int t) throws IOException { int n=sc.nextInt(); String a=sc.next(); String b=sc.next(); int _00=0; int _01=0; int _10=0; int _11=0; for(int i=0;i<n;i++) { if(a.charAt(i)=='0' && b.charAt(i)=='0') _00++; if(a.charAt(i)=='0' && b.charAt(i)=='1') _01++; if(a.charAt(i)=='1' && b.charAt(i)=='0') _10++; if(a.charAt(i)=='1' && b.charAt(i)=='1') _11++; } int ans=Integer.MAX_VALUE; if(_01==_10) { ans=Math.min(ans, _10*2); } if(_00+1==_11) { ans=Math.min(ans, (_11-1)*2+1); } if(ans==Integer.MAX_VALUE) sb.append(-1).append('\n'); else sb.append(ans).append('\n'); } public static void main(String[] args) throws IOException { sb = new StringBuilder(""""); sc = new FastScanner(); int t=sc.nextInt(); for(int i=1;i<=t;i++){ solve(i); } System.out.println(sb); } }",0.5986552620371977,4,1
80881cae,"import java.io.*; import java.util.*; public class CP { static Scanner sc=new Scanner(System.in); public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } System.out.println(mana); } } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",a7e7f371,"import java.io.*; import java.util.*; public class cp { static int mod=(int)1e9+7; static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",0.9200455579056847,21,1
80881cae,"import java.io.*; import java.util.*; public class CP { static Scanner sc=new Scanner(System.in); public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } System.out.println(mana); } } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",ad4c7a20,"import java.io.*; import java.util.*; public class Practice { static int mod=1000000007; static final int size=501; static FastReader sc=new FastReader(System.in); static PrintWriter out=new PrintWriter(System.out); static long[] factorialNumInverse; static long[] naturalNumInverse; static int[] sp; static long[] fact; static ArrayList<Integer> pr; public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=1; t=sc.nextInt(); for(int i=1;i<=t;i++) solve(i); out.close(); out.flush(); } static void solve(int CASENO) throws IOException, CloneNotSupportedException { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",0.9130580580197716,21,1
80c384e4,"import java.util.*; public class Solution { private static Scanner in = new Scanner(System.in); public static void main(String[] args) { int t = in.nextInt(); while(t-- > 0) solve(); } private static void solve() { int n = in.nextInt(); int k = in.nextInt(); int a[] = new int[k+1]; for(int i=1; i<=k; i++) a[i] = in.nextInt(); long l[] = new long[n+1]; long r[] = new long[n+1]; for(int i=1; i<=n; i++) { l[i] = Integer.MAX_VALUE; r[i] = Integer.MAX_VALUE; } for(int i=1; i<=k; i++) { l[a[i]] = in.nextInt(); r[a[i]] = l[a[i]]; } for(int i=2;i<=n;i++) { l[i] = Math.min(l[i-1]+1, l[i]); } for(int i=n-1;i>=0;i--) { r[i] = Math.min(r[i+1]+1, r[i]); } for(int i=1;i<=n;i++) { System.out.print(Math.min(l[i], r[i])+"" ""); } System.out.println(); } }",967b67b0,"import java.util.*; public class Solution { private static Scanner in = new Scanner(System.in); public static void main(String[] args) { int t = in.nextInt(); while(t-- > 0) solve(); } private static void solve() { int n = in.nextInt(); int k = in.nextInt(); int a[] = new int[k+1]; for(int i=1; i<=k; i++) a[i] = in.nextInt(); long l[] = new long[n+1]; long r[] = new long[n+1]; for(int i=1; i<=n; i++) { l[i] = Integer.MAX_VALUE; r[i] = Integer.MAX_VALUE; } for(int i=1; i<=k; i++) { l[a[i]] = in.nextInt(); r[a[i]] = l[a[i]]; } for(int i=2;i<=n;i++) { l[i] = Math.min(l[i-1]+1, l[i]); } for(int i=n-1;i>=0;i--) { r[i] = Math.min(r[i+1]+1, r[i]); } for(int i=1;i<=n;i++) { System.out.print(Math.min(l[i], r[i])+"" ""); } System.out.println(); } }",1.0000000000000004,8,1
810fd282,"import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; public class Main { static int N=(int)2e5+10; static long[][] dp=new long[2][N]; static int[][] A=new int[2][N]; static ArrayList<ArrayList<Integer>> adj=new ArrayList<>(N); static { for(int i=0;i<N;i++) adj.add(new ArrayList<>()); } public static void dfs(int v,int p) { dp[0][v]=dp[1][v]=0; for(Integer u:adj.get(v)) { if(u==p) continue; dfs(u, v); dp[0][v]+=Math.max(Math.abs(A[0][v]-A[1][u])+dp[1][u], dp[0][u]+Math.abs(A[0][v]-A[0][u])); dp[1][v]+=Math.max(Math.abs(A[1][v]-A[1][u])+dp[1][u], dp[0][u]+Math.abs(A[1][v]-A[0][u])); } } public static void main(String[] args) throws Exception { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int t=Integer.parseInt(br.readLine()); while(t-->0) { int n=Integer.parseInt(br.readLine()); for(int i=1;i<=n;i++) { String[] ss1=br.readLine().split("" ""); A[0][i]=Integer.parseInt(ss1[0]); A[1][i]=Integer.parseInt(ss1[1]); adj.set(i, new ArrayList<>()); } for(int i=1;i<n;i++) { String[] ss2=br.readLine().split("" ""); int u=Integer.parseInt(ss2[0]); int v=Integer.parseInt(ss2[1]); adj.get(u).add(v); adj.get(v).add(u); } dfs(1, -1); System.out.println(Math.max(dp[0][1], dp[1][1])); } } }",ec558d69,"import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; public class Main { static int N=(int)2e5+10; static int[][] A=new int[2][N]; static long[][] dp=new long[2][N]; static ArrayList<ArrayList<Integer>> links=new ArrayList<>(N); static { for (int i=0;i<N;i++) links.add(new ArrayList<>()); } static void dfs(int v,int p) { dp[0][v]=dp[1][v]=0; for (Integer link :links.get(v)) { if (link==p) continue; dfs(link,v); dp[0][v]+=Math.max(Math.abs(A[0][v]-A[0][link])+dp[0][link],Math.abs(A[0][v]-A[1][link])+dp[1][link]); dp[1][v]+=Math.max(Math.abs(A[1][v]-A[0][link])+dp[0][link],Math.abs(A[1][v]-A[1][link])+dp[1][link]); } } public static void main (String[] args) throws Exception { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int t=Integer.parseInt(br.readLine()),n,i; while (t-->0) { n=Integer.parseInt(br.readLine()); for (i=1;i<=n;i++) { String[] in=br.readLine().split("" ""); A[0][i]=Integer.parseInt(in[0]); A[1][i]=Integer.parseInt(in[1]); links.set(i,new ArrayList<>()); } for (i=1;i<n;i++) { String[] in=br.readLine().split("" ""); int a=Integer.parseInt(in[0]); int b=Integer.parseInt(in[1]); links.get(a).add(b); links.get(b).add(a); } dfs(1,-1); System.out.println(Math.max(dp[0][1],dp[1][1])); } } }",0.7632975102883909,1,1
829d2024,"import java.util.*; import java.io.*; public class Main{ public static class Element implements Comparable<Element>{ public int key; public int value; Element(int k, int v) { key=k; value=v; } } public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int m=sc.nextInt(); int x=sc.nextInt(); int[] arr=new int[n]; for(int i=0;i<n;++i) arr[i]=sc.nextInt(); PriorityQueue<Element> pq=new PriorityQueue<>(); for(int i=1;i<=m;++i) { pq.add(new Element(i,0)); } System.out.println(""YES""); for(int j=0;j<n;j++) { Element cur = pq.poll(); System.out.print(cur.key+"" ""); cur.value+= arr[j]; pq.add(cur); } System.out.println(); } } }",8a20e743,"import java.io.*; import java.util.*; public class C { static class Pair{ int h,in; Pair(){} Pair(int in,int h){ this.in=in; this.h=h; } } static class customSort implements Comparator<Pair>{ } public static void main(String[] args) { FastReader sc=new FastReader(); StringBuffer ans=new StringBuffer(); int test=sc.nextInt(); while(test-->0) { int n=sc.nextInt(),m=sc.nextInt(),x=sc.nextInt(); int arr[]=new int[n]; int res[]=new int[n]; int sum =0; for(int i=0;i<n;i++) { arr[i]=sc.nextInt();sum+=arr[i]; } PriorityQueue<Pair> pq=new PriorityQueue<>(new customSort()); for(int i=1;i<=m;i++) { pq.add(new Pair(i,0)); } ans.append(""YES\n""); for(int a:arr) { Pair xx=pq.poll(); ans.append(xx.in+"" ""); xx.h+=a; pq.add(xx); } ans.append(""\n""); } System.out.print(ans); } static final Random random=new Random(); }",0.6054317334026771,9,1
829d2024,"import java.util.*; import java.io.*; public class Main{ public static class Element implements Comparable<Element>{ public int key; public int value; Element(int k, int v) { key=k; value=v; } } public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int m=sc.nextInt(); int x=sc.nextInt(); int[] arr=new int[n]; for(int i=0;i<n;++i) arr[i]=sc.nextInt(); PriorityQueue<Element> pq=new PriorityQueue<>(); for(int i=1;i<=m;++i) { pq.add(new Element(i,0)); } System.out.println(""YES""); for(int j=0;j<n;j++) { Element cur = pq.poll(); System.out.print(cur.key+"" ""); cur.value+= arr[j]; pq.add(cur); } System.out.println(); } } }",9852706b,"import java.io.BufferedReader; import java.io.DataInputStream; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main { static int modulo=998244353; public static void main(String[] args) { FastScanner in = new FastScanner(); int test=in.nextInt(); while(test-->0){ int n=in.nextInt(); int m=in.nextInt(); int x=in.nextInt(); PriorityQueue<pair> pq=new PriorityQueue<>(); int arr[]=new int[n]; for(int i=1;i<=m;i++){ pq.add(new pair(i,0)); } System.out.println(""YES""); for(int i=0;i<n;i++){ pair p=pq.poll(); int a=in.nextInt(); p.y+=a; pq.add(p); System.out.print(p.x+"" ""); } System.out.println(); } } } class pair implements Comparable<pair> { int x; int y; pair(int x, int y) { this.x = x; this.y = y; } }",0.6366820671787902,9,1
873828f7,"import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0) { int n=sc.nextInt(); int[] c=new int[n]; for(int i=0;i<n;i++) c[i]=sc.nextInt(); int[] mn= {Integer.MAX_VALUE,Integer.MAX_VALUE}; long[] rem= {(long)n,(long)n}; long sum=0; long ans=Long.MAX_VALUE; for(int i=0;i<n;i++) { mn[i%2]=Math.min(mn[i%2], c[i]); rem[i%2]--; sum+=c[i]; if(i>0) { long cur=sum+rem[0]*mn[0]+rem[1]*mn[1]; ans=Math.min(ans, cur); } } System.out.println(ans); } } }",ac8acb97,"import java.util.Scanner; public class C1499 { public static void main(String[] args) { Scanner in = new Scanner(System.in); int t = in.nextInt(); while (t-- > 0) { int n = in.nextInt(); long[] mn = { Long.MAX_VALUE, Long.MAX_VALUE }; long[] rem = { n, n }; long sum = 0; long ans = Long.MAX_VALUE; for (int i = 0; i < n; i++) { int temp = in.nextInt(); mn[i % 2] = Math.min(mn[i % 2], temp); rem[i % 2]--; sum += temp; if (i > 0) { long cur = sum + rem[0] * mn[0] + rem[1] * mn[1]; ans = Math.min(ans, cur); } } System.out.println(ans); } } }",0.8336969392832947,18,1
8a39dbf5,"import java.util.*; import java.lang.*; import java.io.*; public class Codeforces { public static void main(String[] args) throws java.lang.Exception { BufferedReader buf = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(buf.readLine()); StringBuilder sb = new StringBuilder(); for (int i = 0; i < t; i++) { String st=buf.readLine(); String st1[]=(buf.readLine()).split("" ""); int n=Integer.parseInt(st1[0]); int k=Integer.parseInt(st1[1]); int a[]=new int[k]; int temp[]=new int[k]; long arr[]=new long[n]; String st2[]=(buf.readLine()).split("" ""); String st3[]=(buf.readLine()).split("" ""); for(int j=0;j<k;j++) { a[j]=Integer.parseInt(st2[j]); temp[j]=Integer.parseInt(st3[j]); } for(int j=0;j<k;j++) { arr[a[j]-1]=temp[j]; } long min=Integer.MAX_VALUE; long left[]=new long[n]; long right[]=new long[n]; if(arr[0]==0) left[0]=min; else left[0]=arr[0]; for(int j=1;j<n;j++) { if(arr[j]==0) { left[j]=left[j-1]+1; } else { left[j]=Math.min(left[j-1]+1,arr[j]); } } if(arr[n-1]==0) right[n-1]=min; else right[n-1]=arr[n-1]; for(int j=n-2;j>=0;j--) { if(arr[j]==0) { right[j]=right[j+1]+1; } else { right[j]=Math.min(right[j+1]+1,arr[j]); } } for(int j=0;j<n;j++) { arr[j]=Math.min(left[j],right[j]); sb.append(arr[j]+"" ""); } sb.append(""\n""); } System.out.println(sb); } }",ff3283cf,"import java.util.*; import java.lang.*; import java.io.*; public class Codeforces { public static void main(String[] args) throws java.lang.Exception { BufferedReader buf = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(buf.readLine()); StringBuilder sb = new StringBuilder(); for (int i = 0; i < t; i++) { String st=buf.readLine(); String st1[]=(buf.readLine()).split("" ""); int n=Integer.parseInt(st1[0]); int k=Integer.parseInt(st1[1]); int a[]=new int[k]; int temp[]=new int[k]; long arr[]=new long[n]; String st2[]=(buf.readLine()).split("" ""); String st3[]=(buf.readLine()).split("" ""); for(int j=0;j<k;j++) { a[j]=Integer.parseInt(st2[j]); temp[j]=Integer.parseInt(st3[j]); } for(int j=0;j<k;j++) { arr[a[j]-1]=temp[j]; } long min=Integer.MAX_VALUE; long left[]=new long[n]; long right[]=new long[n]; if(arr[0]==0) left[0]=min; else left[0]=arr[0]; for(int j=1;j<n;j++) { if(arr[j]==0) { left[j]=left[j-1]+1; } else { left[j]=Math.min(left[j-1]+1,arr[j]); } } if(arr[n-1]==0) right[n-1]=min; else right[n-1]=arr[n-1]; for(int j=n-2;j>=0;j--) { if(arr[j]==0) { right[j]=right[j+1]+1; } else { right[j]=Math.min(right[j+1]+1,arr[j]); } } for(int j=0;j<n;j++) { arr[j]=Math.min(left[j],right[j]); sb.append(arr[j]+"" ""); } sb.append(""\n""); } System.out.println(sb); } }",1.0,8,1
8a5fe3d9,"import java.io.*; import java.util.*; import java.text.*; import java.math.*; public class Main { static class pair implements Comparable<pair>{ int sum, index; pair(int i){ sum = 0; index = i; } } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb = new StringBuilder(); int t = Integer.parseInt(br.readLine()); while(t-- > 0){ StringTokenizer st = new StringTokenizer(br.readLine()); int n = Integer.parseInt(st.nextToken()); int m = Integer.parseInt(st.nextToken()); int x = Integer.parseInt(st.nextToken()); int ar[] = new int[n]; st = new StringTokenizer(br.readLine()); int sum = 0, low = x; for(int i = 0; i < n; i++){ ar[i] = Integer.parseInt(st.nextToken()); } PriorityQueue<pair> q = new PriorityQueue<pair>(); for(int i = 0; i < m; i++) q.add(new pair(i + 1)); sb.append(""YES\n""); for(int i = 0; i < n; i++){ pair p = q.poll(); p.sum += ar[i]; q.add(p); sb.append(p.index + "" ""); } sb.append(""\n""); } System.out.print(sb); } }",ea899386,"import java.io.*; import java.util.*; public class Codeforces { public static class Tower implements Comparable<Tower>{ int val; int index; public Tower(int ind, int v) { val = v; index = ind; } } public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int cases = Integer.parseInt(br.readLine()); while(cases-- > 0) { String[] str = br.readLine().split("" ""); int n = Integer.parseInt(str[0]); int m = Integer.parseInt(str[1]); int x = Integer.parseInt(str[2]); int[] h = new int[n]; str = br.readLine().split("" ""); for(int i=0; i<n; i++) { h[i] = Integer.parseInt(str[i]); } PriorityQueue<Tower> q = new PriorityQueue<>(m); int[] ans = new int[n]; for(int i=0; i<m; i++) { q.add(new Tower(i, h[i])); ans[i] = i; } for(int i=m; i<n; i++) { Tower lowest = q.poll(); lowest.val += h[i]; ans[i] = lowest.index; q.add(lowest); } System.out.println(""YES""); for(int i=0; i<n; i++) { System.out.print((ans[i]+1) + "" ""); } System.out.println(); } } }",0.5581982908596822,9,1
8a729537,"import java.io.*; import java.util.*; public class test3 { public static void main(String[] args) throws IOException { FastReader f = new FastReader(); int t = f.nextInt(); while(t-->0) { int n = f.nextInt(); int C[] = new int[n]; long ans=Long.MAX_VALUE,pre = 0; PriorityQueue<Integer> epq = new PriorityQueue<Integer>(); PriorityQueue<Integer> opq = new PriorityQueue<Integer>(); for(int i = 0;i<n;i++) { C[i] = f.nextInt(); if(i%2==0)epq.add(C[i]); else opq.add(C[i]); pre+=C[i]; if(i>0) { ans = Math.min(ans,pre+ ((long)n-(long)epq.size())*(long)epq.peek() + ((long)n-(long)opq.size())*(long)opq.peek()); } } System.out.println(ans); } } }",abd16ff0,"import java.util.*; public class Solve{ public static void main(String[] args){ Scanner sc=new Scanner(System.in); int t=sc.nextInt(); while(t-->0){ int n=sc.nextInt(); long ans=Long.MAX_VALUE; long pre=0; PriorityQueue<Long> epq=new PriorityQueue<>(); PriorityQueue<Long> opq=new PriorityQueue<>(); for(int i=0;i<n;i++){ long a=sc.nextInt(); if(i%2==0)opq.add(a); else epq.add(a); pre+=a; if(i>0) ans=Math.min(ans,pre+opq.peek()*(n-opq.size())+epq.peek()*(n-epq.size())); } System.out.println(ans); } } }",0.7992122042047859,18,1
8a729537,"import java.io.*; import java.util.*; public class test3 { public static void main(String[] args) throws IOException { FastReader f = new FastReader(); int t = f.nextInt(); while(t-->0) { int n = f.nextInt(); int C[] = new int[n]; long ans=Long.MAX_VALUE,pre = 0; PriorityQueue<Integer> epq = new PriorityQueue<Integer>(); PriorityQueue<Integer> opq = new PriorityQueue<Integer>(); for(int i = 0;i<n;i++) { C[i] = f.nextInt(); if(i%2==0)epq.add(C[i]); else opq.add(C[i]); pre+=C[i]; if(i>0) { ans = Math.min(ans,pre+ ((long)n-(long)epq.size())*(long)epq.peek() + ((long)n-(long)opq.size())*(long)opq.peek()); } } System.out.println(ans); } } }",e270e909,"import java.io.*; import java.util.*; public class GFG { public static void main (String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-- > 0){ int n = sc.nextInt(); long pre = 0,ans = Long.MAX_VALUE; long[] arr = new long[n]; PriorityQueue<Long> epq = new PriorityQueue<>(); PriorityQueue<Long> opq = new PriorityQueue<>(); for(int i=0;i<n;i++) { arr[i] = sc.nextLong(); if(i%2==0) epq.add(arr[i]); else opq.add(arr[i]); pre+=arr[i]; if(i>0) ans = Math.min(ans,pre+(n-epq.size())*epq.peek()+(n-opq.size())*opq.peek()); } System.out.println(ans); } } }",0.7308706280063363,18,1
8aadde13,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Scanner; import java.util.StringTokenizer; import java.util.TreeSet; public class A { public static void main(String args[]) throws Exception { FastScanner sc = new FastScanner(); int T = 1; T = sc.nextInt(); PrintWriter pw = new PrintWriter(System.out); while (T-- > 0) { solve(sc, pw); } pw.close(); } public static void solve(FastScanner sc, PrintWriter pw) throws Exception { int n = sc.nextInt(); int[] arr = new int[n]; for(int i=0;i<n;i++){ arr[i]=sc.nextInt(); } if(check(arr)) pw.println(""YES""); else pw.println(""NO""); } public static boolean check(int[] arr){ int n=arr.length; TreeSet<Integer> S = new TreeSet<>(); S.add(arr[0]); for(int i=1;i<n;i++) { S.add(arr[i]); if (arr[i] == arr[i - 1]) continue; Integer lb = S.lower(arr[i]); if (lb != null && lb == arr[i - 1]) continue; Integer ub = S.higher(arr[i]); if (ub != null && ub == arr[i - 1]) continue; return false; } return true; } }",fb20d298,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { FastScanner sc = new FastScanner(); PrintWriter out = new PrintWriter(System.out); int t=sc.nextInt(); while(t-- >0) { int n = sc.nextInt(); int b[] = sc.readArray(n); TreeSet<Integer> set = new TreeSet<>(); boolean f = true; set.add(b[0]); for(int i=1 ; i<n ; i++) { set.add(b[i]); if(b[i-1]==b[i]) { continue; } Integer find = set.lower(b[i]); if(find!=null && find==b[i-1]) { continue; } find = set.higher(b[i]); if(find!=null && find==b[i-1]) { continue; } f = false; break; } if(f == false) { out.println(""NO""); } else out.println(""YES""); } out.flush(); out.close(); } }",0.4124108532867984,11,1
8b490132,"import java.io.DataInputStream; import java.io.IOException; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.util.TreeSet; public class Main { private static void run() throws IOException { int n = in.nextInt(); long[] b = new long[n]; for (int i = 0; i < n; i++) { b[i] = in.nextInt(); } TreeSet<Long> set = new TreeSet<>(); set.add(b[0]); long last = b[0]; long left = Long.MIN_VALUE; long right = Long.MAX_VALUE; boolean flag = true; for (int i = 1; i < n; i++) { if (b[i] > last) { set.add(right--); long pre_next = set.higher(last); if (pre_next < b[i]) { flag = false; break; } else if (pre_next == b[i]) { set.add(right--); } else { set.add(b[i]); } } else if (b[i] < last) { set.add(left++); long pre_next = set.lower(last); if (pre_next > b[i]) { flag = false; break; } else if (pre_next == b[i]) { set.add(left++); } else { set.add(b[i]); } } else { set.add(left++); set.add(right--); } last = b[i]; } if (flag) { out.println(""YES""); } else { out.println(""NO""); } } public static void main(String[] args) throws IOException { in = new Reader(); out = new PrintWriter(new OutputStreamWriter(System.out)); int t = in.nextInt(); for (int i = 0; i < t; i++) { run(); } out.flush(); in.close(); out.close(); } static final long mod = 1000000007; @SuppressWarnings(""FieldCanBeLocal"") private static Reader in; private static PrintWriter out; }",db09b3f9,"import java.io.DataInputStream; import java.io.IOException; import java.io.OutputStreamWriter; import java.io.PrintWriter; import java.util.TreeSet; public class Main { private static void run() throws IOException { int n = in.nextInt(); long[] b = new long[n]; for (int i = 0; i < n; i++) { b[i] = in.nextInt(); } TreeSet<Long> set = new TreeSet<>(); set.add(b[0]); long last = b[0]; long left = Long.MIN_VALUE; long right = Long.MAX_VALUE; boolean flag = true; for (int i = 1; i < n; i++) { if (b[i] > last) { set.add(right--); long pre_next = set.higher(last); if (pre_next < b[i]) { flag = false; break; } else if (pre_next == b[i]) { set.add(right--); } else { set.add(b[i]); } } else if (b[i] < last) { set.add(left++); long pre_next = set.lower(last); if (pre_next > b[i]) { flag = false; break; } else if (pre_next == b[i]) { set.add(left++); } else { set.add(b[i]); } } else { set.add(left++); set.add(right--); } last = b[i]; } if (flag) { out.println(""YES""); } else { out.println(""NO""); } } public static void main(String[] args) throws IOException { in = new Reader(); out = new PrintWriter(new OutputStreamWriter(System.out)); int t = in.nextInt(); for (int i = 0; i < t; i++) { run(); } out.flush(); in.close(); out.close(); } static final long mod = 1000000007; @SuppressWarnings(""FieldCanBeLocal"") private static Reader in; private static PrintWriter out; }",0.9999999999999999,11,1
8d9871a9,"import java.util.*; public class Main { static Scanner scan = new Scanner(System.in); static int[] readArray(int[] x) { for(int i=0; i<x.length; ++i) x[i] = scan.nextInt(); return x; } static long[] readArray(long[] x) { for(int i=0; i<x.length; ++i) x[i] = scan.nextLong(); return x; } public static void main(String[] args) { int t = scan.nextInt(); for(int it=0; it<t; ++it) { int n = scan.nextInt(); long[] aa = readArray(new long[n]); long minEven = aa[0]; long minOdd = aa[1]; long sum = aa[0]+aa[1]; long best = n*minEven + n*minOdd; int numOdd = 1; int numEven = 1; for(int i=2; i<n; ++i) { if(i%2 == 0) { minEven = Math.min(aa[i], minEven); numEven++; }else { minOdd = Math.min(aa[i], minOdd); numOdd++; } sum += aa[i]; long score = sum; score += minEven*(n-numEven); score += minOdd*(n-numOdd); best = Math.min(best, score); } System.out.println(best); } } }",e431de28,"import java.io.*; import java.lang.*; import java.util.*; public class MinGridPath { public static void main(String[] args) { Scanner s=new Scanner(System.in); int t=s.nextInt(); while(t-->0){ int n = s.nextInt(); long[] aa =new long[n]; for(int i=0;i<n;i++) aa[i]=s.nextLong(); long minEven = aa[0]; long minOdd = aa[1]; long sum = aa[0]+aa[1]; long best = n*minEven + n*minOdd; int numOdd = 1; int numEven = 1; for(int i=2; i<n; ++i) { if(i%2 == 0) { minEven = Math.min(aa[i], minEven); numEven++; }else { minOdd = Math.min(aa[i], minOdd); numOdd++; } sum += aa[i]; long score = sum; score += minEven*(n-numEven); score += minOdd*(n-numOdd); best = Math.min(best, score); } System.out.println(best); } } }",0.8501102802464608,18,1
8f30bfc3,"import java.io.BufferedWriter; import java.io.IOException; import java.io.InputStream; import java.io.OutputStreamWriter; import java.util.ArrayList; import java.util.InputMismatchException; import java.util.List; import java.util.StringJoiner; public class Solution { private static List<Long> chairs; private static List<Long> folks; private static Long[] data; private static Long[][] cache; public static void main(String[] args) { Print print = new Print(); Scan scan = new Scan(); int n = scan.scanInt(); data = scan.scan1dLongArray(); chairs = new ArrayList<>(); folks = new ArrayList<>(); cache = new Long[n][n]; for (int i = 0; i < n; i++) { if (data[i] == 0) { chairs.add((long) i); } else { folks.add((long) i); } } print.printLine(Long.toString(solve(folks, chairs, 0, 0))); print.close(); } private static long solve(List<Long> folks, List<Long> chairs, int i, int j) { if (i == folks.size()) { return 0; } if (j == chairs.size()) { return Integer.MAX_VALUE; } if (cache[i][j] != null) { return cache[i][j]; } return cache[i][j] = Math .min(Math.abs(folks.get(i) - chairs.get(j)) + solve(folks, chairs, i + 1, j + 1), solve(folks, chairs, i, j + 1)); } static class Scan { private byte[] buf = new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in = System.in; } public int scan() { if (total < 0) { throw new InputMismatchException(); } if (index >= total) { index = 0; try { total = in.read(buf); } catch (IOException ignored) { } if (total <= 0) { return -1; } } return buf[index++]; } public int scanInt() { int integer = 0; int n = scan(); while (isWhiteSpace(n)) { n = scan(); } int neg = 1; if (n == '-') { neg = -1; n = scan(); } while (!isWhiteSpace(n)) { if (n >= '0' && n <= '9') { integer *= 10; integer += n - '0'; n = scan(); } else { throw new InputMismatchException(); } } return neg * integer; } public Long[] scan1dLongArray() { String[] s = this.scanString().split("" ""); Long[] arr = new Long[s.length]; for (int i = 0; i < s.length; i++) { arr[i] = Long.parseLong(s[i]); } return arr; } public String scanString() { StringBuilder sb = new StringBuilder(); int n = scan(); while (isWhiteSpace(n)) { n = scan(); } while (!isWhiteSpace(n)) { sb.append((char) n); n = scan(); } return sb.toString(); } private boolean isWhiteSpace(int n) { if (n == '\n' || n == '\r' || n == '\t' || n == -1) { return true; } return false; } } }",af1b152e,"import java.io.BufferedWriter; import java.io.IOException; import java.io.InputStream; import java.io.OutputStreamWriter; import java.util.ArrayList; import java.util.InputMismatchException; import java.util.List; import java.util.StringJoiner; public class D { private static List<Long> chairs; private static List<Long> folks; private static Long[] data; private static Long[][] cache; public static void main(String[] args) { Print print = new Print(); Scan scan = new Scan(); int n = scan.scanInt(); data = scan.scan1dLongArray(); chairs = new ArrayList<>(); folks = new ArrayList<>(); cache = new Long[n][n]; for (int i = 0; i < n; i++) { if (data[i] == 0) { chairs.add((long) i); } else { folks.add((long) i); } } print.printLine(Long.toString(solve(folks, chairs, 0, 0))); print.close(); } private static long solve(List<Long> folks, List<Long> chairs, int i, int j) { if (i == folks.size()) { return 0; } if (j == chairs.size()) { return Integer.MAX_VALUE; } if (cache[i][j] != null) { return cache[i][j]; } return cache[i][j] = Math .min(Math.abs(folks.get(i) - chairs.get(j)) + solve(folks, chairs, i + 1, j + 1), solve(folks, chairs, i, j + 1)); } static class Scan { private byte[] buf = new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in = System.in; } public int scan() { if (total < 0) { throw new InputMismatchException(); } if (index >= total) { index = 0; try { total = in.read(buf); } catch (IOException ignored) { } if (total <= 0) { return -1; } } return buf[index++]; } public int scanInt() { int integer = 0; int n = scan(); while (isWhiteSpace(n)) { n = scan(); } int neg = 1; if (n == '-') { neg = -1; n = scan(); } while (!isWhiteSpace(n)) { if (n >= '0' && n <= '9') { integer *= 10; integer += n - '0'; n = scan(); } else { throw new InputMismatchException(); } } return neg * integer; } public Long[] scan1dLongArray() { String[] s = this.scanString().split("" ""); Long[] arr = new Long[s.length]; for (int i = 0; i < s.length; i++) { arr[i] = Long.parseLong(s[i]); } return arr; } public String scanString() { StringBuilder sb = new StringBuilder(); int n = scan(); while (isWhiteSpace(n)) { n = scan(); } while (!isWhiteSpace(n)) { sb.append((char) n); n = scan(); } return sb.toString(); } private boolean isWhiteSpace(int n) { if (n == '\n' || n == '\r' || n == '\t' || n == -1) { return true; } return false; } } }",0.9994716897950299,19,1
8f6421f3,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; public class Main{ public static void main (String[] args){ FastReader s = new FastReader(); int t=1;t=s.ni(); for(int test=1;test<=t;test++){ int n=s.ni(),k=s.ni(); int position[]=s.readArray(k),temp[]=s.readArray(k); int ans[]=new int[n]; Arrays.fill(ans,Integer.MAX_VALUE/2); for(int i=0;i<k;i++){ ans[position[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",bdfe8110,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class E { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",0.4718486629479799,8,1
8f6421f3,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; public class Main{ public static void main (String[] args){ FastReader s = new FastReader(); int t=1;t=s.ni(); for(int test=1;test<=t;test++){ int n=s.ni(),k=s.ni(); int position[]=s.readArray(k),temp[]=s.readArray(k); int ans[]=new int[n]; Arrays.fill(ans,Integer.MAX_VALUE/2); for(int i=0;i<k;i++){ ans[position[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++) System.out.print(ans[i]+"" ""); System.out.println(); } } }",ea2fc2bc,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.Random; import java.util.StringTokenizer; public class AirConditioner { public static void main(String args[]) { FastScanner fs=new FastScanner(); int t=fs.nextInt(); for(int t1=0;t1<t;t1++) { int n=fs.nextInt(); int k=fs.nextInt(); int []arr1=new int[k]; int []arr2=new int[k]; arr1=fs.readArray(k); arr2=fs.readArray(k); int []dp=new int[n]; Arrays.fill(dp,Integer.MAX_VALUE/2); for(int i=0;i<k;i++) { dp[arr1[i]-1]=arr2[i]; } for(int i=1;i<n;i++) { dp[i]=Math.min(dp[i],dp[i-1]+1); } for(int i=n-2;i>=0;i--) { dp[i]=Math.min(dp[i], dp[i+1]+1); } for(int val:dp) { System.out.print(val+"" ""); } System.out.println(); } } static final Random random=new Random(); }",0.4769665213593993,8,1
921b6e4a,"import java.io.*; import java.util.*; public class D_Java { public static final int MOD = 998244353; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } int[] f; int[] rf; public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n-k], rf[k])); } public static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } public static int inv(int a) { return pow(a, MOD-2); } public void doIt() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer tok = new StringTokenizer(in.readLine()); int n = Integer.parseInt(tok.nextToken()); int k = Integer.parseInt(tok.nextToken()); f = new int[n+42]; rf = new int[n+42]; f[0] = rf[0] = 1; for (int i = 1; i < f.length; ++i) { f[i] = mul(f[i-1], i); rf[i] = mul(rf[i-1], inv(i)); } int[] events = new int[2*n]; for (int i = 0; i < n; ++i) { tok = new StringTokenizer(in.readLine()); int le = Integer.parseInt(tok.nextToken()); int ri = Integer.parseInt(tok.nextToken()); events[i] = le*2; events[i + n] = ri*2 + 1; } Arrays.sort(events); int ans = 0; int balance = 0; for (int r = 0; r < 2*n;) { int l = r; while (r < 2*n && events[l] == events[r]) { ++r; } int added = r - l; if (events[l] % 2 == 0) { ans += C(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else { balance -= added; } } in.close(); System.out.println(ans); } public static void main(String[] args) throws IOException { (new D_Java()).doIt(); } }",e7dce35b,"import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { br = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(System.out); int n = nextInt(); int k = nextInt(); f = new int[n + 42]; rf = new int[n + 42]; f[0] = 1; rf[0] = 1; for (int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); rf[i] = mul(rf[i - 1], inv(i)); } int[] a = new int[n * 2]; for (int i = 0; i < n; i++) { a[i] = nextInt() * 2; a[i + n] = nextInt() * 2 + 1; } Arrays.sort(a); int ans = 0; int curOpen = 0; for (int r = 0; r < 2 * n;) { int l = r; while (r < 2 * n && a[l] == a[r]) r++; int intersections = r - l; if (a[l] % 2 == 0) { ans += C(curOpen + intersections, k); if (ans >= mod) ans -= mod; ans += mod - C(curOpen, k); if (ans >= mod) ans -= mod; curOpen += intersections; } else { curOpen -= intersections; } } pw.println(ans); pw.close(); } static int mod = 998244353; static int mul(int a, int b) { return (int) ((long) a * (long) b % mod); } static int[] f; static int[] rf; static int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(rf[n - k], rf[k])); } static int pow(int a, int n) { int res = 1; while (n != 0) { if ((n & 1) == 1) { res = mul(res, a); } a = mul(a, a); n >>= 1; } return res; } static int inv(int a) { return pow(a, mod - 2); } static StringTokenizer st = new StringTokenizer(""""); static BufferedReader br; static String next() throws IOException { while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine()); return st.nextToken(); } static int nextInt() throws IOException { return Integer.parseInt(next()); } }",0.8162206200291916,14,1
9261620f,"import java.util.*; public class Main { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n =sc.nextInt(); long[] arr = new long[n]; for(int i=0;i<n;i++){ arr[i] =sc.nextLong(); } Map<Long, Long> map = new HashMap<>(); List<Long> list = new ArrayList<>(); list.add((long)0); for(int i=0;i<n;i++){ int s = list.size(); for(int j=0;j<s;j++){ list.add(list.get(j)+arr[i]); } } int flag = 0; for(int i=0;i<list.size();i++){ map.put(list.get(i), map.getOrDefault(list.get(i), (long)0)+1); if(map.get(list.get(i))>1){ flag = 1; break; } } if(flag>0) System.out.println(""YES""); else System.out.println(""NO""); } } }",f0881ab5,"import java.util.*; public class Main { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0){ int n =sc.nextInt(); long[] arr = new long[n]; for(int i=0;i<n;i++){ arr[i] =sc.nextLong(); } Map<Long, Long> map = new HashMap<>(); List<Long> list = new ArrayList<>(); list.add((long)0); for(int i=0;i<n;i++){ int s = list.size(); for(int j=0;j<s;j++){ list.add(list.get(j)+arr[i]); } } int flag = 0; for(int i=0;i<list.size();i++){ map.put(list.get(i), map.getOrDefault(list.get(i), (long)0)+1); if(map.get(list.get(i))>1){ flag = 1; break; } } if(flag>0) System.out.println(""YES""); else System.out.println(""NO""); } } }",1.0000000000000002,7,1
927384f2,"import java.util.*; import java.io.*; public class Main{ public static void main(String[] args) throws IOException{ BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); int n = pint(in); Stack<Integer> min = new Stack<Integer>(); Stack<Integer> max = new Stack<Integer>(); int[] a = new int[n]; int[] dp = new int[n]; StringTokenizer st = new StringTokenizer(in.readLine()); a[0] = pint(st); min.add(0); max.add(0); for(int i = 1; i < n; i++) { a[i] = pint(st); int h = dp[i - 1] + 1; while(!max.isEmpty() && a[i] > a[max.peek()]) { int k = a[max.peek()]; h = Math.min(h, dp[max.pop()] + 1); while(!max.isEmpty() && a[max.peek()] == k) {max.pop();} } if(!max.isEmpty()) { h = Math.min(h, dp[max.peek()] + 1); } while(!min.isEmpty() && a[i] < a[min.peek()]) { int k = a[min.peek()]; h = Math.min(h, dp[min.pop()] + 1); while(!min.isEmpty() && a[min.peek()] == k) {min.pop();} } if(!min.isEmpty()) { h = Math.min(h, dp[min.peek()] + 1); } dp[i] = h; min.add(i); max.add(i); } System.out.println(dp[n - 1]); } static int pint(BufferedReader in) throws IOException {return Integer.parseInt(in.readLine());} static int pint(StringTokenizer st) {return Integer.parseInt(st.nextToken());} }",b2bae06a,"import java.util.*; import java.io.*; public class D{ static int mod = (int)(1e9+7); public static void main(String[] args) { InputReader in = new InputReader(System.in); OutputWriter out = new OutputWriter(System.out); int n = in.nextInt(); int[] arr = in.nextIntArray(n); Stack<Integer> min = new Stack<>(); Stack<Integer> max = new Stack<>(); int[] dp = new int[n]; dp[0] = 0; min.push(0); max.push(0); for(int i=1;i<n;i++) { int h=dp[i-1]+1; while(!max.isEmpty() && arr[i]>arr[max.peek()]) { int x = arr[max.peek()]; h = Math.min(h,1+dp[max.pop()]); while(!max.isEmpty() && arr[max.peek()]==x) { max.pop(); } } if(!max.isEmpty()) { h = Math.min(h,1+dp[max.peek()]); } while(!min.isEmpty() && arr[i]<arr[min.peek()]) { int x = arr[min.peek()]; h = Math.min(h,1+dp[min.pop()]); while(!min.isEmpty() && arr[min.peek()]==x) { min.pop(); } } if(!min.isEmpty()) { h = Math.min(h,1+dp[min.peek()]); } dp[i] = h; min.push(i); max.push(i); } out.printLine(dp[n-1]); out.flush(); out.close(); } }",0.7826737663383538,6,1
9291ca83,"import java.math.BigDecimal; import java.math.BigInteger; import java.util.*; public class Practice { static HashMap<String, Integer> map = new HashMap<>(); public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); int[][] occurances = new int[5][n]; for(int i=0;i<n;i++){ String s = sc.next(); int[] count = new int[5]; int len = s.length(); for(int j=0;j<s.length();j++){ count[s.charAt(j)-'a']++; } for(int j=0;j<5;j++){ occurances[j][i] = count[j] - (len-count[j]); } } int ans = 0; for(int i=0;i<5;i++){ Arrays.sort(occurances[i]); int tmpAns = 0; int tmpSum=0; for(int j=n-1;j>=0;j--){ tmpSum+=occurances[i][j]; if(tmpSum>0) tmpAns++; else break; } ans = Math.max(ans, tmpAns); } System.out.println(ans); } } }",b185d034,"import java.io.*; import java.util.*; public class A734C { public static void main(String[] args) { JS scan = new JS(); int t = scan.nextInt(); loop:while(t-->0){ int n = scan.nextInt(); String[] arr= new String[n]; Integer[][] counts = new Integer[5][n]; for(int i = 0;i<5;i++){ for(int j = 0;j<n;j++){ counts[i][j] = 0; } } for(int i =0;i<n;i++){ arr[i] = scan.next(); int[] freq =new int[5]; for(int j = 0;j<arr[i].length();j++){ freq[arr[i].charAt(j)-'a']++; } for(int j = 0;j<5;j++){ counts[j][i] = freq[j]-(arr[i].length()-freq[j]); } } int best = 0; for(int i = 0;i<5;i++){ Arrays.sort(counts[i]); int curr = 0; int extra = 0; for(int j = n-1;j>=0;j--){ extra+=counts[i][j]; if(extra>0)curr++; } best = Math.max(best,curr); } System.out.println(best); } } }",0.5814728474948635,15,1
9399204d,"import java.io.*; import java.util.*; import java.math.*; import java.math.BigInteger; public final class A { static PrintWriter out = new PrintWriter(System.out); static StringBuilder ans=new StringBuilder(); static FastReader in=new FastReader(); public static void main(String args[])throws IOException { int T=i(); outer:while(T-->0) { int N=i(); int size[]=new int[N]; PriorityQueue<node1> q[]=new PriorityQueue[6]; for(int i=0; i<5; i++)q[i]=new PriorityQueue<node1>(); for(int i=0; i<N; i++) { char X[]=in.next().toCharArray(); int s=X.length; size[i]=s; int f[]=new int[5]; for(char x:X)f[x-'a']++; for(int j=0; j<5; j++)q[j].add(new node1(f[j],i,s)); } int max=0; for(int i=0; i<5; i++) { PriorityQueue<node1> q_new=new PriorityQueue<>(); q_new=q[i]; int c=0; long f=0; while(q_new.size()>0) { node1 x=q_new.remove(); f+=x.a; if(f>0) { c++; max=Math.max(max, c); } else break; } } out.println(max); } out.close(); } static int i() { return in.nextInt(); } } class node1 implements Comparable<node1> { int index,f,size; long a; node1(int f,int i,int size) { this.f=f; this.index=i; this.size=size; a=2*f-size; } }",b434c275,"import java.io.*; import java.util.*; import java.math.*; import java.math.BigInteger; public final class A { static PrintWriter out = new PrintWriter(System.out); static StringBuilder ans=new StringBuilder(); static FastReader in=new FastReader(); public static void main(String args[])throws IOException { int T=i(); outer:while(T-->0) { int N=i(); int size[]=new int[N]; PriorityQueue<node1> q[]=new PriorityQueue[26]; for(int i=0; i<26; i++)q[i]=new PriorityQueue<node1>(); for(int i=0; i<N; i++) { char X[]=in.next().toCharArray(); int s=X.length; size[i]=s; int f[]=new int[26]; for(char x:X)f[x-'a']++; for(int j=0; j<26; j++)q[j].add(new node1(f[j],i,s)); } int max=0; for(int i=0; i<26; i++) { PriorityQueue<node1> q_new=new PriorityQueue<>(); q_new=q[i]; int c=0; long f=0; while(q_new.size()>0) { node1 x=q_new.remove(); f+=x.a; if(f>0) { c++; max=Math.max(max, c); } else break; } } out.println(max); } out.close(); } static int i() { return in.nextInt(); } } class node1 implements Comparable<node1> { int index,f,size; long a; node1(int f,int i,int size) { this.f=f; this.index=i; this.size=size; a=2*f-size; } }",0.9700289343045794,15,1
949502c2,"import static java.lang.Math.max; import static java.lang.Math.min; import static java.lang.Math.abs; import static java.lang.System.out; import java.util.*; import java.io.*; import java.math.*; public class Template { static int mod = 1000000007; public static void main(String[] args) { FastScanner sc = new FastScanner(); int yo = sc.nextInt(); while (yo-- > 0) { int n = sc.nextInt(); int a = sc.nextInt()-1; int b = sc.nextInt()-1; int da = sc.nextInt(); int db = sc.nextInt(); List<List<Integer>> list = new ArrayList<>(); for(int i = 0; i < n; i++) list.add(new ArrayList<>()); for(int i = 0; i < n-1; i++){ int x = sc.nextInt()-1; int y = sc.nextInt()-1; list.get(x).add(y); list.get(y).add(x); } for(int i = 0; i <= n; i++) depth[i] = 0; diam = 0; dfs(a,-1,list); if(2 * da >= min(diam, db) || depth[b] <= da){ out.println(""Alice""); } else { out.println(""Bob""); } } } static int[] depth = new int[200001]; static int diam = 0; static int dfs(int x, int p, List<List<Integer>> list) { int len = 0; List<Integer> ne = list.get(x); for(int y : ne) { if(y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(y, x,list); diam = max(diam, cur + len); len = max(len, cur); } } return len; } }",9fc811f7,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.StringTokenizer; import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DTreeTag solver = new DTreeTag(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class DTreeTag { int diam = 0; public int dfs(ArrayList<Integer> g[], int x, int depth[], int p) { int len = 0; for (int y : g[x]) { if (y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(g, y, depth, x); diam = Math.max(diam, cur + len); len = Math.max(len, cur); } } return len; } public void solve(int testNumber, InputReader in, PrintWriter out) { int n = in.nextInt(); int a = in.nextInt() - 1; int b = in.nextInt() - 1; int da = in.nextInt(); int db = in.nextInt(); int dis[] = new int[n]; ArrayList<Integer> g[] = new ArrayList[n]; for (int i = 0; i < n; i++) g[i] = new ArrayList<>(); for (int i = 0; i < n - 1; i++) { int u = in.nextInt() - 1; int v = in.nextInt() - 1; g[u].add(v); g[v].add(u); } diam = 0; dfs(g, a, dis, -1); int disb = dis[b]; if (2 * da >= Math.min(diam, db) || disb <= da) { out.println(""Alice""); } else { out.println(""Bob""); } } } }",0.6031680068934288,2,1
99afdfb3,"import java.util.Scanner; public class C_Set_or_Decrease{ static Scanner in=new Scanner(System.in); static int testCases,n; static long a[]; static long wantedSum; static void solve(){ if(n==1){ if(a[0]<=wantedSum ){ System.out.println(0); }else{ System.out.println((-wantedSum+a[0]) ); } return; } long sum=0; for(long i: a){ sum+=i; } if(sum<=wantedSum){ System.out.println(0); return; } sort(a,0,n-1); long step=Math.max(sum-wantedSum,0); for(int i=1;i<n;i++){ sum-=a[n-i]-a[0]; long t=sum>wantedSum?(sum-wantedSum+i)/(i+1):0; step=Math.min(step,t+i); } System.out.println(step); } public static void main(String [] amit){ testCases=in.nextInt(); for(int t=0;t<testCases;t++){ n=in.nextInt(); wantedSum=in.nextLong(); a=new long[n]; for(int i=0;i<n;i++){ a[i]=in.nextLong(); } solve(); } } static void merge(long a[],int left,int right,int mid){ int n1=mid-left+1,n2=right-mid; long L[]=new long[n1]; long R[]=new long[n2]; for(int i=0;i<n1;i++){ L[i]=a[left+i]; } for(int i=0;i<n2;i++){ R[i]=a[mid+1+i]; } int i=0,j=0,k=left; while(i<n1 && j<n2){ if(L[i]<=R[j]){ a[k]=L[i]; i++; }else{ a[k]=R[j]; j++; } k++; } while(i<n1){ a[k]=L[i]; i++; k++; } while(j<n2){ a[k]=R[j]; j++; k++; } } static void sort(long a[],int left,int right){ if(left>=right){ return; } int mid=(left+right)/2; sort(a,left,mid); sort(a,mid+1,right); merge(a,left,right,mid); } }",e152c1ff,"import java.util.Scanner; public class C_Set_or_Decrease{ static Scanner in=new Scanner(System.in); static int testCases,n; static long a[]; static long wantedSum; static void solve(){ if(n==1){ if(a[0]<=wantedSum ){ System.out.println(0); }else{ System.out.println((-wantedSum+a[0]) ); } return; } long sum=0; for(long i: a){ sum+=i; } if(sum<=wantedSum){ System.out.println(0); return; } sort(a,0,n-1); long step=Math.max(sum-wantedSum,0); for(int i=1;i<n;i++){ sum-=a[n-i]-a[0]; long t=sum>wantedSum?(sum-wantedSum+i)/(i+1):0; step=Math.min(step,t+i); } System.out.println(step); } public static void main(String [] amit){ testCases=in.nextInt(); for(int t=0;t<testCases;t++){ n=in.nextInt(); wantedSum=in.nextLong(); a=new long[n]; for(int i=0;i<n;i++){ a[i]=in.nextLong(); } solve(); } } static void merge(long a[],int left,int right,int mid){ int n1=mid-left+1,n2=right-mid; long L[]=new long[n1]; long R[]=new long[n2]; for(int i=0;i<n1;i++){ L[i]=a[left+i]; } for(int i=0;i<n2;i++){ R[i]=a[mid+1+i]; } int i=0,j=0,k=left; while(i<n1 && j<n2){ if(L[i]<=R[j]){ a[k]=L[i]; i++; }else{ a[k]=R[j]; j++; } k++; } while(i<n1){ a[k]=L[i]; i++; k++; } while(j<n2){ a[k]=R[j]; j++; k++; } } static void sort(long a[],int left,int right){ if(left>=right){ return; } int mid=(left+right)/2; sort(a,left,mid); sort(a,mid+1,right); merge(a,left,right,mid); } }",0.9999999999999999,13,1
9ab3c0e1,"import java.util.*; public class d { public static Scanner sc = new Scanner(System.in); public static final int MOD = 998244353; int []f; int [] lf; public static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } public static int ksm(int a, int n) { int ans = 1; while(n > 0) { if((n & 1) == 1) ans = mul(a, ans); a = mul(a, a); n >>= 1; } return ans; } public int C(int n, int k) { return (k < 0 || k > n) ? 0 : mul(f[n], mul(lf[n - k], lf[k])); } public static int inv(int a) { return ksm(a, MOD - 2); } public void solve() { int n = sc.nextInt(); int k = sc.nextInt(); f = new int[n + 42]; lf = new int[n + 42]; f[0] = lf[0] = 1; for(int i = 1; i < f.length; i++) { f[i] = mul(f[i - 1], i); lf[i] = mul(lf[i - 1], inv(i)); } int[] events = new int[2 * n]; for(int i = 0; i < n; i++) { int le = sc.nextInt(); int ri = sc.nextInt(); events[i] = le * 2; events[i + n] = ri * 2 + 1; } Arrays.sort(events); int ans = 0, balance = 0; for(int r = 0; r < 2 * n;) { int l = r; while(r < 2 * n && events[l] == events[r]) ++r; int added = r - l; if(events[l] % 2 == 0) { ans += C(balance + added, k); if(ans >= MOD) ans -= MOD; ans += MOD - C(balance, k); if(ans >= MOD) ans -= MOD; balance += added; } else balance -= added; } sc.close(); System.out.println(ans); } public static void main(String[] args) { (new d()).solve(); } }",d5fa4746,"import java.lang.*; import java.util.*; import java.io.*; public class Main { static FastScanner in = new FastScanner(); static final int MOD = 998244353; static int n, k; static int[] fact, invFact; static int mul(int a, int b) { return (int)((long)a * (long)b % MOD); } static int pow(int a, int p) { int ans = 1; while (p != 0) { if ((p & 1) != 0) ans = mul(ans, a); a = mul(a, a); p >>= 1; } return ans; } static int inv(int a) { return pow(a, MOD - 2); } static void precalc() { fact = new int[n + 42]; invFact = new int[n + 42]; fact[0] = invFact[0] = 1; for (int i = 1; i < fact.length; ++i) { fact[i] = mul(fact[i - 1], i); invFact[i] = mul(invFact[i - 1], inv(i)); } } static int nCk(int a, int b) { if (b < 0 || a < b) return 0; return mul(fact[a], mul(invFact[a - b], invFact[b])); } static void solve() { n = in.nextInt(); k = in.nextInt(); precalc(); int[] events = new int[2 * n]; for (int i = 0; i < n; ++i) { int l = in.nextInt(), r = in.nextInt(); events[i] = 2 * l; events[i + n] = 2 * r + 1; } Arrays.sort(events); int ans = 0, balance = 0; for (int r = 0; r < 2 * n;) { int l = r; while (r < 2 * n && events[l] == events[r]) ++r; int added = r - l; if (events[l] % 2 == 0) { ans += nCk(balance + added, k); if (ans >= MOD) ans -= MOD; ans += MOD - nCk(balance, k); if (ans >= MOD) ans -= MOD; balance += added; } else balance -= added; } System.out.println(ans); } public static void main(String[] args) { int T = 1; while (T-- > 0) solve(); } }",0.8370212375369797,14,1
9debf95c,"import java.io.BufferedOutputStream; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; public class Main { static class Clock { protected long start, stop; public void start() { start = System.currentTimeMillis(); } } public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out)); static long mod = 1000000007; static int parent[]; static int rank[]; public static long arr[]; public static int arr1[]; public static void main(String[] args) throws Exception { FastReader sc = new FastReader(); Clock clock = new Clock(); clock.start(); int t1=sc.nextInt(); for (int t = 0; t <t1 ; t++) { int n=sc.nextInt(); long arr[]=new long[n]; for (int i = 0; i < n; i++) { arr[i]=sc.nextLong(); } long sum1=0; long sum2=0; long min1 =Long.MAX_VALUE; long min2 =Long.MAX_VALUE; long brr[]=new long[n]; for (int i = 0; i <n ; i+=2) { int nn =i/2; min1=Math.min(arr[i],min1); sum1+=arr[i]; long x =(sum1-min1) + min1*(n-nn); brr[i]=x; } for (int i = 1; i <n ; i+=2) { int nn =i/2; min2=Math.min(arr[i],min2); sum2+=arr[i]; long x =(sum2-min2) + min2*(n-nn); brr[i]=x; } long min=Long.MAX_VALUE; for (int i = 1; i < n; i++) { min=Math.min(brr[i]+brr[i-1],min); } out.println(min); } out.close(); } }",ac596a43,"import java.io.BufferedOutputStream; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.Comparator; import java.util.HashMap; import java.util.HashSet; import java.util.LinkedList; import java.util.PriorityQueue; import java.util.Queue; import java.util.Stack; import java.util.StringTokenizer; import java.util.TreeMap; public class Main { static class Clock { protected long start, stop; public void start() { start = System.currentTimeMillis(); } } public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out)); static long mod = 1000000007; static int parent[]; static int rank[]; public static long arr[]; public static int arr1[]; public static void main(String[] args) throws Exception { FastReader sc = new FastReader(); Clock clock = new Clock(); clock.start(); int t1=sc.nextInt(); for (int t = 0; t <t1 ; t++) { int n=sc.nextInt(); long arr[]=new long[n]; for (int i = 0; i < n; i++) { arr[i]=sc.nextLong(); } long sum1=0; long sum2=0; long min1 =Long.MAX_VALUE; long min2 =Long.MAX_VALUE; long brr[]=new long[n]; for (int i = 0; i <n ; i+=2) { int nn =i/2; min1=Math.min(arr[i],min1); sum1+=arr[i]; long x =(sum1-min1) + min1*(n-nn); brr[i]=x; } for (int i = 1; i <n ; i+=2) { int nn =i/2; min2=Math.min(arr[i],min2); sum2+=arr[i]; long x =(sum2-min2) + min2*(n-nn); brr[i]=x; } long min=Long.MAX_VALUE; for (int i = 1; i < n; i++) { min=Math.min(brr[i]+brr[i-1],min); } out.println(min); } out.close(); } }",1.0000000000000002,18,1
9e7551da,"import java.io.*; import java.util.Arrays; import java.util.StringTokenizer; public class InterestingStory { private static int[] freq; private static String[] strs; private static int[] countAlpha(char alpha) { int[] count = new int[strs.length]; for (int i = 0; i < strs.length; i++) for (char c : strs[i].toCharArray()) count[i] += c == alpha ? -1 : 1; return count; } private static int solve(char alpha) { int[] res = countAlpha(alpha); Arrays.sort(res); int freqSum = 0; for (int j : freq) freqSum += j; freqSum -= freq[alpha - 'a']; int k = res.length - 1; while (k >= 0 && freq[alpha - 'a'] <= freqSum) { freqSum -= res[k--]; } return k + 1; } public static void main(String[] args) { FastReader in = new FastReader(); PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out)); int t = in.nextInt(); while (t-- > 0) { int n = in.nextInt(); freq = new int[7]; strs = new String[n]; for (int i = 0; i < n; i++) strs[i] = in.nextLine(); for (String str : strs) for (char c : str.toCharArray()) freq[c - 'a']++; int max = 0; for (char c = 'a'; c < 'f'; c++) max = Math.max(max, solve(c)); out.println(max); } out.close(); } }",f0e13442,"import java.io.*; import java.util.Arrays; import java.util.StringTokenizer; public class InterestingStory { private static int[] freq; private static String[] strs; private static int[] countAlpha(char alpha) { int[] count = new int[strs.length]; for (int i = 0; i < strs.length; i++) for (char c : strs[i].toCharArray()) count[i] += c == alpha ? -1 : 1; return count; } private static int solve(char alpha) { int[] res = countAlpha(alpha); Arrays.sort(res); int freqSum = 0; for (int j : freq) freqSum += j; freqSum -= freq[alpha - 'a']; int k = res.length - 1; while (k >= 0 && freq[alpha - 'a'] <= freqSum) freqSum -= res[k--]; return k + 1; } public static void main(String[] args) { FastReader in = new FastReader(); PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out)); int t = in.nextInt(); while (t-- > 0) { int n = in.nextInt(); freq = new int[5]; strs = new String[n]; for (int i = 0; i < n; i++) strs[i] = in.nextLine(); for (String str : strs) for (char c : str.toCharArray()) freq[c - 'a']++; int max = 0; for (char c = 'a'; c < 'f'; c++) max = Math.max(max, solve(c)); out.println(max); } out.close(); } }",1.0000000000000002,15,1
9fc811f7,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.StringTokenizer; import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); DTreeTag solver = new DTreeTag(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class DTreeTag { int diam = 0; public int dfs(ArrayList<Integer> g[], int x, int depth[], int p) { int len = 0; for (int y : g[x]) { if (y != p) { depth[y] = depth[x] + 1; int cur = 1 + dfs(g, y, depth, x); diam = Math.max(diam, cur + len); len = Math.max(len, cur); } } return len; } public void solve(int testNumber, InputReader in, PrintWriter out) { int n = in.nextInt(); int a = in.nextInt() - 1; int b = in.nextInt() - 1; int da = in.nextInt(); int db = in.nextInt(); int dis[] = new int[n]; ArrayList<Integer> g[] = new ArrayList[n]; for (int i = 0; i < n; i++) g[i] = new ArrayList<>(); for (int i = 0; i < n - 1; i++) { int u = in.nextInt() - 1; int v = in.nextInt() - 1; g[u].add(v); g[v].add(u); } diam = 0; dfs(g, a, dis, -1); int disb = dis[b]; if (2 * da >= Math.min(diam, db) || disb <= da) { out.println(""Alice""); } else { out.println(""Bob""); } } } }",cff39394,"import java.io.BufferedOutputStream; import java.io.BufferedReader; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.StringTokenizer; public class D { static int diam=0; public static int dfs(int a, int p,int[] depth,ArrayList<Integer>[] list) { int len=0; for(int y:list[a]) { if(y==p) continue; depth[y]=depth[a]+1; int cur=1+dfs(y,a,depth,list); diam=Math.max(cur+len,diam); len=Math.max(cur, len); } return len; } public static void main(String[] args) { MyScanner s = new MyScanner(); out = new PrintWriter(new BufferedOutputStream(System.out)); try { int t=s.nextInt(); while(t-->0) { int n=s.nextInt(); int a=s.nextInt(); int b=s.nextInt(); int da=s.nextInt(); int db=s.nextInt(); ArrayList<Integer>[] list=new ArrayList[n+1]; for(int i=0;i<=n;i++) list[i]=new ArrayList<Integer>(); for(int i=0;i<n-1;i++) { int u=s.nextInt(); int v=s.nextInt(); list[u].add(v); list[v].add(u); } int[] depth=new int[n+1]; diam=0; depth[a]=0; int dia=dfs(a,0,depth,list); if(2*da>=Math.min(diam, db) || depth[b]<=da) { System.out.println(""Alice""); } else { System.out.println(""Bob""); } } out.close(); }catch(Exception e) { System.out.println(e); return; } } public static PrintWriter out; }",0.7794445320957937,2,1
a101df86,"import java.util.*; public class Main { public static void main(String[] args){ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); for ( int zzz=0; zzz<t; zzz++ ) { int n = sc.nextInt(); int[] a = new int[n]; String[] b = new String[n]; for ( int i=0; i<n; i++ ) { a[i] = sc.nextInt(); } int pos = 0; if ( n%2==1 ) { int a01 = a[0]+a[1]; if ( a01==0 ) { a01 = a[0]-a[1]; b[0] = String.valueOf(a[2]); b[1] = String.valueOf(0-a[2]); b[2] = String.valueOf(0-a01); } else { b[0] = String.valueOf(a[2]); b[1] = String.valueOf(a[2]); b[2] = String.valueOf(0-a01); } pos = 3; } for ( int i=pos; i<n; i=i+2 ) { b[i] = String.valueOf(a[i+1]); b[i+1] = String.valueOf(0-a[i]); } System.out.println(String.join("" "", b)); } } }",dffa45ac,"import java.util.*; public class Main { public static void main(String[] args){ Scanner sc = new Scanner(System.in); int t = sc.nextInt(); for ( int zzz=0; zzz<t; zzz++ ) { int n = sc.nextInt(); int[] a = new int[n]; String[] b = new String[n]; for ( int i=0; i<n; i++ ) { a[i] = sc.nextInt(); } int pos = 0; if ( n%2==1 ) { int a01 = a[0]+a[1]; if ( a01==0 ) { a01 = a[0]-a[1]; b[0] = String.valueOf(a[2]); b[1] = String.valueOf(0-a[2]); b[2] = String.valueOf(0-a01); } else { b[0] = String.valueOf(a[2]); b[1] = String.valueOf(a[2]); b[2] = String.valueOf(0-a01); } pos = 3; } for ( int i=pos; i<n; i=i+2 ) { b[i] = String.valueOf(a[i+1]); b[i+1] = String.valueOf(0-a[i]); } System.out.println(String.join("" "", b)); } } }",1.0000000000000002,17,1
a3ebea91,"import java.io.*; import java.util.*; public class DiscreteCentrifugalJumps { public static void solve(int n, int[] arr) { int[] dp = new int[n]; for (int i=1; i<n; i++) dp[i] = Integer.MAX_VALUE; int[] lg = new int[n]; int[] ll = new int[n]; int[] rg = new int[n]; int[] rl = new int[n]; List<List<Integer>> jumps = new ArrayList<>(); for (int i=0; i<n; i++) { jumps.add(new ArrayList<Integer>()); } Stack<Pair<Integer, Integer>> stack = new Stack<>(); for (int i=0; i<n; i++) { while (!stack.isEmpty() && stack.peek().first < arr[i]) { stack.pop(); } if (stack.isEmpty()) lg[i] = -1; else lg[i] = stack.peek().second; stack.add(new Pair<Integer, Integer>(arr[i], i)); } stack.clear(); for (int i=0; i<n; i++) { while (!stack.isEmpty() && stack.peek().first > arr[i]) { stack.pop(); } if (stack.isEmpty()) ll[i] = -1; else ll[i] = stack.peek().second; stack.add(new Pair<Integer, Integer>(arr[i], i)); } stack.clear(); for (int i=n-1; i>=0; i--) { while (!stack.isEmpty() && stack.peek().first > arr[i]) { stack.pop(); } if (stack.isEmpty()) rg[i] = -1; else rg[i] = stack.peek().second; stack.add(new Pair<Integer, Integer>(arr[i], i)); } stack.clear(); for (int i=n-1; i>=0; i--) { while (!stack.isEmpty() && stack.peek().first < arr[i]) { stack.pop(); } if (stack.isEmpty()) rl[i] = -1; else rl[i] = stack.peek().second; stack.add(new Pair<Integer, Integer>(arr[i], i)); } stack.clear(); for (int i = 0; i<n; i++) { if (lg[i] != -1) jumps.get(lg[i]).add(i); if (ll[i] != -1) jumps.get(ll[i]).add(i); if (rg[i] != -1) jumps.get(i).add(rg[i]); if (rl[i] != -1) jumps.get(i).add(rl[i]); } for (int i=0; i<n; i++) { for (int j: jumps.get(i)) { dp[j] = Math.min(dp[j], dp[i] + 1); } } System.out.println(dp[n-1]); } public static void main(String[] args) throws IOException { try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){ int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i=0; i<n; i++) { arr[i] = Integer.parseInt(s[i]); } solve(n, arr); } } } class Pair<T1, T2> { public T1 first; public T2 second; public Pair(T1 first, T2 second) { this.first = first; this.second = second; } }",f80f6d8d,"import static java.lang.Math.min; import java.io.ByteArrayInputStream; import java.io.File; import java.io.PrintWriter; import java.util.ArrayList; import java.util.LinkedList; import java.util.List; import java.util.Scanner; public class D_2 { public static void main(String[] args) throws Exception { new D_2().go(); } int USE_FILE = 0; String INPUT = ""5\r\n"" + ""1 3 1 4 5\r\n"" + """"; void solve(int caseNr) { int n = in.nextInt(); int[] h = na(n); int[] dp = new int[n]; for (int i = 0; i < n; i++) { dp[i] = inf; } dp[0] = 0; LinkedList<int[]> st = new LinkedList<>(); int[] lge = new int[n]; int[] lle = new int[n]; int[] rge = new int[n]; int[] rle = new int[n]; for (int i = 0; i < n; i++) { while (!st.isEmpty() && st.getLast()[0] < h[i]) { st.removeLast(); } if (st.isEmpty()) { lge[i] = -1; } else { lge[i] = st.getLast()[1]; } st.add(new int[]{h[i], i}); } st.clear(); for (int i = 0; i < n; i++) { while (!st.isEmpty() && st.getLast()[0] > h[i]) { st.removeLast(); } if (st.isEmpty()) { lle[i] = -1; } else { lle[i] = st.getLast()[1]; } st.add(new int[]{h[i], i}); } st.clear(); for (int i = n - 1; i >= 0; i--) { while (!st.isEmpty() && st.getLast()[0] < h[i]) { st.removeLast(); } if (st.isEmpty()) { rge[i] = -1; } else { rge[i] = st.getLast()[1]; } st.add(new int[]{h[i], i}); } st.clear(); for (int i = n - 1; i >= 0; i--) { while (!st.isEmpty() && st.getLast()[0] > h[i]) { st.removeLast(); } if (st.isEmpty()) { rle[i] = -1; } else { rle[i] = st.getLast()[1]; } st.add(new int[]{h[i], i}); } List<List<Integer>> jumps = new ArrayList<>(); for (int i = 0; i < n; i++) { jumps.add(new ArrayList<>()); } for (int i = 0; i < n; i++) { if (rle[i] != -1) jumps.get(i).add(rle[i]); if (rge[i] != -1) jumps.get(i).add(rge[i]); if (lle[i] != -1) jumps.get(lle[i]).add(i); if (lge[i] != -1) jumps.get(lge[i]).add(i); } for (int i = 0; i < n; i++) { for (int to : jumps.get(i)) { dp[to] = min(dp[to], dp[i] + 1); } } System.out.println(dp[n - 1]); return; } void testCases() { int t = 1; for (int i=1; i<=t; i++) { solve(i); } output_writer.flush(); } private int[] na(int n) { int[] a = new int[n]; for (int i=0; i<n; i++) { a[i] = in.nextInt(); } return a; } private int inf = Integer.MAX_VALUE; static boolean LOCAL = java.lang.System.getProperty(""ONLINE_JUDGE"") == null; Scanner in; PrintWriter output_writer = new PrintWriter(java.lang.System.out); static class System { static PrintWriter out = null; } void go() throws Exception { System.out = output_writer; if (LOCAL && USE_FILE == 0) { java.lang.System.setIn(new ByteArrayInputStream(INPUT.getBytes())); in = new Scanner(java.lang.System.in); } if (LOCAL && USE_FILE > 0) { String filename = String.format(""in/cf%d.txt"", USE_FILE); File inputFile = new File(filename); in = new Scanner(inputFile); output_writer.printf(""[%s]\n"", filename); output_writer.flush(); } if (!LOCAL) { in = new Scanner(java.lang.System.in); } long startTime = java.lang.System.currentTimeMillis(); testCases(); if (LOCAL) { java.lang.System.out.printf(""[%dms]\n"", java.lang.System.currentTimeMillis()-startTime); } in.close(); } }",0.378301491619469,6,1
a4c98ae1,"import java.io.*; import java.util.*; public class Main { static ArrayList<Integer> one=new ArrayList<>(); static ArrayList<Integer> zero=new ArrayList<>(); static long dp[][]= new long[5001][5001]; static long solve(int i,int j){ if (i==one.size())return 0; if (j==zero.size())return Integer.MAX_VALUE; if (dp[i][j]!=-1){ return dp[i][j]; } return dp[i][j]=Math.min(solve(i+1,j+1)+Math.abs(one.get(i)-zero.get(j)),solve(i,j+1)); } public static void main(String[] args) { FastScanner sc = new FastScanner(); int n=sc.nextInt(); int a[]=sc.readArray(n); for (long i[]:dp){ Arrays.fill(i,-1); } for (int i=0;i<n;i++){ if (a[i]==1)one.add(i); else zero.add(i); } Collections.sort(one); Collections.sort(zero); System.out.println(solve(0,0)); } static void sort(int[] a) { ArrayList<Integer> l = new ArrayList<>(); for (int i : a) l.add(i); Collections.sort(l); for (int i = 0; i < a.length; i++) a[i] = l.get(i); } static long mod =(long)(1e9+7); static long mod(long x) { return ((x % mod + mod) % mod); } static long add(long x, long y) { return mod(mod(x) + mod(y)); } }",ee4f7b06,"import java.io.*; import java.util.*; import java.lang.Math; public class Main { static Scanner sc; static StringBuilder ans; static int ni() { return sc.nextInt(); } static void runIo() throws Exception { sc = new Scanner(System.in); } public static void main(String[] args) throws Exception { runIo(); int t; t = 1; ans = new StringBuilder(); while( t-- > 0 ) { solve(); } System.out.println(ans+""""); } static int N ; static int M ; static ArrayList<Integer> f; static ArrayList<Integer> e; static long dp[][]; static long find(int i, int j ) { if( i == N ) return 0; if( j == M ) return Integer.MAX_VALUE; if (dp[i][j] != -1 ) return dp[i][j]; return dp[i][j] = Math.min( find(i, j+1), Math.abs(f.get(i)-e.get(j)) + find(i+1, j+1) ); } public static void solve() { int n = ni(); f = new ArrayList(); e = new ArrayList(); for(int i = 0; i<n; i++) { int v = ni(); if( v == 0 ) { e.add(i); } else f.add(i); } N = f.size(); M = e.size(); dp = new long[N][M]; for(int i = 0; i<N; i++) Arrays.fill(dp[i], -1); ans.append(find(0, 0)+""\n""); } }",0.6385716918263945,19,1
a4d6775d,"import java.io.*; import java.util.*; public class ArmChairs { public static int solution(int n, int[] arr) { ArrayList<Integer> one = new ArrayList<Integer>(); ArrayList<Integer> zero = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { if (arr[i] == 1) { one.add(i); } else { zero.add(i); } } int[][] dp = new int[one.size() + 1][zero.size() + 1]; for (int i = 1; i <= one.size(); i++) { dp[i][i] = dp[i - 1][i - 1] + Math.abs(one.get(i - 1) - zero.get(i - 1)); for (int j = i + 1; j <= zero.size(); j++) { dp[i][j] = Math.min(dp[i][j - 1], dp[i - 1][j - 1] + Math.abs(one.get(i - 1) - zero.get(j - 1))); } } return dp[one.size()][zero.size()]; } public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); String[] s = br.readLine().split("" ""); int[] arr = new int[n]; for (int i = 0; i < n; i++) { arr[i] = Integer.parseInt(s[i]); } log.write(Integer.toString(solution(n, arr)) + ""\n""); log.flush(); } }",cb87df79,"import java.util.*; public class Longjumps { public static void main(String[] args){ Scanner sc=new Scanner(System.in); ArrayList<Integer> o=new ArrayList<Integer>(), e=new ArrayList<Integer>(); int n = sc.nextInt(); for(int i=1;i<=n;i++){ int x=sc.nextInt(); if(x==1)o.add(i); else e.add(i); } int dp[][]=new int[o.size()+1][e.size()+1]; for(int i=1;i<=o.size();i++){ dp[i][i]=dp[i-1][i-1]+Math.abs(o.get(i-1)-e.get(i-1)); for(int j=i+1;j<=e.size();j++) dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j-1]+Math.abs(o.get(i-1)-e.get(j-1))); } System.out.println(dp[o.size()][e.size()]); } }",0.6670979364998347,19,1
a7894e0b,"import java.io.*; import java.math.*; import java.util.*; public class test { public static void main(String args[]) throws Exception { Scanner sc = new Scanner(); StringBuilder res = new StringBuilder(); int tc = sc.nextInt(); while(tc-->0) { int n=sc.nextInt(); int k=sc.nextInt(); int[] ac=new int[k]; long[] ans=new long[n]; Arrays.fill(ans, Integer.MAX_VALUE/2); for(int i=0;i<k;i++) { ac[i]=sc.nextInt()-1; } for(int i=0;i<k;i++) { long x = sc.nextLong(); ans[ac[i]] = x; } for(int i=1;i<n;i++) { ans[i]=Math.min(ans[i], ans[i-1]+1); } for(int i=n-2;i>=0;i--) { ans[i]=Math.min(ans[i], ans[i+1]+1); } for(int i=0;i<n;i++) { res.append(ans[i]+"" ""); } res.append(""\n""); } System.out.println(res); } }",fadc1365,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a{ public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(),k=s.nextInt(); int pos[]=s.readArray(k); int temp[]=s.readArray(k); long ans[]=new long[n]; Arrays.fill(ans,Integer.MAX_VALUE); for(int i=0;i<k;i++){ ans[pos[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++){ out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.6936200236250503,8,1
a7e7f371,"import java.io.*; import java.util.*; public class cp { static int mod=(int)1e9+7; static FastReader sc=new FastReader(System.in); public static void main(String[] args) throws IOException { long tc=sc.nextLong(); while(tc-->0) { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0)); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i)); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } out.flush(); out.close(); System.gc(); } static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y) { this.x=x; this.y=y; } } static PrintWriter out=new PrintWriter(System.out); }",ad4c7a20,"import java.io.*; import java.util.*; public class Practice { static int mod=1000000007; static final int size=501; static FastReader sc=new FastReader(System.in); static PrintWriter out=new PrintWriter(System.out); static long[] factorialNumInverse; static long[] naturalNumInverse; static int[] sp; static long[] fact; static ArrayList<Integer> pr; public static void main(String[] args) throws IOException, CloneNotSupportedException { int t=1; t=sc.nextInt(); for(int i=1;i<=t;i++) solve(i); out.close(); out.flush(); } static void solve(int CASENO) throws IOException, CloneNotSupportedException { int n=sc.nextInt(); int k[]=new int[n]; int h[]=new int[n]; for(int i=0;i<n;i++) k[i]=sc.nextInt(); for(int i=0;i<n;i++) h[i]=sc.nextInt(); ArrayList<Pair> interval=new ArrayList<Pair>(); ArrayList<Pair> act=new ArrayList<Pair>(); for(int i=0;i<n;i++) interval.add(new Pair(k[i]-h[i]+1,k[i])); Collections.sort(interval); act.add(interval.get(0).clone()); for(int i=1;i<n;i++) { Pair p=act.get(act.size()-1); if(p.y<interval.get(i).x) act.add(interval.get(i).clone()); else p.y=Math.max(p.y, interval.get(i).y); } long mana=0; for(Pair p: act) { long x=p.y-p.x+1; mana+=(x*(x+1))/2; } out.println(mana); } static class Pair implements Cloneable, Comparable<Pair> { int x,y; Pair(int a,int b) { this.x=a; this.y=b; } @Override protected Pair clone() throws CloneNotSupportedException { return new Pair(this.x,this.y); } } }",0.9277553522674055,21,1
aa266c38,"import java.util.*; import java.io.*; import java.math.*; public class Main { static FastReader sc=new FastReader(); static long dp[][]; static int mod=1000000007; public static void main(String[] args) { PrintWriter out=new PrintWriter(System.out); StringBuffer sb=new StringBuffer(""""); int ttt=1; ttt =i(); outer :while (ttt-- > 0) { int n=i(); int m=i(); int x=i(); Pair A[]=new Pair[n]; for(int i=0;i<n;i++) { A[i]=new Pair(i(), i+1); } Arrays.sort(A); int B[]=new int[n+1]; int a=m; for(int i=n-1;i>=0;i--) { B[A[i].y]=a; a--; if(a==0) { a=m; } } out.println(""YES""); for(int i=1;i<=n;i++) { out.print(B[i]+"" ""); } out.println(); } out.close(); } static class Pair implements Comparable<Pair> { int x; int y; Pair(int x,int y){ this.x=x; this.y=y; } } static void print(int A[]) { for(int i : A) { System.out.print(i+"" ""); } System.out.println(); } static void print(long A[]) { for(long i : A) { System.out.print(i+"" ""); } System.out.println(); } static int i() { return sc.nextInt(); } static void sort(int[] A){ int n = A.length; Random rnd = new Random(); for(int i=0; i<n; ++i){ int tmp = A[i]; int randomPos = i + rnd.nextInt(n-i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static void sort(long[] A){ int n = A.length; Random rnd = new Random(); for(int i=0; i<n; ++i){ long tmp = A[i]; int randomPos = i + rnd.nextInt(n-i); A[i] = A[randomPos]; A[randomPos] = tmp; } Arrays.sort(A); } static String sort(String s) { Character ch[]=new Character[s.length()]; for(int i=0;i<s.length();i++) { ch[i]=s.charAt(i); } Arrays.sort(ch); StringBuffer st=new StringBuffer(""""); for(int i=0;i<s.length();i++) { st.append(ch[i]); } return st.toString(); } }",b5fbe7a2,"import java.util.*; import java.io.*; public class Codeforces { final static long mod = 1000000007; public static void main(String[] args) { FastReader sc = new FastReader(); int t = sc.nextInt(); while(t-->0){ int n=sc.nextInt(); int m=sc.nextInt(); int x=sc.nextInt(); Pair a[]=new Pair[n]; for(int i=0;i<n;i++){ a[i]=new Pair(sc.nextInt(), i+1); } Arrays.sort(a); int b[]=new int[n+1]; int k=m; for(int i=n-1;i>=0;i--){ b[a[i].y]=k; k--; if(k==0) k=m; } System.out.println(""YES""); for(int i=1;i<=n;i++){ System.out.print(b[i]+"" ""); } System.out.println(); } } static class Pair implements Comparable<Pair> { public final int x; public final int y; public Pair(int x, int y) { this.x = x; this.y = y; } } }",0.7699925213470921,9,1
aa8091b0,"import java.util.*; import java.io.*; public class AiseHi { static Scanner sc = new Scanner(System.in); static int mod = (int)(1e9+7); public static void main (String[] args) { PrintWriter out = new PrintWriter(System.out); int t = 1; t = sc.nextInt(); z : while(t-->0) { int n = sc.nextInt(); int m = sc.nextInt(); int x = sc.nextInt(); PriorityQueue<twoval> myQueue = new PriorityQueue<>(); for(int i=1;i<=m;i++) { myQueue.add(new twoval(0,i)); } List<twoval> arrayList = new ArrayList<>(); int myArray[] = new int[n]; for(int i=0;i<n;i++) { int aasjd = sc.nextInt(); arrayList.add(new twoval(aasjd,i)); myArray[i] = aasjd; } Collections.sort(arrayList); int ans[] = new int[n]; for(int i=n-1;i>=0;i--) { twoval p = myQueue.poll(); long aasjd = p.myArray; int idx = p.b; aasjd += arrayList.get(i).myArray; ans[arrayList.get(i).b] = idx; myQueue.add(new twoval(aasjd,idx)); } long dasdaknw[] = new long[m]; long min = Long.MAX_VALUE, max = Long.MIN_VALUE; for(int i=0;i<n;i++) { dasdaknw[ans[i]-1] += myArray[i]; } for(int i=0;i<m;i++) { min = Math.min(min, dasdaknw[ans[i]-1]); max = Math.max(max, dasdaknw[ans[i]-1]); } if(max-min>x) { out.write(""NO\n""); continue; } out.write(""YES\n""); for(int aasjd : ans) out.write(aasjd+"" ""); out.write(""\n""); } out.close(); } static boolean prime[] = new boolean[2000009]; static int fac[] = new int[2000009]; } class twoval implements Comparable<twoval>{ long myArray; int b; twoval(long aasjd,int r){ this.myArray = aasjd; this.b = r; } }",eec856c0,"import java.io.*; import java.util.*; public class Main { static FastReader sc = new FastReader(); static long mod = (long) (1e9+7); static boolean spe[]; static int spen[]; static int dep[]; static List<Integer> tre[]; static int par[][]; public static void main (String[] args){ PrintWriter out = new PrintWriter(System.out); int t = 1; t = sc.nextInt(); z :for(int tc=1;tc<=t;tc++){ int n = sc.nextInt(); int m = sc.nextInt(); int x = sc.nextInt(); PriorityQueue<pairClass> priority = new PriorityQueue<>(); for(int i=1;i<=m;i++) { priority.add(new pairClass(0,i)); } List<pairClass> list = new ArrayList<>(); int a[] = new int[n]; for(int i=0;i<n;i++) { int value = sc.nextInt(); list.add(new pairClass(value,i)); a[i] = value; } Collections.sort(list); int answer[] = new int[n]; for(int i=n-1;i>=0;i--) { pairClass p = priority.poll(); long value = p.a; int idx = p.b; value += list.get(i).a; answer[list.get(i).b] = idx; priority.add(new pairClass(value,idx)); } long totalSum[] = new long[m]; long min = Long.MAX_VALUE, max = Long.MIN_VALUE; for(int i=0;i<n;i++) { totalSum[answer[i]-1] += a[i]; } for(int i=0;i<m;i++) { min = Math.min(min, totalSum[answer[i]-1]); max = Math.max(max, totalSum[answer[i]-1]); } if(max-min>x) { out.write(""NO\n""); continue; } out.write(""YES\n""); for(int value : answer) out.write(value+"" ""); out.write(""\n""); } out.close(); } } class pairClass implements Comparable<pairClass>{ long a; int b; pairClass(long value,int r){ this.a = value; this.b = r; } }",0.6278897177530759,9,1
ac144188,"import java.util.*; import java.io.*; import static java.lang.Math.min; import static java.lang.Math.abs; import static java.lang.Math.max; public class EdB { static long[] mods = {1000000007, 998244353, 1000000009}; static long mod = mods[0]; public static MyScanner sc; public static PrintWriter out; public static void main(String[] largewang) throws Exception{ sc = new MyScanner(); out = new PrintWriter(System.out); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); Set<Long> sums = new HashSet<>(); boolean found = false; int[] arr = readArrayInt(n); for(int j = 0;j<n;j++){ if (arr[j] == 0) found = true; } for(int j = 1;j<(1<<n);j++){ long sum = 0; for(int k = 0;k<n;k++){ if (((1<<k)&j) != 0) { sum += (long)abs(arr[k]); } } if (sums.contains(sum)) { found = true; break; } else { sums.add(sum); } } verdict(found); } out.close(); } static int[] readArrayInt(int n){ int[] array = new int[n]; for(int j = 0;j<n;j++) array[j] = sc.nextInt(); return array; } static void verdict(boolean a){ out.println(a ? ""YES"" : ""NO""); } }",e899614e,"import java.util.*; import java.io.*; import static java.lang.Math.min; import static java.lang.Math.abs; import static java.lang.Math.max; public class EdB { static long[] mods = {1000000007, 998244353, 1000000009}; static long mod = mods[0]; public static MyScanner sc; public static PrintWriter out; public static void main(String[] largewang) throws Exception{ sc = new MyScanner(); out = new PrintWriter(System.out); int t = sc.nextInt(); while (t-->0) { int n = sc.nextInt(); Set<Long> sums = new HashSet<>(); boolean found = false; int[] arr = readArrayInt(n); for(int j = 0;j<n;j++){ if (arr[j] == 0) found = true; } for(int j = 1;j<(1<<n);j++){ long sum = 0; for(int k = 0;k<n;k++){ if (((1<<k)&j) != 0) { sum += (long)abs(arr[k]); } } if (sums.contains(sum)) { found = true; break; } else { sums.add(sum); } } verdict(found); } out.close(); } static int[] readArrayInt(int n){ int[] array = new int[n]; for(int j = 0;j<n;j++) array[j] = sc.nextInt(); return array; } static void verdict(boolean a){ out.println(a ? ""YES"" : ""NO""); } }",1.0000000000000002,7,1
af2b138c,"import java.util.*; import java.lang.*; import java.io.*; public class ecf106 { public static void main(String[] args) throws Exception{ InputStreamReader ip=new InputStreamReader(System.in); BufferedReader br = new BufferedReader(ip); int t= Integer.parseInt(br.readLine()); while(t-->0){ int n=Integer.parseInt(br.readLine()); String[] strs=(br.readLine()).trim().split("" ""); long[] arr=new long [n]; for(int i=0;i<n;i++){ arr[i]=Integer.parseInt(strs[i]); } long min1=0,min2=0; long x=0,y=0; long hor=arr[0],vert=arr[1]; long ans=(n*hor)+(n*vert); for(int i=2;i<n;i++){ if(i%2==0){ x++; if(arr[i]>=hor){ min1+=arr[i]; }else{ min1+=hor; hor=arr[i]; } }else{ y++; if(arr[i]>=vert){ min2+=arr[i]; }else{ min2+=vert; vert=arr[i]; } } long rem=(n-x)*hor+(n-y)*vert; ans=Math.min(ans, min1+min2+rem); } System.out.println(ans); } } }",e45446bc,"import java.util.*; import java.lang.*; import java.io.*; public class C { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int t = Integer.parseInt(br.readLine()); StringBuilder sb = new StringBuilder(); while (t-- > 0) { String[] scn = (br.readLine()).trim().split("" ""); int n = Integer.parseInt(scn[0]); long[] arr = new long[n]; scn = (br.readLine()).trim().split("" ""); for (int i = 0; i < n; i++) { arr[i] = Long.parseLong(scn[i]); } long min; long hor = arr[0], ver = arr[1]; long min1 = 0, min2 = 0; min = (hor + ver) * n; long x = 0, y = 0; for (int i = 2; i < n; i++) { if (i % 2 == 0) { x += 1; if (arr[i] >= hor) { min1 += arr[i]; } else { min1 += hor; hor = arr[i]; } } else { y += 1; if (arr[i] >= ver) { min2 += arr[i]; } else { min2 += ver; ver = arr[i]; } } long pro = (n - x) * hor + (n - y) * ver; min = Math.min(min, min1 + min2 +pro); } sb.append(min); sb.append(""\n""); } System.out.println(sb); return; } }",0.6998444841825983,18,1
b434c275,"import java.io.*; import java.util.*; import java.math.*; import java.math.BigInteger; public final class A { static PrintWriter out = new PrintWriter(System.out); static StringBuilder ans=new StringBuilder(); static FastReader in=new FastReader(); public static void main(String args[])throws IOException { int T=i(); outer:while(T-->0) { int N=i(); int size[]=new int[N]; PriorityQueue<node1> q[]=new PriorityQueue[26]; for(int i=0; i<26; i++)q[i]=new PriorityQueue<node1>(); for(int i=0; i<N; i++) { char X[]=in.next().toCharArray(); int s=X.length; size[i]=s; int f[]=new int[26]; for(char x:X)f[x-'a']++; for(int j=0; j<26; j++)q[j].add(new node1(f[j],i,s)); } int max=0; for(int i=0; i<26; i++) { PriorityQueue<node1> q_new=new PriorityQueue<>(); q_new=q[i]; int c=0; long f=0; while(q_new.size()>0) { node1 x=q_new.remove(); f+=x.a; if(f>0) { c++; max=Math.max(max, c); } else break; } } out.println(max); } out.close(); } static int i() { return in.nextInt(); } } class node1 implements Comparable<node1> { int index,f,size; long a; node1(int f,int i,int size) { this.f=f; this.index=i; this.size=size; a=2*f-size; } }",fdc4f384,"import java.io.*; import java.util.*; import java.math.*; import java.math.BigInteger; public final class A { static PrintWriter out = new PrintWriter(System.out); static StringBuilder ans=new StringBuilder(); static FastReader in=new FastReader(); public static void main(String args[])throws IOException { int T=i(); outer:while(T-->0) { int N=i(); int size[]=new int[N]; PriorityQueue<node1> q[]=new PriorityQueue[6]; for(int i=0; i<6; i++)q[i]=new PriorityQueue<node1>(); for(int i=0; i<N; i++) { char X[]=in.next().toCharArray(); int s=X.length; size[i]=s; int f[]=new int[6]; for(char x:X)f[x-'a']++; for(int j=0; j<6; j++)q[j].add(new node1(f[j],i,s)); } int max=0; for(int i=0; i<6; i++) { PriorityQueue<node1> q_new=new PriorityQueue<>(); q_new=q[i]; int c=0; long f=0; while(q_new.size()>0) { node1 x=q_new.remove(); f+=x.a; if(f>0) { c++; max=Math.max(max, c); } else break; } } out.println(max); } out.close(); } static int i() { return in.nextInt(); } } class node1 implements Comparable<node1> { int index,f,size; long a; node1(int f,int i,int size) { this.f=f; this.index=i; this.size=size; a=2*f-size; } }",0.9700289343045794,15,1
b728ba1d,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.InputMismatchException; import java.io.IOException; import java.util.ArrayList; import java.util.Objects; import java.util.Collections; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); CPhoenixAndTowers solver = new CPhoenixAndTowers(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class CPhoenixAndTowers { public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(), m = in.nextInt(), k = in.nextInt(); ArrayList<Pair<Integer, Integer>> a = new ArrayList<>(); for (int i = 0; i < n; ++i) { a.add(new Pair<>(in.nextInt(), i)); } Collections.sort(a); int[] ans = new int[n]; int[] sum = new int[m]; int j = 1; for (int i = 0; i < n; ++i) { ans[a.get(i).y] = j; sum[j - 1] += a.get(i).x; j++; if (j == m + 1) j = 1; } for (int i = 1; i < m; ++i) { if (Math.abs(sum[i - 1] - sum[i]) > k) { out.println(""NO""); } } out.println(""YES""); for (int e : ans) { out.print(e + "" ""); } out.println(); } } static class Pair<U, V> implements Comparable<Pair<U, V>> { public U x; public V y; public Pair(U x, V y) { this.x = x; this.y = y; } } }",d04e5afb,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.InputMismatchException; import java.io.IOException; import java.util.ArrayList; import java.util.Objects; import java.util.Collections; import java.io.InputStream; public class Main { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; FastReader in = new FastReader(inputStream); PrintWriter out = new PrintWriter(outputStream); CPhoenixAndTowers solver = new CPhoenixAndTowers(); int testCount = Integer.parseInt(in.next()); for (int i = 1; i <= testCount; i++) solver.solve(i, in, out); out.close(); } static class CPhoenixAndTowers { public void solve(int testNumber, FastReader in, PrintWriter out) { int n = in.nextInt(), m = in.nextInt(), k = in.nextInt(); ArrayList<Pair<Integer, Integer>> a = new ArrayList<>(); for (int i = 0; i < n; ++i) { a.add(new Pair<>(in.nextInt(), i)); } Collections.sort(a); int[] ans = new int[n]; int[] sum = new int[m]; int j = 1; for (int i = 0; i < n; ++i) { ans[a.get(i).y] = j; sum[j - 1] += a.get(i).x; j++; if (j == m + 1) j = 1; } for (int i = 1; i < m; ++i) { if (Math.abs(sum[i - 1] - sum[i]) > k) { out.println(""NO""); } } out.println(""YES""); for (int e : ans) { out.print(e + "" ""); } out.println(); } } static class Pair<U, V> implements Comparable<Pair<U, V>> { public U x; public V y; public Pair(U x, V y) { this.x = x; this.y = y; } } }",1.0000000000000002,9,1
b8b08542,"import java.io.BufferedReader; import java.io.File; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Collections; import java.util.PriorityQueue; import java.util.Scanner; import java.util.StringJoiner; import java.util.StringTokenizer; import java.util.stream.Collectors; import java.util.stream.IntStream; import java.util.ArrayList; import java.util.List; import java.util.HashMap; import java.util.Map; import java.util.Set; import java.util.HashSet; import static java.lang.System.out; import static java.util.stream.Collectors.joining; public class C { static FastScanner sc = new FastScanner(System.in); public static void main(String[] args) { try (PrintWriter out = new PrintWriter(System.out)) { int T = sc.nextInt(); for (int tt = 1; tt <= T; tt++) { int n = sc.nextInt(); String[] strings = new String[n]; PriorityQueue<Pair>[] frequencies = new PriorityQueue[5]; for (int i = 0; i < 5; i++) frequencies[i] = new PriorityQueue<>(); for (int i = 0; i < n; i++) { strings[i] = sc.next(); int[] freq = new int[5]; for (char c : strings[i].toCharArray()) freq[c - 'a']++; for (int j = 0; j < 5; j++) { frequencies[j].add(new Pair(freq[j], strings[i].length())); } } int ans = 0; for (PriorityQueue<Pair> pq : frequencies) { long curlen = 0; long curfreq = 0; int cnt = 0; while (!pq.isEmpty()) { Pair pair = pq.remove(); curfreq += pair.freq; curlen += pair.len; if (curfreq >= curlen / 2 + 1) { cnt++; } else { break; } } ans = Math.max(ans, cnt); } System.out.println(ans); } } } static class Pair implements Comparable<Pair> { int freq, len; public Pair(int freq, int len) { this.freq = freq; this.len = len; } } }",d783d815,"import java.io.BufferedReader; import java.io.File; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Collections; import java.util.PriorityQueue; import java.util.Scanner; import java.util.StringJoiner; import java.util.StringTokenizer; import java.util.stream.Collectors; import java.util.stream.IntStream; import java.util.ArrayList; import java.util.List; import java.util.HashMap; import java.util.Map; import java.util.Set; import java.util.HashSet; import static java.lang.System.out; import static java.util.stream.Collectors.joining; public class C { static FastScanner sc = new FastScanner(System.in); public static void main(String[] args) { try (PrintWriter out = new PrintWriter(System.out)) { int T = sc.nextInt(); for (int tt = 1; tt <= T; tt++) { int n = sc.nextInt(); String[] strings = new String[n]; PriorityQueue<Pair>[] frequencies = new PriorityQueue[5]; for (int i = 0; i < 5; i++) frequencies[i] = new PriorityQueue<>(); for (int i = 0; i < n; i++) { strings[i] = sc.next(); int[] freq = new int[5]; for (char c : strings[i].toCharArray()) freq[c - 'a']++; for (int j = 0; j < 5; j++) { frequencies[j].add(new Pair(freq[j], strings[i].length())); } } int ans = 0; for (PriorityQueue<Pair> pq : frequencies) { long curlen = 0; long curfreq = 0; int cnt = 0; while (!pq.isEmpty()) { Pair pair = pq.remove(); curfreq += pair.freq; curlen += pair.len; if (curfreq >= curlen / 2 + 1) { cnt++; } else { break; } } ans = Math.max(ans, cnt); } System.out.println(ans); } } } static class Pair implements Comparable<Pair> { int freq, len; public Pair(int freq, int len) { this.freq = freq; this.len = len; } } }",1.0000000000000004,15,1
b9595381,"import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main{ static int dest1; static int dest2; public static void main(String args[]){ FastScanner in = new FastScanner(); int test=in.nextInt(); while(test-->0){ int n=in.nextInt(); int count[][]=new int[n][5]; int total[]=new int[n]; String words[]=new String[n]; for(int i=0;i<n;i++){ words[i]=in.next(); for(int j=0;j<words[i].length();j++) count[i][words[i].charAt(j)-'a']++; total[i]=words[i].length(); } int max=Integer.MIN_VALUE; for(int i=0;i<5;i++){ Integer ans[]=new Integer[n]; for(int j=0;j<n;j++){ ans[j]=count[j][i]-(total[j]-count[j][i]); } Arrays.sort(ans,Collections.reverseOrder()); int j=0; int r=0; while(j<n && r+ans[j]>0){ r+=ans[j]; j++; } max=Math.max(j,max); } System.out.println(max); } } }",d6fb3b9e,"import java.util.*; public class Sol { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[][]=new int[n][5]; int tot[]=new int[n]; for(int i=0;i<n;i++) { String x = sc.next(); for(int j=0;j<x.length();j++) a[i][x.charAt(j)-'a'] += 1; tot[i]=x.length(); } int max=Integer.MIN_VALUE; for(int i=0;i<5;i++) max=Math.max(max,function(a,n,i,tot)); System.out.println(max); } } static int function(int a[][],int n,int i,int tot[]) { Integer ans[] = new Integer[n]; for(int j=0;j<n;j++) ans[j]=a[j][i]-(tot[j]-a[j][i]); int res=0,j=0; Arrays.sort(ans,Collections.reverseOrder()); while(j<n&&res+ans[j]>0) res+=ans[j++]; return j; } }",0.747085906617916,15,1
bd3051e3,"import java.io.*; import java.util.*; public class Main { static BufferedReader br; static PrintWriter pr; static int cin() throws Exception { return Integer.valueOf(br.readLine()); } static int[] split() throws Exception { String[] cmd=br.readLine().split("" ""); int[] ans=new int[cmd.length]; for(int i=0;i<cmd.length;i++) { ans[i]=Integer.valueOf(cmd[i]); } return ans; } public static void main(String[] args) throws Exception{ br=new BufferedReader(new InputStreamReader(System.in)); pr=new PrintWriter(new OutputStreamWriter(System.out)); int cases=cin(); while(cases!=0) { cases--; int[]ar=split(); int n=ar[0]; int m=ar[1]; int[][]mat=new int[n][m]; for(int i=0;i<n;i++) { String s=br.readLine(); for(int j=0;j<m;j++) { mat[i][j]=s.charAt(j)-'0'; } } ArrayList<String>ans=new ArrayList<>(); for(int i=0;i<n-1;i++) { for(int j=0;j<m-1;j++) { if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+2)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } mat[i][j]=mat[i+1][j]=mat[i][j+1]=mat[i+1][j+1]=0; } } System.out.println(ans.size()); for(int i=0;i<ans.size();i++) { System.out.println(ans.get(i)); } } } }",e2e37533,"import java.io.*; import java.util.*; public class Main { static BufferedReader br; static PrintWriter pr; static int cin() throws Exception { return Integer.valueOf(br.readLine()); } static int[] split() throws Exception { String[] cmd=br.readLine().split("" ""); int[] ans=new int[cmd.length]; for(int i=0;i<cmd.length;i++) { ans[i]=Integer.valueOf(cmd[i]); } return ans; } public static void main(String[] args) throws Exception{ br=new BufferedReader(new InputStreamReader(System.in)); pr=new PrintWriter(new OutputStreamWriter(System.out)); int cases=cin(); while(cases!=0) { cases--; int[]ar=split(); int n=ar[0]; int m=ar[1]; int[][]mat=new int[n][m]; for(int i=0;i<n;i++) { String s=br.readLine(); for(int j=0;j<m;j++) { mat[i][j]=s.charAt(j)-'0'; } } ArrayList<String>ans=new ArrayList<>(); for(int i=0;i<n-1;i++) { for(int j=0;j<m-1;j++) { if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==0) { ans.add((i+2)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==1 && mat[i][j+1]==0 && mat[i+1][j]==0 && mat[i+1][j+1]==1) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)); ans.add((i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } else if(mat[i][j]==0 && mat[i][j+1]==1 && mat[i+1][j]==1 && mat[i+1][j+1]==0) { ans.add((i+1)+"" ""+(j+1)+"" ""+(i+1)+"" ""+(j+2)+"" ""+(i+2)+"" ""+(j+2)); ans.add((i+1)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+1)+"" ""+(i+2)+"" ""+(j+2)); } mat[i][j]=mat[i+1][j]=mat[i][j+1]=mat[i+1][j+1]=0; } } System.out.println(ans.size()); for(int i=0;i<ans.size();i++) { System.out.println(ans.get(i)); } } } }",1.0,10,1
bdfe8110,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class E { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",c57a973e,"import java.io.BufferedReader; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Air { public static void main(String[] args) { FastScanner sc = new FastScanner(); int T = sc.nextInt(); for(int tt=0; tt<T;tt++){ int n = sc.nextInt(), k=sc.nextInt(); int [] positions=new int[k], temp=new int[k]; for (int i=0;i<k;i++) positions[i]=sc.nextInt(); for (int i=0;i<k;i++) temp[i]=sc.nextInt(); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0;i<k;i++) forced[positions[i]-1]=temp[i]; for (int i=1;i<n;i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2;i>=0;i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0;i<n;i++) System.out.print(forced[i]+"" ""); System.out.println(); } } }",0.80395077810235,8,1
bdfe8110,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class E { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",e6a6e318,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class solution { public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(), k=s.nextInt(); int[] a=s.readArray(k), temp=s.readArray(k); long[] ans=new long[n]; Arrays.fill(ans, Integer.MAX_VALUE); for (int i=0; i<k; i++) { ans[a[i]-1]=temp[i]; } for (int i=1; i<n; i++) { ans[i]=Math.min(ans[i],ans[i-1]+1); } for (int i=n-2; i>=0; i--) { ans[i]=Math.min(ans[i],ans[i+1]+1); } for (int i=0; i<n; i++) { out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.5440478573043338,8,1
bdfe8110,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; public class E { public static void main(String[] args) { FastScanner fs=new FastScanner(); int T=fs.nextInt(); PrintWriter out=new PrintWriter(System.out); for (int tt=0; tt<T; tt++) { int n=fs.nextInt(), k=fs.nextInt(); int[] positions=fs.readArray(k), temps=fs.readArray(k); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0; i<k; i++) forced[positions[i]-1]=temps[i]; for (int i=1; i<n; i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2; i>=0; i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0; i<n; i++) out.print(forced[i]+"" ""); out.println(); } out.close(); } }",fadc1365,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a{ public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(),k=s.nextInt(); int pos[]=s.readArray(k); int temp[]=s.readArray(k); long ans[]=new long[n]; Arrays.fill(ans,Integer.MAX_VALUE); for(int i=0;i<k;i++){ ans[pos[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++){ out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.5486987498587582,8,1
bf0df1d5,"import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; import java.io.IOException; public class C_Phoenix_and_Towers { public static class Pair implements Comparable<Pair> { int id, h; public Pair(int id, int h) { this.id = id; this.h = h; } } public static void main(String[] args) throws java.lang.Exception { FastReader sc = new FastReader(); int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int m = sc.nextInt(); int x = sc.nextInt(); int tow[] = new int[n]; int ans[] = new int[n]; PriorityQueue<Pair> pq = new PriorityQueue<>(); for (int i = 0; i < n; i++) { tow[i] = sc.nextInt(); } for (int i = 0; i < m; i++) { ans[i] = i + 1; pq.add(new Pair(i + 1, tow[i])); } for (int i = m; i < n; i++) { Pair p = pq.poll(); p.h = p.h + tow[i]; ans[i] = p.id; pq.add(p); } System.out.println(""YES""); for (int i = 0; i < n; i++) { System.out.print(ans[i] + "" ""); } System.out.println(); } } }",ea899386,"import java.io.*; import java.util.*; public class Codeforces { public static class Tower implements Comparable<Tower>{ int val; int index; public Tower(int ind, int v) { val = v; index = ind; } } public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int cases = Integer.parseInt(br.readLine()); while(cases-- > 0) { String[] str = br.readLine().split("" ""); int n = Integer.parseInt(str[0]); int m = Integer.parseInt(str[1]); int x = Integer.parseInt(str[2]); int[] h = new int[n]; str = br.readLine().split("" ""); for(int i=0; i<n; i++) { h[i] = Integer.parseInt(str[i]); } PriorityQueue<Tower> q = new PriorityQueue<>(m); int[] ans = new int[n]; for(int i=0; i<m; i++) { q.add(new Tower(i, h[i])); ans[i] = i; } for(int i=m; i<n; i++) { Tower lowest = q.poll(); lowest.val += h[i]; ans[i] = lowest.index; q.add(lowest); } System.out.println(""YES""); for(int i=0; i<n; i++) { System.out.print((ans[i]+1) + "" ""); } System.out.println(); } } }",0.5205324032964566,9,1
c57a973e,"import java.io.BufferedReader; import java.io.FileNotFoundException; import java.io.FileReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Air { public static void main(String[] args) { FastScanner sc = new FastScanner(); int T = sc.nextInt(); for(int tt=0; tt<T;tt++){ int n = sc.nextInt(), k=sc.nextInt(); int [] positions=new int[k], temp=new int[k]; for (int i=0;i<k;i++) positions[i]=sc.nextInt(); for (int i=0;i<k;i++) temp[i]=sc.nextInt(); int[] forced=new int[n]; Arrays.fill(forced, Integer.MAX_VALUE/2); for (int i=0;i<k;i++) forced[positions[i]-1]=temp[i]; for (int i=1;i<n;i++) forced[i]=Math.min(forced[i], forced[i-1]+1); for (int i=n-2;i>=0;i--) forced[i]=Math.min(forced[i], forced[i+1]+1); for (int i=0;i<n;i++) System.out.print(forced[i]+"" ""); System.out.println(); } } }",fa484fdd,"import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.Arrays; import java.util.InputMismatchException; public class AirConditioners { static InputReader inputReader=new InputReader(System.in); static void solve() { int n=inputReader.nextInt(); int k=inputReader.nextInt(); int pos[]=inputReader.nextIntArray(k); int power[]=inputReader.nextIntArray(k); int answer[]=new int[n]; Arrays.fill(answer,(int)(2e9)); for (int i=0;i<k;i++) { answer[pos[i]-1]=power[i]; } for (int i=1;i<n;i++) { answer[i]=Math.min(answer[i],answer[i-1]+1); } for (int i=n-2;i>=0;i--) { answer[i]=Math.min(answer[i],answer[i+1]+1); } for (int i=0;i<n;i++) { out.print(answer[i]+"" ""); } } static PrintWriter out=new PrintWriter((System.out)); public static void main(String args[])throws IOException { int t=inputReader.nextInt(); while(t-->0) { solve(); out.println(); } out.close(); } }",0.4771697096765481,8,1
c9da41af,"import java.util.*; import java.lang.*; import java.io.*; public class Main { static { try { System.setIn(new FileInputStream(""input.txt"")); System.setOut(new PrintStream(new FileOutputStream(""output.txt""))); } catch (Exception e) {} } void solve() { int n = in.nextInt(); ArrayList<Edge>[] graph = new ArrayList[n + 1]; for (int i = 0; i < n; i++) { graph[i] = new ArrayList<Edge>(); } for (int i = 0; i < n - 1; i++) { int u = in.nextInt(); int v = in.nextInt(); v--; u--; graph[u].add(new Edge(v, i)); graph[v].add(new Edge(u, i)); } int[] res = new int[n - 1]; for (int i = 0; i < n; i++) { if (graph[i].size() > 2) { out.append(""-1\n""); return; } } int start = -1; for (int i = 0; i < n; i++) { if (graph[i].size() == 1) { start = i; break; } } int currNode = start; int prevNode = -1; int weight = 2; while (true) { ArrayList<Edge> edges = graph[currNode]; Edge next = edges.get(0); if (next.node == prevNode) { if (edges.size() == 1) { break; } next = edges.get(1); } res[next.index] = weight; weight = 5 - weight; prevNode = currNode; currNode = next.node; } for (int i = 0; i < n - 1; i++) { out.append(res[i] + "" ""); } out.append(""\n""); } public static void main (String[] args) { Main sol = new Main(); int t = 1; t = in.nextInt(); while (t-- != 0) { sol.solve(); } System.out.print(out); } void print(int s) { System.out.print(s); } static FastReader in; static StringBuffer out; final int MAX; final int MIN; int mod ; Main() { in = new FastReader(); out = new StringBuffer(); MAX = Integer.MAX_VALUE; MIN = Integer.MIN_VALUE; mod = (int)1e9 + 7; } } class Edge { int node, index; Edge(int node, int index) { this.node = node; this.index = index; } }",f59d9b6e,"import java.util.*; import java.lang.*; import java.io.*; public class Codechef{ public static class Edge{ int node; int index; Edge(int node, int index){ this.node = node; this.index = index; } } static Scanner scn = new Scanner(System.in); public static void main (String[] args) throws java.lang.Exception{ int t = scn.nextInt(); while(t-->0){ solve(); } } public static void solve(){ int n = scn.nextInt(); ArrayList<Edge>[]graph = new ArrayList[n]; for(int i = 0; i < n; i++){ graph[i] = new ArrayList<>(); } for(int i = 0; i < n - 1; i++){ int u = scn.nextInt() - 1; int v = scn.nextInt() - 1; graph[u].add(new Edge(v, i)); graph[v].add(new Edge(u, i)); } int start = 0; for(int i = 0; i < n; i++){ if(graph[i].size() > 2){ System.out.println(""-1""); return; }else if(graph[i].size() == 1){ start = i; } } int[]weight = new int[n - 1]; int prevNode = -1, curNode = start, curWeight = 2; while(true){ ArrayList<Edge>edges = graph[curNode]; Edge next = edges.get(0); if(next.node == prevNode){ if(edges.size() == 1){ break; }else{ next = edges.get(1); } } weight[next.index] = curWeight; prevNode = curNode; curNode = next.node; curWeight = 5 - curWeight; } for(int i = 0; i < n - 1; i++){ System.out.print(weight[i]); System.out.print("" ""); } System.out.println(); } }",0.8223722760347846,3,1
ca0c55ad,"import java.util.*; public class ss { public static void main(String[]args) { Scanner in=new Scanner (System.in); int t=in.nextInt(); for(int i1=0;i1<t;i1++) { int n=in.nextInt(); long[] ar=new long[n]; for(int i=0;i<n;i++) { ar[i]=in.nextLong(); } long[] ans=new long[n]; ans[0]=ar[0]*n; long m=ar[0]; long s1=ar[0]; for(int i=2;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } ans[1]=ar[1]*n; m=ar[1]; s1=ar[1]; for(int i=3;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } long mini=ans[0]+ans[1]; for(int i=1;i<n-1;i++) { mini=Math.min(ans[i]+ans[i+1],mini); } System.out.println(mini); } } }",e14d1ba0,"import java.util.*; public class ss { public static void main(String[]args) { Scanner in=new Scanner (System.in); int t=in.nextInt(); for(int i1=0;i1<t;i1++) { int n=in.nextInt(); long[] ar=new long[n]; for(int i=0;i<n;i++) { ar[i]=in.nextLong(); } long[] ans=new long[n]; ans[0]=ar[0]*n; long m=ar[0]; long s1=ar[0]; for(int i=2;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } ans[1]=ar[1]*n; m=ar[1]; s1=ar[1]; for(int i=3;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } long mini=ans[0]+ans[1]; for(int i=1;i<n-1;i++) { mini=Math.min(ans[i]+ans[i+1],mini); } System.out.println(mini); } } }",1.0,18,1
cc9230d3,"import java.io.BufferedReader; import java.util.StringTokenizer; import java.io.InputStreamReader; import java.io.IOException; import java.io.PrintWriter; import java.util.ArrayList; public class C { static int[][] lr = new int[2][(int)2e5+10]; static long[][] dp = new long[2][(int)2e5+10]; static ArrayList<ArrayList<Integer>> g; public static void main(String[] args) { FastReader fr = new FastReader(); PrintWriter out = new PrintWriter(System.out, true); int cases = fr.nextInt(); for(int c = 0; c < cases; c++) { int nodes = fr.nextInt(); g = new ArrayList<ArrayList<Integer>>(); for(int i = 1; i <= nodes; i++) { lr[0][i] = fr.nextInt(); lr[1][i] = fr.nextInt(); } for(int i = 0; i <= nodes; i++) { g.add(new ArrayList<Integer>()); } for(int i = 0; i < nodes-1; i++) { int f = fr.nextInt(); int t = fr.nextInt(); g.get(f).add(t); g.get(t).add(f); } DFS(1, -1); out.write(Math.max(dp[0][1], dp[1][1]) + ""\n""); } out.close(); } static void DFS(int v, int p) { dp[0][v] = dp[1][v] = 0; for(Integer u : g.get(v)) { if (u == p) continue; DFS(u, v); dp[0][v] += Math.max(Math.abs(lr[0][v] - lr[1][u]) + dp[1][u], dp[0][u] + Math.abs(lr[0][v] - lr[0][u])); dp[1][v] += Math.max(Math.abs(lr[1][v] - lr[1][u]) + dp[1][u], dp[0][u] + Math.abs(lr[1][v] - lr[0][u])); } } }",ec558d69,"import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; public class Main { static int N=(int)2e5+10; static int[][] A=new int[2][N]; static long[][] dp=new long[2][N]; static ArrayList<ArrayList<Integer>> links=new ArrayList<>(N); static { for (int i=0;i<N;i++) links.add(new ArrayList<>()); } static void dfs(int v,int p) { dp[0][v]=dp[1][v]=0; for (Integer link :links.get(v)) { if (link==p) continue; dfs(link,v); dp[0][v]+=Math.max(Math.abs(A[0][v]-A[0][link])+dp[0][link],Math.abs(A[0][v]-A[1][link])+dp[1][link]); dp[1][v]+=Math.max(Math.abs(A[1][v]-A[0][link])+dp[0][link],Math.abs(A[1][v]-A[1][link])+dp[1][link]); } } public static void main (String[] args) throws Exception { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int t=Integer.parseInt(br.readLine()),n,i; while (t-->0) { n=Integer.parseInt(br.readLine()); for (i=1;i<=n;i++) { String[] in=br.readLine().split("" ""); A[0][i]=Integer.parseInt(in[0]); A[1][i]=Integer.parseInt(in[1]); links.set(i,new ArrayList<>()); } for (i=1;i<n;i++) { String[] in=br.readLine().split("" ""); int a=Integer.parseInt(in[0]); int b=Integer.parseInt(in[1]); links.get(a).add(b); links.get(b).add(a); } dfs(1,-1); System.out.println(Math.max(dp[0][1],dp[1][1])); } } }",0.516154704123661,1,1
ccc8ef27,"import java.util.*; public class Sol { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[][]=new int[n][5]; int tot[]=new int[n]; for(int i=0;i<n;i++) { String x = sc.next(); for(int j=0;j<x.length();j++) a[i][x.charAt(j)-'a'] += 1; tot[i]=x.length(); } int max=Integer.MIN_VALUE; for(int i=0;i<5;i++) max=Math.max(max,function(a,n,i,tot)); System.out.println(max); } } static int function(int a[][],int n,int i,int tot[]) { Integer ans[] = new Integer[n]; for(int j=0;j<n;j++) ans[j]=a[j][i]-(tot[j]-a[j][i]); int res=0,j=0; Arrays.sort(ans,Collections.reverseOrder()); while(j<n&&res+ans[j]>0) res+=ans[j++]; return j; } }",d6fb3b9e,"import java.util.*; public class Sol { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while(t-->0) { int n = sc.nextInt(); int a[][]=new int[n][5]; int tot[]=new int[n]; for(int i=0;i<n;i++) { String x = sc.next(); for(int j=0;j<x.length();j++) a[i][x.charAt(j)-'a'] += 1; tot[i]=x.length(); } int max=Integer.MIN_VALUE; for(int i=0;i<5;i++) max=Math.max(max,function(a,n,i,tot)); System.out.println(max); } } static int function(int a[][],int n,int i,int tot[]) { Integer ans[] = new Integer[n]; for(int j=0;j<n;j++) ans[j]=a[j][i]-(tot[j]-a[j][i]); int res=0,j=0; Arrays.sort(ans,Collections.reverseOrder()); while(j<n&&res+ans[j]>0) res+=ans[j++]; return j; } }",0.9999999999999997,15,1
d23b398c,"import java.util.*; import java.io.*; public class minimum_grid_path { public static void main(String[] args) throws IOException{ BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer line = new StringTokenizer(in.readLine()); int t = Integer.parseInt(line.nextToken()); for(int i1=0;i1<t;i1++) { line = new StringTokenizer(in.readLine()); int n = Integer.parseInt(line.nextToken()); long[] ar = new long[n]; line = new StringTokenizer(in.readLine()); for(int i=0;i<n;i++) { ar[i] = Long.parseLong(line.nextToken()); } long[] ans=new long[n]; ans[0]=ar[0]*n; long m=ar[0]; long s1=ar[0]; for(int i=2;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } ans[1]=ar[1]*n; m=ar[1]; s1=ar[1]; for(int i=3;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } long mini=ans[0]+ans[1]; for(int i=1;i<n-1;i++) { mini=Math.min(ans[i]+ans[i+1],mini); } System.out.println(mini); } } }",e14d1ba0,"import java.util.*; public class ss { public static void main(String[]args) { Scanner in=new Scanner (System.in); int t=in.nextInt(); for(int i1=0;i1<t;i1++) { int n=in.nextInt(); long[] ar=new long[n]; for(int i=0;i<n;i++) { ar[i]=in.nextLong(); } long[] ans=new long[n]; ans[0]=ar[0]*n; long m=ar[0]; long s1=ar[0]; for(int i=2;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } ans[1]=ar[1]*n; m=ar[1]; s1=ar[1]; for(int i=3;i<n;i+=2) { if(m>ar[i]) { m=ar[i]; } s1+=ar[i]; ans[i]=s1-m+m*(n-i/2); } long mini=ans[0]+ans[1]; for(int i=1;i<n-1;i++) { mini=Math.min(ans[i]+ans[i+1],mini); } System.out.println(mini); } } }",0.8475693597401489,18,1
d55c238c,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.*; import java.io.BufferedReader; import java.io.InputStreamReader; public class First { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); TaskA solver = new TaskA(); int t; t = in.nextInt(); while (t > 0) { solver.call(in,out); t--; } out.close(); } static class TaskA { public void call(InputReader in, PrintWriter out) { int n, m, x; n = in.nextInt(); m = in.nextInt(); x = in.nextInt(); int[] arr = new int[n]; answer[] array = new answer[n]; int[] ar = new int[n]; for (int i = 0; i < n; i++) { arr[i] = in.nextInt(); array[i] = new answer(arr[i],i); } long[] ans = new long[m]; Arrays.sort(array); int a = 0 , b = 0; while(true){ for (int i = 0; i < m; i++) { ar[b] = i+1; b++; if(b==n){ break; } } if(b==n){ break; } for (int i = m-1; i >= 0; i--) { ar[b] = i+1; b++; if(b==n){ break; } } if(b==n){ break; } } for (int i = 0; i < n; i++) { ans[ar[i]-1] += array[i].a; } for (int i = 0; i < m-1; i++) { if(Math.abs(ans[i]- ans[i+1])>x){ out.println(""NO""); return; } } out.println(""YES""); int[] answer = new int[n]; for (int i = 0; i < n; i++) { answer[array[i].b] = ar[i]; } for (int i = 0; i < n; i++) { out.print(answer[i]+"" ""); } out.println(); } } static class answer implements Comparable<answer>{ int a; int b; public answer(int a, int b) { this.a = a; this.b = b; } } static void sort(long[] a) { ArrayList<Long> l=new ArrayList<>(); for (Long i:a) l.add(i); l.sort(Collections.reverseOrder()); for (int i=0; i<a.length; i++) a[i]=l.get(i); } static final Random random=new Random(); }",ebce9e39,"import java.io.OutputStream; import java.io.IOException; import java.io.InputStream; import java.io.PrintWriter; import java.util.*; import java.io.BufferedReader; import java.io.InputStreamReader; public class First { public static void main(String[] args) { InputStream inputStream = System.in; OutputStream outputStream = System.out; InputReader in = new InputReader(inputStream); PrintWriter out = new PrintWriter(outputStream); TaskA solver = new TaskA(); int t; t = in.nextInt(); while (t > 0) { solver.call(in,out); t--; } out.close(); } static class TaskA { public void call(InputReader in, PrintWriter out) { int n, m, x; n = in.nextInt(); m = in.nextInt(); x = in.nextInt(); int[] arr = new int[n]; answer[] array = new answer[n]; int[] ar = new int[n]; for (int i = 0; i < n; i++) { arr[i] = in.nextInt(); array[i] = new answer(arr[i],i); } long[] ans = new long[m]; Arrays.sort(array); int a = 0 , b = 0; while(true){ for (int i = 0; i < m; i++) { ar[b] = i+1; b++; if(b==n){ break; } } if(b==n){ break; } for (int i = m-1; i >= 0; i--) { ar[b] = i+1; b++; if(b==n){ break; } } if(b==n){ break; } } for (int i = 0; i < n; i++) { ans[ar[i]-1] += array[i].a; } for (int i = 0; i < m-1; i++) { if(Math.abs(ans[i]- ans[i+1])>x){ out.println(""NO""); return; } } out.println(""YES""); int[] answer = new int[n]; for (int i = 0; i < n; i++) { answer[array[i].b] = ar[i]; } for (int i = 0; i < n; i++) { out.print(answer[i]+"" ""); } out.println(); } } static class answer implements Comparable<answer>{ int a; int b; public answer(int a, int b) { this.a = a; this.b = b; } } static void sort(long[] a) { ArrayList<Long> l=new ArrayList<>(); for (Long i:a) l.add(i); l.sort(Collections.reverseOrder()); for (int i=0; i<a.length; i++) a[i]=l.get(i); } static final Random random=new Random(); }",0.9999999999999976,9,1
d9199dfd,"import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; import java.util.Collections; import java.util.HashMap; import java.util.Scanner; public class Simple{ public static void main(String args[]){ Scanner s = new Scanner(System.in); int t = s.nextInt(); while (t>0){ int n = s.nextInt(); int arr[] = new int[n]; for(int i=0;i<n;i++){ arr[i] = s.nextInt(); } String str = s.next(); ArrayList<Integer> blue = new ArrayList<>(); ArrayList<Integer> red = new ArrayList<>(); for(int i=0;i<n;i++){ if(str.charAt(i)=='R'){ red.add(arr[i]); } else{ blue.add(arr[i]); } } Collections.sort(red); Collections.sort(blue); int start =1; boolean bool =true; for(int i=0;i<blue.size();i++){ if(blue.get(i)<start){ bool = false; break; } start++; } if(!bool){ System.out.println(""NO""); } else{ for(int i=0;i<red.size();i++){ if(red.get(i)>start){ bool = false; break; } start++; } if(bool){ System.out.println(""YES""); } else{ System.out.println(""NO""); } } t--; } s.close(); } }",fb312dc6,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.ArrayList; import java.util.Collections; import java.util.StringTokenizer; public class D { public static void main(String[] args) { FastScanner sc=new FastScanner(); int t=sc.nextInt(); PrintWriter pw=new PrintWriter(System.out); while(t-->0) { int n=sc.nextInt(); int[] a=sc.readArray(n); char[] s=sc.next().toCharArray(); boolean ok=true; ArrayList<Integer> blues=new ArrayList<>(); ArrayList<Integer> reds=new ArrayList<>(); for(int i=0;i<n;i++){ if(s[i]=='B'){ blues.add(a[i]); } else { reds.add(a[i]); } } Collections.sort(blues); Collections.sort(reds); for(int i=0;i<blues.size();i++){ if(blues.get(i)<(i+1)){ ok=false; break; } } int start=blues.size()+1; for(int i=0;i<reds.size();i++){ if(reds.get(i)>(start++)){ ok=false; break; } } if(ok){ pw.println(""YES""); } else { pw.println(""NO""); } } pw.flush(); } }",0.5364806283536219,20,1
e1c4f3db,"import java.util.*; public class BalancedStoneHeaps { public static boolean check(int n, int x, int[] h) { int[] c_h = new int[n]; for (int i = 0; i < n; i++) c_h[i] = h[i]; for (int i = n - 1; i >= 2; i--) { if (c_h[i] < x) return false; int d = Math.min(h[i], c_h[i] - x) / 3; c_h[i - 1] += d; c_h[i - 2] += 2 * d; } return c_h[0] >= x && c_h[1] >= x; } public static void main(String[] args) { Scanner sc = new Scanner(System.in); int t = sc.nextInt(); while (t-- > 0) { int n = sc.nextInt(); int[] h = new int[n]; int max = Integer.MIN_VALUE; for (int i = 0; i < n; i++) { h[i] = sc.nextInt(); if (h[i] > max) { max = h[i]; } } int l = 0; int r = max; while (l < r) { int mid = l + (r - l + 1) / 2; if (check(n, mid, h)) { l = mid; } else { r = mid - 1; } } System.out.println(l); } } }",e81b2d16,"import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class fastTemp { static int n; static int arr[]; public static void main(String[] args) { FastReader fs = new FastReader(); int t = fs.nextInt(); while(t-- >0){ n = fs.nextInt(); arr = new int[n]; int max = Integer.MIN_VALUE; for(int i=0;i<n;i++){ arr[i] = fs.nextInt(); if(max<arr[i]){ max =arr[i]; } } int l=1; int r = max; int ans = 0; while(l<r){ int mid = l + (r-l+1)/2; if(check(mid)){ l = mid; }else{ r = mid-1; } } System.out.println(l); } } static int min = Integer.MAX_VALUE; public static boolean check(int x){ int ar[] = new int[n]; for(int i=0;i<n;i++){ ar[i] = arr[i]; } for(int i=n-1;i>=2;i--){ if(ar[i]<x){ return false; } int d = (Math.min(arr[i],ar[i]-x))/3; ar[i-1] += d; ar[i-2] += 2*d; } return ar[0]>=x && ar[1]>=x; } }",0.6333950965135664,16,1
e6a6e318,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class solution { public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(), k=s.nextInt(); int[] a=s.readArray(k), temp=s.readArray(k); long[] ans=new long[n]; Arrays.fill(ans, Integer.MAX_VALUE); for (int i=0; i<k; i++) { ans[a[i]-1]=temp[i]; } for (int i=1; i<n; i++) { ans[i]=Math.min(ans[i],ans[i-1]+1); } for (int i=n-2; i>=0; i--) { ans[i]=Math.min(ans[i],ans[i+1]+1); } for (int i=0; i<n; i++) { out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",fadc1365,"import java.io.PrintWriter; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class a{ public static void main(String args[]) throws java.lang.Exception{ FastScanner s=new FastScanner(); PrintWriter out=new PrintWriter(System.out); int t=s.nextInt(); for(int tt=0;tt<t;tt++) { int n=s.nextInt(),k=s.nextInt(); int pos[]=s.readArray(k); int temp[]=s.readArray(k); long ans[]=new long[n]; Arrays.fill(ans,Integer.MAX_VALUE); for(int i=0;i<k;i++){ ans[pos[i]-1]=temp[i]; } for(int i=1;i<n;i++){ ans[i]=Math.min(ans[i-1]+1,ans[i]); } for(int i=n-2;i>=0;i--){ ans[i]=Math.min(ans[i],ans[i+1]+1); } for(int i=0;i<n;i++){ out.print(ans[i]+"" ""); } out.println(); } out.close(); } }",0.9864628805019945,8,1
fc7dfa16,"import java.util.*; import java.io.*; public class C { static class Scan { private byte[] buf=new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in=System.in; } public int scan()throws IOException { if(total<0) throw new InputMismatchException(); if(index>=total) { index=0; total=in.read(buf); if(total<=0) return -1; } return buf[index++]; } public int scanInt()throws IOException { int integer=0; int n=scan(); while(isWhiteSpace(n)) n=scan(); int neg=1; if(n=='-') { neg=-1; n=scan(); } while(!isWhiteSpace(n)) { if(n>='0'&&n<='9') { integer*=10; integer+=n-'0'; n=scan(); } else throw new InputMismatchException(); } return neg*integer; } private boolean isWhiteSpace(int n) { if(n==' '||n=='\n'||n=='\r'||n=='\t'||n==-1) return true; return false; } } static int n; static long arr[]; public static void main(String args[]) throws IOException { Scan input=new Scan(); StringBuilder ans=new StringBuilder(""""); int test=input.scanInt(); for(int tt=1;tt<=test;tt++) { n=input.scanInt(); arr=new long[n]; for(int i=0;i<n;i++) { arr[i]=input.scanInt(); } ans.append(solve()+""\n""); } System.out.println(ans); } public static long solve() { long ans=Long.MAX_VALUE; long r_min=Long.MAX_VALUE,u_min=Long.MAX_VALUE; long r_rem=n,u_rem=n,sum=0; for(int i=0;i<n;i++) { if(i%2==0) { r_min=Math.min(r_min,arr[i]); r_rem--; } else { u_min=Math.min(u_min,arr[i]); u_rem--; } sum+=arr[i]; if(i==0) { continue; } ans=Math.min(ans,sum+(r_rem*r_min)+(u_rem*u_min)); } r_min=Long.MAX_VALUE; u_min=Long.MAX_VALUE; r_rem=n; u_rem=n; sum=0; for(int i=0;i<n;i++) { if(i%2==1) { r_min=Math.min(r_min,arr[i]); r_rem--; } else { u_min=Math.min(u_min,arr[i]); u_rem--; } sum+=arr[i]; if(i==0) { continue; } ans=Math.min(ans,sum+(r_rem*r_min)+(u_rem*u_min)); } return ans; } }",fe94ee2f,"import java.util.*; import java.io.*; public class C { static class Scan { private byte[] buf=new byte[1024]; private int index; private InputStream in; private int total; public Scan() { in=System.in; } public int scan()throws IOException { if(total<0) throw new InputMismatchException(); if(index>=total) { index=0; total=in.read(buf); if(total<=0) return -1; } return buf[index++]; } public int scanInt()throws IOException { int integer=0; int n=scan(); while(isWhiteSpace(n)) n=scan(); int neg=1; if(n=='-') { neg=-1; n=scan(); } while(!isWhiteSpace(n)) { if(n>='0'&&n<='9') { integer*=10; integer+=n-'0'; n=scan(); } else throw new InputMismatchException(); } return neg*integer; } private boolean isWhiteSpace(int n) { if(n==' '||n=='\n'||n=='\r'||n=='\t'||n==-1) return true; return false; } } static int n; static long arr[]; public static void main(String args[]) throws IOException { Scan input=new Scan(); StringBuilder ans=new StringBuilder(""""); int test=input.scanInt(); for(int tt=1;tt<=test;tt++) { n=input.scanInt(); arr=new long[n]; for(int i=0;i<n;i++) { arr[i]=input.scanInt(); } ans.append(solve()+""\n""); } System.out.println(ans); } public static long solve() { long ans=Long.MAX_VALUE; long r_min=Long.MAX_VALUE,u_min=Long.MAX_VALUE; long r_rem=n,u_rem=n,sum=0; for(int i=0;i<n;i++) { if(i%2==0) { r_min=Math.min(r_min,arr[i]); r_rem--; } else { u_min=Math.min(u_min,arr[i]); u_rem--; } sum+=arr[i]; if(i==0) { continue; } ans=Math.min(ans,sum+(r_rem*r_min)+(u_rem*u_min)); } r_min=Long.MAX_VALUE; u_min=Long.MAX_VALUE; r_rem=n; u_rem=n; sum=0; for(int i=0;i<n;i++) { if(i%2==1) { r_min=Math.min(r_min,arr[i]); r_rem--; } else { u_min=Math.min(u_min,arr[i]); u_rem--; } sum+=arr[i]; if(i==0) { continue; } ans=Math.min(ans,sum+(r_rem*r_min)+(u_rem*u_min)); } return ans; } }",1.0000000000000002,18,1
